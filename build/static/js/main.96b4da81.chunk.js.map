{"version":3,"sources":["misc/firebase.js","Contexts/user.context.js","misc/PrivateRoute.js","images/landing-train.jpg","Components/misc/Footer.js","misc/Alert.js","Components/Pages/JoinForm.js","Components/Pages/SignInModal.js","Components/Pages/Landing.js","Contexts/theme.context.js","Database/DBHelper.js","Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/index.js","Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/HarwareDataDB.js","Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/SoftwareDataDB.js","Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/ComponentItemDB.js","Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB.js","Database/SystemDB/RevisionDB/SubSystemDB/SubSystemDB.js","Database/SystemDB/RevisionDB/RevisionDB.js","Components/misc/Helper Components/ButtonToggle.js","Components/misc/HeaderBar.js","Database/SystemDB/SystemDB.js","misc/helperfunc.js","Components/SideBar/System/SystemOptions.js","Components/misc/Helper Components/HoverShowAll.js","Components/SideBar/System/Rev List/Revision/Revision.js","misc/customHooks.js","Components/SideBar/System/Rev List/RevList.js","Components/SideBar/System/System.js","Components/SideBar/SystemModal/NewSystemModal.js","Components/SideBar/SideBar.js","Components/MainStage/MainStage.js","Components/MainStage/Extensions/DefaultMainStage.js","Contexts/toolbar.context.js","Database/SystemDB/RevisionDB/NotesDB/NotesDB.js","Components/MainStage/misc/NotesDrawer.js","Components/MainStage/misc/SavedIndicator.js","Components/misc/Custom Panel/CustomPanel.js","Components/misc/Custom Panel/GridHeader.js","Components/MainStage/SubSystem/ComponentHandler/Comp/CompItem/CompItemOptions.js","Components/Custom Inputs/MyDateInput.js","Components/Custom Inputs/MyNumberInput.js","Components/MainStage/SubSystem/ComponentHandler/Comp/CompItem/Local Inputs/HardInput.js","Components/MainStage/SubSystem/ComponentHandler/Comp/CompItem/Local Inputs/SoftInput.js","Components/MainStage/SubSystem/ComponentHandler/Comp/CompItem/CompItem.js","Components/MainStage/SubSystem/ComponentHandler/Comp/Comp.js","Components/MainStage/SubSystem/ComponentHandler/ComponentStatus/misc/CompDeleteModal.js","Components/MainStage/SubSystem/ComponentHandler/ComponentStatus/misc/ActiveComp.js","Components/MainStage/SubSystem/ComponentHandler/ComponentStatus/ComponentStatus.js","Components/MainStage/SubSystem/ComponentHandler/ComponentHandler.js","Components/MainStage/SubSystem/SubSystemNav.js","Components/MainStage/SubSystem/SubSystems.js","Components/MainStage/misc/TitleBar.js","Components/MainStage/misc/ToolBar.js","Components/MainStage/Extensions/NewMainStage.js","Components/Pages/Main.js","misc/PublicRoute.js","Components/Pages/SignInLink.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","getDatabase","auth","getAuth","UserContext","createContext","UserProvider","children","useState","user","setUser","isLoading","setIsLoading","useEffect","onAuthStateChanged","p","Provider","value","useUser","useContext","PrivateRoute","to","MyFooter","style","Footer","clear","position","bottom","width","padding","zIndex","className","Grid","fluid","Row","Col","xs","lg","href","textAlign","type","Alert","PlacementType","TOPCENTER","BOTTOMCENTER","TOPSTART","TOPEND","BOTTOMSTART","BOTTOMEND","checkDuration","d","Number","isInteger","checkPlace","success","msg","place","duration","checkedPlace","toaster","push","Notification","header","closable","placement","warning","info","error","actionCodeSettings","url","handleCodeInApp","JoinForm","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","passwordRetry","setPasswordRetry","console","log","model","Schema","Model","Types","StringType","isRequired","pattern","addRule","handleNewUser","a","check","sendSignInLinkToEmail","then","catch","e","borderRadius","id","Form","onSubmit","height","overflowY","Group","controlId","ControlLabel","Control","onKeyUp","v","target","name","HelpText","tooltip","autoComplete","Button","block","size","appearance","SignInModal","show","onClose","Modal","backdrop","open","Header","Title","Body","signInWithEmailAndPassword","err","message","onClick","Landing","showModal","setShowModal","Container","backgroundImage","landingtrain","marginTop","marginRight","float","color","fontSize","right","ThemeContext","ThemeProvider","theme","CustomProvider","DBHelper","read","DBPARENT","Error","db","ref","get","data","val","create","payLoad","birthdate","firebase","ServerValue","TIMESTAMP","key","onValue","cb","snap","DataDB","componentID","readSpecific","title","update","lastUpdated","set","delete","HardWareDataDB","SoftWareDataDB","ComponentItemDB","NoIDErr","compID","addListener","componentIDs","compIDsArr","Object","keys","i","length","deleteSpecific","compItemID","ComponentDB","subSysID","compItemIDs","compItemIDsArr","SubSystemDB","revID","subSysIDs","subSysIDsArr","RevisionDB","readAll","sysID","revNumber","birthday","updateByKey","deleteAll","revIDs","revIDsArr","ButtonToggle","options","defaultIndex","onChange","justified","selectedIndex","setSelectedIndex","opt","map","handleChange","disp","ButtonToolbar","ButtonGroup","lightDarkDisp","icon","faMoon","faSun","HeaderBar","setTheme","drawIsOpen","setDrawIsOpen","Navbar","Brand","version","Nav","pullRight","marginBottom","Drawer","signOut","SystemDB","owner","technician","sysNumber","partNumber","updates","dispTime","isNaN","Date","toDateString","idObjToArr","obj","saveDocumentToFile","doc","fileName","Packer","toBlob","blob","saveAs","convertSize","x","dispHardSoftData","hardData","softData","loopLen","returnVar","TableRow","TableCell","Paragraph","TextRun","dispComponentItemData","compItems","returnvar","item","Table","rows","dispComponenetData","comps","comp","text","heading","HeadingLevel","HEADING_3","dispSubSystemData","subSys","components","HEADING_2","generateDocument","SYSID","REVID","date","system","revision","subsystems","Document","default","heading1","run","bold","paragraph","spacing","after","heading2","underline","UnderlineType","SINGLE","heading3","listParagraph","paragraphStyles","basedOn","next","quickFormat","before","HEADING_1","toLocaleTimeString","properties","styles","sections","OptionsPopOver","React","forwardRef","handleSelect","rest","Popover","full","Dropdown","Menu","onSelect","n","stopPropagation","Item","eventKey","SystemOptions","onNewRevision","onDeleteSystem","useRef","Whisper","trigger","speaker","current","close","HoverShowAll","Tooltip","Revision","onSelected","timestamp","isSelected","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","hover","t","moment","isNew","subtract","isBefore","selStyle","borderLeft","handleClick","tabIndex","role","styling","onKeyDown","display","format","left","top","RevList","onRevSelected","revSelectedID","revs","setRevs","isUpdating","setIsUpdating","revsRef","revArr","off","useRevisions","marginLeft","Loader","System","isExpanded","setIsExpanded","handleNewRev","validationModel","NumberType","min","NewSystemModal","selectedSystemIndex","setSelectedSystemIndex","setOwner","setTechnician","utfNumber","setutfNumber","setShow","onNewSystem","sysParent","systemChoices","systems","placeholder","accepter","InputPicker","scrollable","defaultValue","InputNumber","Input","SideBar","sysSelectedID","searchText","setSearchText","isDesktop","query","window","matchMedia","matches","setMatches","queryList","listener","evt","removeListener","useMediaQuery","setSystems","sysRef","systemsArr","useSystems","searchResults","filter","sys","toLowerCase","includes","findSearchResults","InputGroup","List","autoScroll","MainStage","newStageComp","defaultComp","isDark","backgroundColor","DefaultMainStage","paddingTop","ToolbarContext","ToolBarProvider","useToolBar","NotesDB","NotesDrawer","isOpen","isEnlarged","setIsEnlarged","getValue","handleUpdate","Actions","as","disabled","CustomPanel","defaultExpand","paddingBottom","flip","GridHeader","dataChildren","actionChildren","CompItemOptions","onTrack","onDelete","MyDateInput","parse","DatePicker","cleanable","sm","md","MyNumberInput","str","inputs","Text","HardInput","itemID","inputType","MyInput","setDisabled","getInitVal","htmlFor","SoftInput","CompItem","parentID","softInputs","Software","input","hardInputs","Hardware","handleDelete","borderBottom","fontWeight","Comp","setCompItems","arr","useCompItems","newCompItem","CompDeleteModal","ActiveComp","ComponentStatus","activeComps","possibleComps","handleCreate","find","ac","ComponentHandler","dataKey","setComps","compArr","useComponents","dataFormat","SubSystemNav","subSystems","selI","setSelI","isActive","btnColor","active","background","possSubs","SubSystems","handleAdd","hasATC","hasACSES","hasGeneral","TitleBar","isDisabled","setIsDisabled","setName","revNum","setRevNum","loadRev","SavedIndicator","persistFor","delayedIsUpdating","setDelayedIsUpdating","clearTimeout","setTimeout","pulse","ToolBar","faUndo","faRedo","borderRight","NewMainStage","setSubSys","sort","b","useSubSystems","setIsOpen","onOpen","useCallback","useModal","Main","setRevID","setSysID","PublicRoute","SignInLink","isSignInWithEmailLink","location","localStorage","getItem","prompt","signInWithEmailLink","removeItem","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96b4da81.chunk.js","sourcesContent":["import { initializeApp} from 'firebase/app';\nimport { getDatabase } from \"firebase/database\";\nimport { getAuth } from \"firebase/auth\";\n\nconst config = {\n    apiKey: \"AIzaSyBWWEHMZLwhbc4VLsmwhvF5Nv1HjxZ15QQ\",\n  authDomain: \"sysdescriptor.firebaseapp.com\",\n  databaseURL: \"https://sysdescriptor-default-rtdb.firebaseio.com\",\n  projectId: \"sysdescriptor\",\n  storageBucket: \"sysdescriptor.appspot.com\",\n  messagingSenderId: \"1070055316533\",\n  appId: \"1:1070055316533:web:bb96f1aab8f9cde30ba57c\",\n  measurementId: \"G-CZ32SF38K8\"\n}\n\nconst app = initializeApp(config);\n\nexport const database = getDatabase(app);\nexport const auth = getAuth(app);","import React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"../misc/firebase\";\n// import { ProfileDB } from \"../Database/ProfileDB\";\n\n\nconst UserContext = createContext();\n\nexport const UserProvider = ({children}) => {\n    const [user, setUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    \n    useEffect(() => {\n        onAuthStateChanged(auth, (p) => {\n            if (p) {\n                setUser(p);\n            } else {\n                setUser(null);\n            }\n            setIsLoading(false);\n        })\n    }, [])\n    \n    return (\n        <UserContext.Provider value={{user, isLoading}}>\n            {children}\n        </UserContext.Provider>\n    );\n}\n\nexport const useUser = () => useContext(UserContext);","import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useUser } from '../Contexts/user.context';\n\nconst PrivateRoute = () => {\n    const {user, isLoading} = useUser();\n\n    return user && !isLoading ? <Outlet /> : <Navigate to=\"/signin\" />;\n}\n\nexport default PrivateRoute;\n\n","export default __webpack_public_path__ + \"static/media/landing-train.6ac10f11.jpg\";","import React from 'react';\nimport { Col, Footer, Grid, Row } from 'rsuite';\n\nconst MyFooter = ({style}) => (\n    <Footer style={{...style, clear: 'both',\n        position: 'fixed',\n        bottom: '0px',\n        width: '100%',\n        padding: '15px',\n        zIndex: 0\n      }}\n\n        className='light-shade-c'\n      >\n        <Grid fluid>\n          <Row>\n            <Col xs={18}>\n              <h5>\n                SysDescriptor\n              </h5>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={4} lg={2}>\n              <a href='/'>Privacy Policy</a>\n            </Col>\n            <Col xs={4} lg={2}>\n              <a href='/'>Terms of Use</a>\n            </Col>\n            <Col xs={4} lg={2}>\n              <a href='/'>Accessibility</a>\n            </Col>\n            <Col xs={12} lg={18}>\n            <div>\n            <p style={{textAlign: 'right'}}>\n               Developed by Siemen Engineer <a href='https://www.linkedin.com/in/keefergregoire/'>Keefer Gregoire</a>\n             </p>\n            </div>\n            </Col>\n          </Row>\n        </Grid>\n    </Footer>\n);\n\n\nexport default MyFooter;","import React from 'react';\nimport { Notification, toaster } from \"rsuite\";\n\n// PlacementType = 'topCenter' | 'bottomCenter' | 'topStart' | 'topEnd' | 'bottomStart' | 'bottomEnd';\n\n\n\nconst type = {\n    success: 'success',\n    error: 'error',\n    warning: 'warning',\n    info: 'info'\n}\n\nconst DEF_DURATION = 1500;\n\nexport default class Alert{\n\n    static PlacementType={\n        TOPCENTER: 'topCenter',\n        BOTTOMCENTER: 'bottomCenter',\n        TOPSTART: 'topStart',\n        TOPEND: 'topEnd',\n        BOTTOMSTART: 'bottomStart',\n        BOTTOMEND: 'bottomend'\n    }\n\n    static checkDuration = d => {\n        if(d && Number.isInteger(d)){\n            return d\n        }\n        return DEF_DURATION;\n    }\n\n    static checkPlace = p => {\n        return this.checkPlace[p] === null ? this.PlacementType.TOPEND : p;\n    }\n    \n    static success = (msg, place=this.PlacementType.TOPEND, duration) => {\n        const checkedPlace = this.checkPlace(place);\n        toaster.push(\n        <Notification \n            header={type.success}  \n            duration={this.checkDuration(duration)} \n            closable\n            type={type.success}\n        >\n            {msg}\n        </Notification>, {placement: checkedPlace});\n    }\n\n    static warning = (msg,place=this.PlacementType.TOPEND, duration) => {\n        const checkedPlace = this.checkPlace(place);\n        toaster.push(\n            <Notification \n                header={type.warning}  \n                duration={this.checkDuration(duration)} \n                closable \n                type={type.warning}\n            >\n                {msg}\n            </Notification>, {placement: checkedPlace});\n    }\n\n    static info = (msg, place=this.PlacementType.TOPEND, duration) => {\n        const checkedPlace = this.checkPlace(place);\n        toaster.push(\n            <Notification \n                header={type.info}  \n                duration={this.checkDuration(duration)} \n                closable\n                type={type.info}\n            >\n                {msg}\n            </Notification>, {placement: checkedPlace});\n    }\n\n    static error = (msg, place=this.PlacementType.TOPEND, duration) => {\n        const checkedPlace = this.checkPlace(place);\n        toaster.push(\n            <Notification \n                header={type.error}  \n                duration={this.checkDuration(duration)} \n                closable\n                type={type.error}\n            >\n                {msg}\n            </Notification>, {placement: checkedPlace});\n    }\n}","import { sendSignInLinkToEmail } from 'firebase/auth';\nimport React, {useState} from 'react'\nimport {Form, Button, Schema} from 'rsuite';\n\nimport Alert from '../../misc/Alert';\n// import { useWindowHeight } from '../../misc/customHooks';\nimport { auth } from '../../misc/firebase';\n\nconst actionCodeSettings = {\n    // URL you want to redirect back to. The domain (www.example.com) for this\n    // URL must be in the authorized domains list in the Firebase Console.\n    url: `https://sysdescriptor.web.app/finishSignUp'`,\n    // This must be true.\n    handleCodeInApp: true \n};\n\n\nexport default function JoinForm() {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordRetry, setPasswordRetry] = useState('');\n\n    console.log(firstName, lastName);\n\n    const model = Schema.Model({\n        firstName: Schema.Types.StringType().isRequired('This field is required'),\n        lastName: Schema.Types.StringType().isRequired('This field is required'),\n        email: Schema.Types.StringType().pattern(/.*@siemens.com/,'A valid Siemens email is required'),\n        password: Schema.Types.StringType().isRequired('This field is required'),\n        passwordRetry: Schema.Types.StringType().addRule(() => {\n            if (password !== passwordRetry) {\n              return false;\n            }\n            return true;\n          }, 'The passwords do not match')\n      })\n  \n  \n      const resetFormState= () => {\n          setFirstName(''); setLastName(''); setEmail(''); setPassword(''); setPasswordRetry('');\n      }\n  \n  \n      const handleNewUser = async () => {\n          if(model.check({firstName, lastName, email, password, passwordRetry})){\n            sendSignInLinkToEmail(auth, email, actionCodeSettings)\n            .then(() => {\n                Alert.success(`An email has been sent to ${email}.  Click the link inside to activate your account`, Alert.PlacementType.TOPCENTER, 4000);\n            })\n            .catch((e) => {\n                console.log(e)\n                Alert.error(\"Unable to generate user account\", Alert.PlacementType.TOPCENTER,4000);\n            })\n            resetFormState();              \n          }\n      }\n\n    return (\n        <div style={{ borderRadius: '5px', padding: '10px', width: '350px'}} id='join-form'>\n            <h2>Join</h2>\n            <p>You must be a Siemens employee to make use of this site</p>\n            <hr/>\n            <Form onSubmit={handleNewUser} model={model}>\n                <div style={{height: `30vh`, overflowY: 'scroll'}}>\n                    <Form.Group controlId='firstName'>\n                    <Form.ControlLabel>First Name</Form.ControlLabel>\n                    <Form.Control onKeyUp={(v)=>setFirstName(v.target.value)} name='firstName'/>\n                    </Form.Group>\n                    <Form.Group controlId='lastName'>\n                    <Form.ControlLabel>Last Name</Form.ControlLabel>\n                    <Form.Control onKeyUp={v=>setLastName(v.target.value)} name='lastName'/>\n                    </Form.Group>\n                    <Form.Group controlId=\"email\">\n                    <Form.ControlLabel>Siemens Email</Form.ControlLabel>\n                    <Form.Control onKeyUp={v=>setEmail(v.target.value)} name=\"email\" type=\"email\" />\n                    <Form.HelpText tooltip>Valid Siemens email address is required</Form.HelpText>\n                    </Form.Group>\n                    <Form.Group controlId=\"password\">\n                    <Form.ControlLabel>Password</Form.ControlLabel>\n                    <Form.Control onKeyUp={v=>setPassword(v.target.value)} name=\"password\" type=\"password\" autoComplete=\"off\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"passwordRetry\">\n                    <Form.ControlLabel>Password Retry</Form.ControlLabel>\n                    <Form.Control onKeyUp={v=>setPasswordRetry(v.target.value)} name=\"passwordRetry\" type=\"password\" autoComplete=\"off\" />\n                    </Form.Group>\n                </div>\n\n                <Form.Group>\n                    <Button type='submit' block size='lg' appearance=\"primary\">Join</Button>\n                </Form.Group>\n            </Form>\n      </div>\n    )\n}\n","import { signInWithEmailAndPassword } from 'firebase/auth';\nimport React, {useState} from 'react'\nimport { Button, Form, Modal } from 'rsuite';\nimport Alert from '../../misc/Alert';\nimport { auth } from '../../misc/firebase';\n\nconst SignInModal = ({show, onClose}) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n\n    const handleSubmit = () => {\n        signInWithEmailAndPassword(auth, email, password)\n        .then(() => {\n            Alert.success('You have been successfully signed in');\n        })\n        .catch((err)=> {\n            Alert.error(err.message);\n        })\n    }\n\n\n    return (\n        <Modal size='xs' backdrop open={show} onClose={onClose}>\n            <Modal.Header>\n            <Modal.Title>Sign In</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group>\n                    <Form.ControlLabel>Siemens Email</Form.ControlLabel>\n                    <Form.Control onKeyUp={(v)=>setEmail(v.target.value)}/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.ControlLabel>Password</Form.ControlLabel>\n                    <Form.Control onKeyUp={(v)=>setPassword(v.target.value)} type='password'/>\n                </Form.Group>\n                <Form.Group>\n                    <Button appearance='primary' block type='submit'>Sign in</Button>\n                </Form.Group>\n            </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={onClose} appearance='subtle'>Cancel</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default SignInModal;\n","\nimport React, {useState} from 'react';\nimport {Grid, Row, Col, Button, Header, Container} from 'rsuite';\n\nimport landingtrain from '../../images/landing-train.jpg';\nimport MyFooter from '../misc/Footer';\nimport JoinForm from './JoinForm';\nimport SignInModal from './SignInModal'; \n\nexport default function Landing() {\n    const [showModal, setShowModal] = useState();\n\n    return (\n        <Container>\n          <div id='background-train' style={{backgroundImage: `url(${landingtrain})`  }}> \n            <SignInModal show={showModal} onClose={() => setShowModal(false)}/>\n              <Header className='light-shade-c white-c p-1'>\n                <Grid fluid>\n                  <Row>\n                    <Col xs={20}>\n                      <h1>SysDescriptor</h1>\n                    </Col>\n                    <Col xs={4}>\n                      <div>\n                      <Button onClick={()=>setShowModal(true)} style={{marginTop: '5%', marginRight: '10%', float: 'right', color: 'white', fontSize: '16px'}} className='white-c' appearance='link'>Sign In</Button>\n                      </div>\n                    </Col>\n                  </Row>\n                </Grid>\n              </Header>\n      \n            <h2 id='tag-line'>Siemens Rail Infastructure test unit management tool</h2>\n        \n      \n            <div style={{position: 'relative', marginTop: '1%'}}>\n              <div style={{position: 'absolute', right: '6%', zIndex: 3}}>\n                <JoinForm/>\n              </div>\n            </div>\n          </div>\n          <MyFooter />\n      </Container>\n    )\n}\n","import React, { createContext, useContext} from 'react';\nimport { CustomProvider } from 'rsuite';\n\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({children, theme='light'}) => (\n    <ThemeContext.Provider value={theme}>\n        <CustomProvider theme={theme}>\n         {children}\n        </CustomProvider>\n    </ThemeContext.Provider>\n)\n\nexport const useTheme = () => useContext(ThemeContext);\n","import { get, ref, push, onValue } from \"firebase/database\";\nimport firebase from 'firebase/compat/';\n\nimport Alert from \"../misc/Alert\";\nimport {database} from \"../misc/firebase\";\n\nexport class DBHelper {\n    static read = async (DBPARENT, id) => {\n        try{\n            if(!id){throw new Error('Missing parent ID')}\n\n            const db = ref(database, `${DBPARENT}/${id}`)\n\n            const data = await get(db);\n\n            return data.val();\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static create = async (DBPARENT, id, name='') => {\n        try{\n            if(!id){throw new Error('Missing parent ID')}\n\n            const db = ref(database, `${DBPARENT}/${id}`)\n\n            const payLoad = {\n                name,\n                birthdate: firebase.database.ServerValue.TIMESTAMP\n            }\n\n            const key = await push(db, payLoad).key;\n            \n            return key\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static onValue = (DBPARENT, id, cb) => {\n        try{\n            const db = ref(database, `${DBPARENT}/${id}`);\n\n            onValue(db, snap => {    \n                cb(snap.val());\n            }, err => {\n                Alert.error(err)\n            })\n\n            return db;\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n}","/* \nRequirements\n------------\n1) Update value\n2) Read value\n2) Delete value\n\n\nFunctionInputs\n--------------\n1) Parent Component ID\n*/\n\nimport { get, ref, set } from \"firebase/database\";\nimport firebase from 'firebase/compat/';\nimport Alert from \"../../../../../../../misc/Alert\";\nimport {database} from \"../../../../../../../misc/firebase\";\n\n\nexport class DataDB {\n    static read = async (DBPARENT, componentID) => {\n        try{\n            if(!componentID){throw new Error('Missing parent component identification.')}\n\n            const db = ref(database, `${DBPARENT}/${componentID}`)\n\n            const data = await get(db);\n\n            return data.val();\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static readSpecific = async (DBPARENT, componentID, title) => {\n        try{\n            if(!componentID){throw new Error('Missing parent component identification.')}\n            if(!title){throw new Error('Need title to retreive data')}\n\n            const db = ref(database, `${DBPARENT}/${componentID}/${title}`)\n\n            const data = await get(db);\n\n            return data.val();\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n\n    static update = async (DBPARENT, componentID, title, value) => {\n        try{\n            if(!componentID){throw new Error('Missing parent component identification.')}\n\n            const db = ref(database, `${DBPARENT}/${componentID}/${title}`)\n\n            const payLoad = {\n                value,\n                lastUpdated: firebase.database.ServerValue.TIMESTAMP\n            }\n\n            await set(db, payLoad);\n\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static delete = async (DBPARENT, componentID) => {\n        try{\n            if(!componentID){throw new Error('Missing parent component identification.')}\n\n            const db = ref(database, `${DBPARENT}/${componentID}`)\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n}","import { DataDB } from \".\";\n\nexport class HardWareDataDB {\n    static DBPARENT = `HardWareData`;\n\n    static read = async componentID => {\n       return DataDB.read(this.DBPARENT, componentID);\n    }\n\n    static readSpecific = async (componentID, title) => {\n        return DataDB.readSpecific(this.DBPARENT, componentID, title);\n     }\n\n    static update = async (componentID, title, value) => {\n        await DataDB.update(this.DBPARENT, componentID, title, value);\n    }\n\n    static delete = async componentID => {\n        await DataDB.delete(this.DBPARENT, componentID);\n    }\n}","import { DataDB } from \".\";\n\nexport class SoftWareDataDB {\n    static DBPARENT = `SoftWareData`;\n\n    static read = async componentID => {\n        return DataDB.read(this.DBPARENT, componentID);\n    }\n\n    static readSpecific = async (componentID, title) => {\n        return DataDB.readSpecific(this.DBPARENT, componentID, title);\n     }\n\n    static update = async (componentID, title, value) => {\n        await DataDB.update(this.DBPARENT, componentID, title, value);\n    }\n\n    static delete = async componentID => {\n        await DataDB.delete(this.DBPARENT, componentID);\n    }\n}","/* \nRequirements\n------------\n1) Create\n2) Read \n2) Delete \n\n\nFunctionInputs\n--------------\n1) Parent SUB_COMPONENT_ID\n*/\n\nimport { get, ref, set } from \"firebase/database\";\nimport Alert from \"../../../../../../misc/Alert\";\nimport {database} from \"../../../../../../misc/firebase\";\nimport { DBHelper } from \"../../../../../DBHelper\";\nimport { HardWareDataDB } from \"./Data/HarwareDataDB\";\nimport { SoftWareDataDB } from \"./Data/SoftwareDataDB\";\n\nexport class ComponentItemDB {\n    static DBPARENT = 'ComponentItems';\n\n    static NoIDErr = Error('Missing parent sub-component identification.');\n\n    static read = async (compID) => {\n        return DBHelper.read(this.DBPARENT, compID);\n    }\n\n    static addListener = (compID, cb) => {\n        return DBHelper.onValue(this.DBPARENT, compID, cb)\n    }\n\n\n    static create = async (compID, name) => {\n        return DBHelper.create(this.DBPARENT, compID, name);\n    }\n\n    static delete = async (compID) => {\n        try{\n            if(!compID){throw new this.NoIDErr}\n\n            const db = ref(database, `${this.DBPARENT}/${compID}`)\n            \n            //  delete children first\n            const componentIDs = await get(db);\n            const compIDsArr = Object.keys(componentIDs.val() || []) ;\n            for(let i = 0 ; i< compIDsArr.length; i++){\n                const id = compIDsArr[i];\n                SoftWareDataDB.delete(id);\n                HardWareDataDB.delete(id);\n            }\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static deleteSpecific = async (compID, compItemID) => {\n        try{\n            if(!compID){throw new this.NoIDErr}\n            if(!compItemID){throw new this.NoIDErr}\n\n\n            const db = ref(database, `${this.DBPARENT}/${compID}/${compItemID}`);\n            \n           await SoftWareDataDB.delete(compItemID);\n           await HardWareDataDB.delete(compItemID);\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n}","/* \nRequirements\n------------\n1) Create\n2) Read \n2) Delete \n\n\nFunctionInputs\n--------------\n1) Parent SUB_COMPONENT_ID\n*/\n\nimport { get, ref, set } from \"firebase/database\";\nimport Alert from \"../../../../../misc/Alert\";\nimport {database} from \"../../../../../misc/firebase\";\nimport { DBHelper } from \"../../../../DBHelper\";\nimport { ComponentItemDB } from \"./ComponentItemDB/ComponentItemDB\";\n\nexport class ComponentDB {\n    static DBPARENT = 'Component';\n\n    \n\n    static read = async (subSysID) => {\n        return DBHelper.read(this.DBPARENT, subSysID);\n    }\n\n    static addListener = async (subSysID, cb) => {\n        return DBHelper.onValue(this.DBPARENT, subSysID, cb);\n    }\n\n    static create = async (subSysID, name) => {\n        return DBHelper.create(this.DBPARENT, subSysID, name);\n    }\n\n    static delete = async (subSysID) => {\n        try{\n            if(!subSysID){throw new Error('Missing parent sub-system identification.');}\n\n            const db = ref(database, `${this.DBPARENT}/${subSysID}`)\n            \n            //  delete children first\n            const compItemIDs = await get(db);\n            const compItemIDsArr = Object.keys(compItemIDs.val() || []) ;\n            for(let i = 0 ; i< compItemIDsArr.length; i++){\n                const id = compItemIDsArr[i];\n                ComponentItemDB.delete(id);\n            }\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static deleteSpecific =  async (subSysID, id) => {\n        try{\n            if(!subSysID){throw Error('Missing parent sub-system identification.');}\n            if(!id){throw Error('Missing component identification.');}\n\n            const db = ref(database, `${this.DBPARENT}/${subSysID}/${id}`);\n\n            await ComponentItemDB.delete(id);\n            \n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n}","/* \nRequirements\n------------\n1) Create\n2) Read \n2) Delete \n\n\nFunctionInputs\n--------------\n1) Parent SUB_COMPONENT_ID\n*/\n\nimport { get, ref, set } from \"firebase/database\";\nimport Alert from \"../../../../misc/Alert\";\nimport {database} from \"../../../../misc/firebase\";\nimport { DBHelper } from \"../../../DBHelper\";\nimport { ComponentDB } from \"./ComponentDB/ComponentDB\";\n\nexport class SubSystemDB {\n    static DBPARENT = 'SubSystem';\n\n    static NoIDErr = Error('Missing parent revision identification.');\n\n    static addListener = async (revID, cb) => {\n        return DBHelper.onValue(this.DBPARENT, revID, cb);\n    }\n\n    static read = async (revID) => {\n        return DBHelper.read(this.DBPARENT, revID);\n    }\n\n    static create = async (revID, name) => {\n        return DBHelper.create(this.DBPARENT, revID, name);\n    }\n\n    static delete = async (revID) => {\n        try{\n            if(!revID){throw new this.NoIDErr}\n\n            const db = ref(database, `${this.DBPARENT}/${revID}`)\n            \n            //  delete children first\n            const subSysIDs = await get(db);\n            const subSysIDsArr = Object.keys(subSysIDs.val() || []) ;\n            for(let i = 0 ; i< subSysIDsArr.length; i++){\n                const id = subSysIDsArr[i];\n                ComponentDB.delete(id);\n            }\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static deleteSpecific = async (revID, subSysID) => {\n        try{\n            if(!revID){throw new this.NoIDErr}\n            if(!subSysID){throw new this.NoIDErr}\n\n            const db = ref(database, `${this.DBPARENT}/${revID}/${subSysID}`)\n            \n            await ComponentDB.delete(subSysID);\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n}","\nimport { get, ref, set, push} from \"firebase/database\";\nimport firebase from 'firebase/compat/';\nimport { SubSystemDB } from \"./SubSystemDB/SubSystemDB\";\nimport Alert from \"../../../misc/Alert\";\nimport { DBHelper } from \"../../DBHelper\";\nimport {database} from \"../../../misc/firebase\";\n\n\nexport class RevisionDB {\n    static DBPARENT = 'revisions';\n    \n    static readAll = async (sysID) => {\n        return DBHelper.read(this.DBPARENT, sysID);\n    }\n\n    static addListener = (sysID, cb) => {\n       return DBHelper.onValue(this.DBPARENT, sysID, cb);\n    }\n\n    static readSpecific = async (sysID, revID) => {\n        try{\n            if(!sysID){throw new Error('Missing system identification.')}\n            if(!revID){throw new Error('Missing revision identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}/${revID}`)\n\n            const data = await get(db);\n            return data.val()\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static create = async (sysID, name='Untitled', revNumber=0) => {\n        try{\n            if(!sysID){throw new Error('Missing system identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}`)\n\n            const payLoad = {\n                name,\n                revNumber,\n                birthday: firebase.database.ServerValue.TIMESTAMP,\n                lastUpdated: firebase.database.ServerValue.TIMESTAMP\n            }\n\n           const data = await push(db, payLoad);\n           return data.key\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n\n    static updateByKey = async (sysID, revID, key, value) => {\n        try{\n            if(!sysID){throw new Error('Missing system identification.')}\n            if(!revID){throw new Error('Missing revision identification.')}\n\n            let db = ref(database, `${this.DBPARENT}/${sysID}/${revID}/${key}`)\n\n            await set(db, value);\n\n            db = ref(database, `${this.DBPARENT}/${sysID}/${revID}/lastUpdated`);\n            await set(db, firebase.database.ServerValue.TIMESTAMP)\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static deleteSpecific = async (sysID, revID) => {\n        try{\n            if(!sysID){throw new Error('Missing parent component identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}/${revID}`)\n\n            //  delete sub systems first\n            await SubSystemDB.delete(revID);\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n\n    static deleteAll = async (sysID) => {\n        try{\n            if(!sysID){throw new Error('Missing parent component identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}`)\n\n            //  delete sub systems first\n            const revIDs = await get(db);\n            const revIDsArr = Object.keys(revIDs.val() || []) ;\n            for(let i = 0 ; i< revIDsArr.length; i++){\n                const id = revIDsArr[i];\n                SubSystemDB.delete(id);\n            }\n\n            await set(db, null);\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n}","import React, { useState } from 'react';\nimport { ButtonGroup, ButtonToolbar, Button } from 'rsuite';\n\nconst ButtonToggle = ({options=[], defaultIndex=0, onChange, style, size, justified=false}) => {\n    const [selectedIndex, setSelectedIndex] = useState(defaultIndex);\n\n    const handleChange = i => {\n        setSelectedIndex(i);\n        onChange(options[i].value)\n    }\n\n\n    const opt = options.map((val,i) => \n        <Button  \n            onClick={()=>handleChange(i)} \n            key={i}\n            appearance={selectedIndex===i ? 'primary' : 'ghost'}\n            size={size}\n        >\n            {val.disp}\n        </Button>\n    )\n\n\n    \n    return (\n        <ButtonToolbar style={style}>\n            <ButtonGroup justified={justified}>\n                {opt}\n            </ButtonGroup>\n        </ButtonToolbar>\n    );\n};\n\nexport default ButtonToggle;","import React, { useState} from 'react';\nimport { signOut } from 'firebase/auth';\nimport {Navbar, Nav, Button, Drawer } from 'rsuite';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\n\nimport ButtonToggle from './Helper Components/ButtonToggle';\n\n\nimport {version} from '../../../package.json';\nimport { useUser } from '../../Contexts/user.context';\n\nimport { auth } from '../../misc/firebase';\nimport Alert from '../../misc/Alert';\n\nconst lightDarkDisp = [\n    {\n        disp: <FontAwesomeIcon icon={faMoon}/>,\n        value: \"dark\"\n    },\n    {\n        disp: <FontAwesomeIcon icon={faSun}/>,\n        value: \"light\"\n    }\n]\n\n\n\nconst HeaderBar = ({style, setTheme}) => {\n    const [drawIsOpen, setDrawIsOpen] = useState(false);\n    const {user} = useUser();\n\n    const handleSignOut = () => {\n        signOut(auth).then(()=>{\n\n        }\n        ).catch((err) => {\n            Alert.error(err.message);\n        })\n    }\n\n    return(\n        <>\n            <Navbar style={{...style}}>\n                <Navbar.Brand >\n                    SYSDESCRIPTOR {version}\n                </Navbar.Brand>\n                <Nav pullRight style={{marginTop: '0px'}}>\n                <Button onClick={()=>setDrawIsOpen(true)} appearance='link'>{user.email}</Button>\n                <ButtonToggle\n                    options={lightDarkDisp}\n                    onChange={(e) => setTheme(e)}\n                    style={{marginBottom: '5px', marginRight: '5px', textAlign: 'right'}}\n                    size='xs'\n                />\n                </Nav>\n            </Navbar>\n\n            <Drawer size='xs' placement='right' open={drawIsOpen} onClose={() =>setDrawIsOpen(false)}>\n                <Drawer.Header>\n                    <Drawer.Title>{user.email}</Drawer.Title>\n                </Drawer.Header>\n                <Drawer.Body>\n                        <Button block appearance='primary' color='red' onClick={handleSignOut}>Sign Out</Button>\n                    </Drawer.Body>\n            </Drawer>\n        </>\n\n    )\n}\n\nexport default HeaderBar;\n\n\n\n","import firebase from 'firebase/compat/';\nimport { get, ref, push, set, update } from 'firebase/database';\n\nimport Alert from \"../../misc/Alert\";\nimport {database} from \"../../misc/firebase\";\nimport { DBHelper } from \"../DBHelper\";\nimport { RevisionDB } from \"./RevisionDB/RevisionDB\";\n\nexport class SystemDB{\n    static DBPARENT = 'systems';\n\n    static readAll = async () => {\n        try{\n            const db = ref(database, `${this.DBPARENT}/`)\n            const data = await get(db);\n            return data.val();\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static read = async sysID => {\n        return DBHelper.read(this.DBPARENT, sysID);\n    }\n\n    static addListener = (cb) => {\n       return DBHelper.onValue(this.DBPARENT, '', cb);\n    }\n\n    static create = async (title='Untitled', owner=null, technician=null, sysNumber=null, partNumber=null) => {\n        try{\n            const db = ref(database, `${this.DBPARENT}/`)\n\n            const payLoad = {\n                title,\n                owner,\n                technician,\n                sysNumber,\n                partNumber,\n                birthday: firebase.database.ServerValue.TIMESTAMP,\n                lastUpdated: firebase.database.ServerValue.TIMESTAMP\n            }\n\n            const data = await push(db, payLoad);\n            return data.key;\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static update = async (sysID, title='Untitled', owner=null, technician=null, sysNumber=null, partNumber=null) => {\n        try{\n            if(!sysID){throw new Error('Missing system identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}`)\n\n            const updates= {\n                title,\n                owner,\n                technician,\n                sysNumber,\n                partNumber,\n                lastUpdated: firebase.database.ServerValue.TIMESTAMP\n            }\n\n            await update(db, updates);\n\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n\n    static delete = async sysID => {\n        try{\n            if(!sysID){throw new Error('Missing system identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}`)\n\n            //  delete revisions first\n            await RevisionDB.deleteAll(sysID);\n\n            await set(db, null);\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n}","import {Document, Packer, Paragraph, HeadingLevel, UnderlineType, TextRun, Table, TableRow, TableCell } from 'docx';\nimport {saveAs} from 'file-saver';\nimport { RevisionDB } from '../Database/SystemDB/RevisionDB/RevisionDB';\nimport { ComponentDB } from '../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB';\nimport { ComponentItemDB } from '../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/ComponentItemDB';\nimport { HardWareDataDB } from '../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/HarwareDataDB';\nimport { SoftWareDataDB } from '../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/SoftwareDataDB';\nimport { SubSystemDB } from '../Database/SystemDB/RevisionDB/SubSystemDB/SubSystemDB';\nimport { SystemDB } from '../Database/SystemDB/SystemDB';\nimport Alert from './Alert';\n\nexport function makeid(length=5) {\n    let result           = '';\n    const characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for ( let i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return `${Date.now()}${result}`;\n}\n\nexport const dispTime = d => {\n  if(Number.isNaN(d)){return '- -'}\n\n  return (new Date(d)).toDateString();  \n\n}\n\nexport const idObjToArr = obj => {\n  if(!obj){return []}\n  \n  const ids = Object.keys(obj);\n\n  return ids.map(id => {\n    return {id, ...obj[id]}\n  })\n}\n\nexport const arrRemove = (arr, item) =>{\n    const i = arr.findIndex(item);\n    if(i===-1){return arr}\n\n    return arr.splice(i, 1);\n}\n\nexport function filterList(sysArr, searchString) {\n  const filtered = sysArr.filter(str => {\n    if(!str){return false}\n    return str.includes(searchString);\n  });\n  return filtered;\n}\n\nconst saveDocumentToFile = (doc, fileName) => {\n  Packer.toBlob(doc).then((blob) => {\n    // saveAs from FileSaver will download the file\n    saveAs(blob, fileName);\n  });\n}\n\nconst convertSize = x => (x*2)\n\n\n\n// const hasValue = e => { //  eslint consistent-return: [\"error\", { \"treatUndefinedAsUnspecified\": false }]\n//   if(Object.entries(e).contains(\"value\")){\n//     return !(e.value==='')\n//   }\n//   if(Object.entries(e).length > 0){\n//     const entries = Object.entries(e);\n//     for(let i =0 ; i<entries.length; i++){\n//       hasValue(e[entries[i]]);\n//     }\n//   }else{\n//     return false\n//   }\n// }\n\n// const getOptionalValues = optionsArr => {\n//   const arr = [];\n\n//   for(let i =0; i< optionsArr.length; i++){\n//     if(hasValue(optionsArr[i])){\n//       arr.push(optionsArr[i]);\n//     }\n//   }\n\n//   return arr;\n// }\n\n// const buildTable = jsonDoc => {\n//   const dataToDisplay = [...jsonDoc.required, ...getOptionalValues()]\n// }\n\nexport const getKeyName = obj => {\n  return Object.keys(obj)[0];\n}\n\nexport const snapToArr = snapArr => {\n  const json = (snapArr) || {};\n  const ids = Object.keys(json);\n  const arr = ids.map(id =>  ({id, ...json[id]}));\n  return arr || [];\n}\n\n\nconst dispHardSoftData = (hardData, softData) => {\n  const loopLen = hardData.length > softData.length ? hardData.length : softData.length;\n\n  const returnVar = [];\n\n  for(let i =0; i< loopLen; i++){\n    returnVar.push(\n      new TableRow({\n        children: [\n          softData[i] ?\n          new TableCell({\n            children: [\n              new Paragraph({\n                children: [\n                  new TextRun(`${softData[i].id}:  ${softData[i].value}`)\n                ],\n                style: 'default'\n              }),\n            ],\n          }) : new TableCell({children:[]}),\n        hardData[i] ?\n          new TableCell({\n            children: [\n              new Paragraph({\n                children: [\n                  new TextRun(`${hardData[i].id}:  ${hardData[i].value}`)\n                ],\n                style: 'default'\n              }),\n            ],\n          }) : new TableCell({children:[]}),\n        ]\n      })\n    )\n  }\n\n  return returnVar;\n}\n\n\n\nconst dispComponentItemData = async compItems => {\n  const returnvar = [];\n  for(let i =0; i< compItems.length; i++){\n    const item = compItems[i];\n    \n    /* eslint-disable no-await-in-loop */\n    const hardData = idObjToArr(await HardWareDataDB.read(item.id));\n    /* eslint-disable no-await-in-loop */\n    const softData = idObjToArr(await SoftWareDataDB.read(item.id));\n\n    returnvar.push(\n      new Table({\n        rows: [\n          new TableRow({\n            children: [\n              new TableCell({\n                children: [\n                  new Paragraph({\n                    children: [\n                      new TextRun(`${i+1}`)\n                    ],\n                    style: 'default-bold',\n                    \n                  }),\n                ],\n              })\n            ]\n          }),\n          new TableRow({\n            children: [\n              new TableCell({\n                children: [\n                  new Paragraph({\n                    children: [\n                      new TextRun(\"Hardware\")\n                    ],\n                    style: 'default-bold',\n\n                  }),\n                ],\n              }),\n              new TableCell({\n                children: [\n                  new Paragraph({\n                    children: [\n                      new TextRun(\"Software\")\n                    ],\n                    style: 'default-bold'\n                  }),\n                ],\n              })\n            ]\n          }),\n          ...await dispHardSoftData(hardData, softData)\n        ]\n      }),\n    )\n  }\n  return returnvar;\n}\n\nconst dispComponenetData = async comps => {\n  const returnvar = [];\n  for(let i =0; i< comps.length; i++){\n    const comp = comps[i];\n    /* eslint-disable no-await-in-loop */\n    const compItems = idObjToArr(await ComponentItemDB.read(comp.id));\n\n    returnvar.push(\n      new Paragraph({\n        text: comp.name,\n        heading: HeadingLevel.HEADING_3,\n      }),\n      ...await dispComponentItemData(compItems)\n    )\n  }\n\n  return returnvar;\n}\n\nconst dispSubSystemData = async data => {\n  const returnvar = [];\n\n  for(let i =0; i< data.length; i++){\n    const subSys = data[i];\n    /* eslint-disable no-await-in-loop */\n    const components = idObjToArr(await ComponentDB.read(subSys.id));\n\n    returnvar.push(\n      new Paragraph({\n        text: subSys.name,\n        heading: HeadingLevel.HEADING_2,\n      }),\n      ...await dispComponenetData(components)\n    )\n\n  }\n  return returnvar;\n}\n\nexport const generateDocument = async (SYSID, REVID) => {\n  try{\n    const date = new Date();\n\n    const system = await SystemDB.read(SYSID);\n    const revision = await RevisionDB.readSpecific(SYSID, REVID);\n    const subsystems =  idObjToArr(await SubSystemDB.read(REVID));\n    const doc = new Document({\n      styles: {\n        default: {\n          heading1: {\n              run: {\n                  size: convertSize(28),\n                  bold: true,\n                  color: \"FFFFFF\"\n              },\n              paragraph: {\n                  spacing: {\n                      after: 120,\n                  },\n                  run: {\n                    color: \"FFFFFF\"\n                  }\n              },\n          },\n          heading2: {\n              run: {\n                size: convertSize(22),\n                bold: true,\n                underline: {\n                    type: UnderlineType.SINGLE,\n                },\n                color: \"FFFFFF\",\n              },\n              paragraph: {\n                spacing: {\n                  after: 100,\n                }\n              }\n          },\n          heading3: {\n            run: {\n              size: convertSize(16),\n              bold: true,\n              color: \"FFFFFF\",\n            },\n            paragraph: {\n              spacing: {\n                after: 50,\n              }\n            }\n        },\n          listParagraph: {\n              run: {\n                  color: \"FF0000\",\n              },\n          },\n        },\n        paragraphStyles: [\n        {\n          id: \"tech-owner\",\n          name: \"Technician & Owner\",\n          basedOn: \"Normal\",\n          next: \"Normal\",\n          quickFormat: true,\n          run: {\n              size: convertSize(14),\n              color: \"FFFFFF\"\n          },\n          paragraph: {\n            spacing: {\n              before: 100,\n            }\n          }\n        },\n        {\n          id: \"default\",\n          name: \"default\",\n          basedOn: \"Normal\",\n          next: \"Normal\",\n          quickFormat: true,\n          run: {\n              size: convertSize(10),\n              color: \"FFFFFF\"\n          },\n        },\n        {\n          id: \"default-bold\",\n          name: \"default-bold\",\n          basedOn: \"Normal\",\n          next: \"Normal\",\n          quickFormat: true,\n          run: {\n              size: convertSize(10),\n              color: \"FFFFFF\",\n              bold: true\n          },\n        }\n      ],\n      },\n      sections: [{\n        properties: {},\n        children: [\n          new Paragraph({\n            text: `${system.title} -- ${revision.name}`,\n            heading: HeadingLevel.HEADING_1,\n          }),\n          new Paragraph({\n            children: [\n              new TextRun(\"Generated On: \"), new TextRun({text: `${date.toDateString()} ${date.toLocaleTimeString()}`, bold: true}),\n            ],\n            style: 'default'\n          }),\n          new Paragraph({\n            children: [\n              new TextRun(\"Technician: \"), new TextRun({text: system.technician, bold: true}),\n              new TextRun(\"Owner: \"), new TextRun({text: system.owner, bold: true})\n            ],\n            style: \"tech-owner\"\n          }),\n          new Paragraph(\"\"),\n          ... await dispSubSystemData(subsystems)\n        ],\n      }],\n    });\n    saveDocumentToFile(doc, \"New Document.docx\");\n  }catch(err){\n    Alert.error('Unable to generate the document');\n  }\n}\n\n\n\n\n\n","import React, { useRef } from 'react'\nimport { Button, Dropdown, Popover, Whisper } from 'rsuite';\nimport MoreIcon from '@rsuite/icons/More';\n\n\nconst OptionsPopOver = React.forwardRef(({ handleSelect, ...rest }, ref) => (\n    <Popover ref={ref} {...rest} full>\n      <Dropdown.Menu onSelect={(n, e)=>{handleSelect(n); e.stopPropagation()}}>\n        <Dropdown.Item eventKey={1} >New Revision</Dropdown.Item>\n        <Dropdown.Item>Edit System</Dropdown.Item>\n        <Dropdown.Item eventKey={3}>Delete System</Dropdown.Item>\n      </Dropdown.Menu>\n    </Popover>\n));\n\n\n\nexport const SystemOptions = ({onNewRevision, onDeleteSystem}) => {\n  const ref = useRef();\n  const handleSelect = n => {\n    if(n===1){\n      onNewRevision();\n    }else if(n===3){\n      onDeleteSystem();\n    }\n\n    ref.current.close();\n  }\n  return (\n    <Whisper\n        placement=\"rightStart\"\n        controlId=\"control-id-with-dropdown\"\n        trigger=\"click\"\n        ref={ref}\n        onClick={(e)=>e.stopPropagation()}\n        speaker={<OptionsPopOver handleSelect={e=>handleSelect(e)}/>}                              \n    >\n      <Button appearance='subtle' size='xs'><MoreIcon/></Button>\n    </Whisper>\n  )\n}\n","import React from 'react';\nimport { Tooltip, Whisper } from 'rsuite';\n\nconst HoverShowAll = ({text=\"missing\", children}) => {\n    const tooltip = (\n        <Tooltip>\n          {text}\n        </Tooltip>\n      );\n\n    return (\n        <Whisper placement=\"top\" controlId=\"control-id-hover\" trigger=\"hover\" speaker={tooltip}>\n            {children}\n        </Whisper>\n    );\n};\n\nexport default HoverShowAll;","import React from 'react'\nimport { Button, Col, Row, Grid } from 'rsuite';\nimport TrashIcon from '@rsuite/icons/Trash';\nimport moment from 'moment';\n\nimport { useHover } from '../../../../../misc/customHooks';\nimport HoverShowAll from '../../../../misc/Helper Components/HoverShowAll';\n\n\nexport const Revision = ({onSelected, name, timestamp, revNumber=0, isSelected}) => {\n    const [ref, hover] = useHover();\n    name=name || 'Untitled';\n\n    const t = moment(timestamp);\n    const isNew = moment().subtract(2, \"days\").isBefore(t);\n\n    const selStyle = isSelected ? {borderLeft: '2px solid white'} : null;\n\n    const handleClick = () => {onSelected()}\n    return (\n        <div type='button' tabIndex={0} role=\"button\" styling=\"link\" onClick={handleClick} onKeyDown={handleClick} style={{display: 'block', width: '100%', ...selStyle}}  ref={ref} className='rs-list-item pointer p-1'>\n            <Grid fluid>\n                <Row>\n                    <Col xs={5}>\n                        <HoverShowAll text={name}>\n                            <p className='bold ellip-overflow align-l'>{name}</p>\n                        </HoverShowAll>\n                    </Col>\n                    <Col xs={5}>\n                        {isNew ? <span className='new'>New</span> : null}\n                        \n                    </Col>\n                    <Col xs={5}>\n                        <span className='muted-c'>Rev </span>{revNumber}\n                    </Col>\n                    <Col xs={7}>\n                        <span style={{fontSize: '12px'}}>\n                            <p className='muted-c ellip-overflow'>{t.format(\"MMM Do YY\")}</p>\n                            <p className='muted-c mt-0 ellip-overflow'>{t.format(\"h:mm:ss a\")}</p>\n                        </span>\n                    </Col>\n                    <Col xs={2}>\n                        <Button size='xs' appearance='subtle' color='red' style={{position: 'absolute', left: '1px', top: '4px', display: hover ? 'inline-block' : 'none' }}>\n                            <TrashIcon/>\n                        </Button>\n                    </Col>\n                </Row>\n            </Grid>\n        </div>\n    )\n}\n","import { useState, useEffect, useRef, useCallback } from \"react\";\nimport { off } from \"@firebase/database\";\nimport { idObjToArr} from \"./helperfunc\";\nimport { SystemDB } from \"../Database/SystemDB/SystemDB\";\nimport { RevisionDB } from \"../Database/SystemDB/RevisionDB/RevisionDB\";\nimport { SubSystemDB } from \"../Database/SystemDB/RevisionDB/SubSystemDB/SubSystemDB\";\nimport { ComponentDB } from \"../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB\";\nimport { ComponentItemDB } from \"../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/ComponentItemDB\";\n\n\nexport const useMediaQuery = query => {\n    const [matches, setMatches] = useState(\n      () => window.matchMedia(query).matches\n    );\n  \n    useEffect(() => {\n      const queryList = window.matchMedia(query);\n      setMatches(queryList.matches);\n  \n      const listener = evt => setMatches(evt.matches);\n  \n      queryList.addListener(listener);\n      return () => queryList.removeListener(listener);\n    }, [query]);\n  \n    return matches;\n};\n\nexport const useWindowHeight = () => {\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowHeight(window.innerHeight);\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowHeight;\n}\n\nexport const useHover = () => {\n  const [value, setValue] = useState(false);\n  const ref = useRef(null);\n  const handleMouseOver = () => setValue(true);\n  const handleMouseOut = () => setValue(false);\n  useEffect(\n    () => {\n      const node = ref.current;\n      if (node) {\n        node.addEventListener(\"mouseover\", handleMouseOver);\n        node.addEventListener(\"mouseout\", handleMouseOut);\n      }\n      return () => {\n          node.removeEventListener(\"mouseover\", handleMouseOver);\n          node.removeEventListener(\"mouseout\", handleMouseOut);\n      };\n    },\n    // eslint-disable-next-line\n    [ref.current] // Recall only if ref changes\n  );\n  return [ref, value];\n}\n\nexport const useRevisions = sysID => {\n  const [revs, setRevs] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n  \n  \n  const revsRef = useRef();\n  useEffect(() => {\n    setIsUpdating(true);\n    revsRef.current = RevisionDB.addListener(sysID, (v) => {\n      const revOBJ = v;\n      const revArr = idObjToArr(revOBJ);\n      setRevs(revArr);\n      setIsUpdating(false);\n    })\n    \n    return () => {\n      off(revsRef.current);\n    }\n  }, [sysID]);\n\n  return {revs, isUpdating};\n}\n\nexport const useSystems = () => {\n  const [systems, setSystems] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  const sysRef = useRef();\n  useEffect(() => {\n    setIsUpdating(true);\n    \n    sysRef.current = SystemDB.addListener((v) => {\n      const systemsObj = v;\n      const systemsArr = idObjToArr(systemsObj);\n      setSystems(systemsArr);\n      setIsUpdating(false);\n    })\n    \n    return () => {\n      off(sysRef.current);\n    }\n  }, []);\n  return {systems, isUpdating}\n}\n\nexport const useSubSystems = revID => {\n  const [subSys, setSubSys] = useState([]);\n\n  useEffect(() => {\n    SubSystemDB.addListener(revID, (v) => {\n      const subObj = v;\n      const compArr = idObjToArr(subObj);\n      compArr.sort((a,b) => (a.name>b.name ?  -1 :  1))\n      setSubSys(compArr);\n    })\n\n  }, [revID]);\n\n  // useEffect(() => {\n  //   return () => {\n  //     off(subRef);\n  //   }\n  // }, []);\n\n  return subSys\n}\n\nexport const useComponents = subSysID => {\n  const [comps, setComps] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  useEffect(() => {\n    setIsUpdating(true);\n    ComponentDB.addListener(subSysID, (v) => {\n      const compObj = v;\n      const compArr = idObjToArr(compObj);\n      setComps(compArr);\n      setIsUpdating(false);\n    })\n\n  }, [subSysID]);\n\n  // useEffect(() => {\n  //   return () => {\n  //     off(compRef);\n  //   }\n  // }, []);\n\n  return {comps, isUpdating}\n}\n\n\nexport const useCompItems = compID => {\n  const [compItems, setCompItems] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  useEffect(() => {\n    setIsUpdating(true);\n    ComponentItemDB.addListener(compID, (v) => {\n      const obj = v;\n      const arr = idObjToArr(obj);\n      setCompItems(arr);\n      setIsUpdating(false);\n    })\n\n  }, [compID]);\n\n  // useEffect(() => {\n  //   return () => {\n  //     off(compRef);\n  //   }\n  // }, []);\n\n  return {compItems, isUpdating}\n}\n\n\nexport const useModal = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onOpen = useCallback(() => setIsOpen(true), []);\n  const onClose = useCallback(() => setIsOpen(false), []);\n\n  return {isOpen, onOpen, onClose};\n}\n\n\n","import React from 'react';\nimport { Loader } from 'rsuite';\nimport { useRevisions } from '../../../../misc/customHooks';\nimport {Revision} from './Revision/Revision';\n\nconst RevList = ({sysID, onRevSelected, revSelectedID}) => {\n    const {revs, isUpdating} = useRevisions(sysID);\n\n    return (\n        <div className='rs-list rs-list-hover v-scroll' style={{marginLeft: '10%'}}>\n            {isUpdating ? <Loader style={{padding: '10px'}}/> : null}\n            {!isUpdating && revs ? revs.map(val => {\n                const {id, name, timestamp, revNumber} = val;\n                    return(\n                    <Revision \n                        onSelected={()=>onRevSelected(id)}\n                        name={name}\n                        timestamp={timestamp}\n                        revNumber={revNumber}\n                        key={id}\n                        isSelected={revSelectedID===id}\n                    />\n                )\n            }): null}\n            {!isUpdating && !revs.length ? <span className='muted-c' style={{padding: '5px 0', display: 'block'}}>Create a new revision to get started</span> : null}\n        </div>\n    );\n};\n\nexport default RevList;","import React, { useState } from 'react';\nimport {Row, Col, Grid, Button} from 'rsuite';\nimport ArrowRightIcon from '@rsuite/icons/ArrowRight';\nimport ArrowDownIcon from '@rsuite/icons/ArrowDown';\nimport { SystemOptions } from './SystemOptions';\nimport HoverShowAll from '../../misc/Helper Components/HoverShowAll';\nimport RevList from './Rev List/RevList';\n\nexport const System = ({sysID, title='Untitled', partNumber, sysNumber, technician, owner, onRevSelected, onNewRevision, isSelected, revSelectedID, onDeleteSystem}) => {\n    const [isExpanded, setIsExpanded] = useState(false);\n    title = title ==='' ? 'Untitled' : title;\n\n    const selStyle= isSelected ? {borderLeft: '1px solid lightgreen'} : null\n\n    const handleClick = () => {setIsExpanded(v => !v)}\n\n    const handleNewRev = () => {\n        onNewRevision();\n        if(!isExpanded){setIsExpanded(true)}\n    }\n\n    return (\n        <div className='rs-list rs-list-hover'>\n            <div type='button' tabIndex={0} role=\"button\" styling=\"link\" onClick={handleClick} onKeyDown={handleClick} className='rs-list-item pointer p-2' style={{...selStyle, width: '100%'}}>\n                <Grid fluid>\n                    <Row>\n                        <Col xs={2}>\n                            <Button style={{fontSize: '18px'}} appearance='subtle' size='xs'>\n                                {isExpanded ? <ArrowDownIcon/> : <ArrowRightIcon/>}\n                            </Button>\n                        </Col>\n                        <Col xs={8}>\n                            <HoverShowAll text={title}>\n                                <h5 className='ellip-overflow align-l'>{title}</h5>\n                            </HoverShowAll>\n                            <HoverShowAll text={partNumber}>\n                                <p className='muted-c ellip-overflow'>{partNumber}</p>\n                            </HoverShowAll>\n                        </Col>\n                        <Col xs={2}>\n                            <HoverShowAll text=\"System Number\">\n                                <p className='muted-c ellip-overflow'>{sysNumber}</p>\n                            </HoverShowAll>\n                        </Col>\n                        <Col xs={5}>\n                            <HoverShowAll text={`Technician: ${technician}`}>\n                                <p className='muted-c ellip-overflow'>{technician}</p>\n                            </HoverShowAll>\n                        </Col>\n                        <Col xs={5}>\n                            <HoverShowAll text={`Owner: ${owner}`}>\n                                <p className='muted-c ellip-overflow'>{owner}</p>\n                            </HoverShowAll>\n                        </Col>\n                        <Col xs={2}>\n                            <SystemOptions\n                                onNewRevision={()=>handleNewRev()}\n                                onDeleteSystem={onDeleteSystem}\n                            />\n                        </Col>\n                    </Row>\n                </Grid>         \n            </div>\n            {isExpanded ? <RevList revSelectedID={revSelectedID} onRevSelected={(id)=>onRevSelected(id)} sysID={sysID}/> : null}           \n        </div>\n    )\n}","import React, {useState} from 'react';\nimport { Button, Form, InputNumber, InputPicker, Modal, Input, Grid, Row, Col, ButtonToolbar, Schema} from 'rsuite';\nimport { SystemDB } from '../../../Database/SystemDB/SystemDB';\nimport Alert from '../../../misc/Alert';\nimport systemChoices from '../../../misc/SystemChoices/systemChoices.json';\n\n\nconst validationModel  = Schema.Model({\n    System: Schema.Types.NumberType().min(0, \"This value is required\")\n})\n\nconst NewSystemModal = () => {\n    const [selectedSystemIndex, setSelectedSystemIndex] = useState(null);\n    const [owner, setOwner] = useState('');\n    const [technician, setTechnician] = useState('');\n    const [utfNumber, setutfNumber] = useState(0);\n    const [show, setShow] = useState(false);\n\n    const clearInputs = () => {\n        setSelectedSystemIndex(null); setTechnician(''); setOwner(''); setutfNumber(0);\n    }\n\n    const onNewSystem = async () => {\n        if(selectedSystemIndex===null){return}\n        const sysParent = systemChoices.systems[selectedSystemIndex].data;\n        const {title, partNumber, sysNumber} = sysParent;\n        try{\n            await SystemDB.create(title, owner, technician, sysNumber, partNumber);\n            clearInputs();\n            setShow(false);\n            Alert.success(`New System ${title} Created`);\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    return (\n    <>\n        <Button color=\"blue\" appearance='primary' onClick={()=> setShow(true)} style={{marginBottom: '20px', display: 'block'}}>New System</Button>\n        <Modal size='xs' open={show} onClose={()=>setShow(false)}>\n            <Modal.Header><Modal.Title>New System</Modal.Title></Modal.Header>\n            <Modal.Body>\n                <Form fluid model={validationModel} onSubmit={()=> onNewSystem()}>\n                    <Form.Group controlId='System' style={{marginBottom: '10px'}}>\n                        <Form.ControlLabel>Title</Form.ControlLabel>\n                            <Form.Control\n                                value={selectedSystemIndex}\n                                onChange={(e) => {\n                                   setSelectedSystemIndex(e)\n                                }} \n                                size='lg' \n                                placeholder='LDL, HST, ...' \n                                accepter={InputPicker}\n                                data={systemChoices.systems}\n                                name='System'\n                            />\n                    </Form.Group>\n                    <Form.Group style={{marginBottom: '10px'}}>\n                        <Form.ControlLabel style={{fontSize: '14px'}}>UTF Number</Form.ControlLabel>\n                        <Form.Control name='UTF Number' value={utfNumber} onChange={(e) => setutfNumber(e)} size='xs' style={{width: '80px'}} placeholder={0} min={0} scrollable defaultValue={0} accepter={InputNumber} />\n                    </Form.Group>\n                    <Grid style={{padding: 0}} fluid>\n                        <Row>\n                            <Col xs={12}>\n                                <Form.Group>\n                                    <Form.ControlLabel style={{fontSize: '16px'}}>Technician</Form.ControlLabel>\n                                    <Form.Control name='technician' value={technician} onChange={(e) => setTechnician(e)} size='sm' accepter={Input} />\n                                </Form.Group>\n                            </Col>\n                            <Col xs={12}>\n                                <Form.Group>\n                                    <Form.ControlLabel style={{fontSize: '16px'}}>Owner</Form.ControlLabel>\n                                    <Form.Control name='owner' value={owner} onChange={(e) => setOwner(e)} size='sm' accepter={Input} />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                    </Grid>\n                    <Form.Group>\n                        <ButtonToolbar className='mt-3'>\n                            <Button type='submit' appearance='primary'>Create New System</Button>\n                            <Button onClick={()=>setShow(false)} appearance='subtle'>Cancel</Button>\n                        </ButtonToolbar>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n        </Modal>\n    </>\n    )\n}\n\nexport default NewSystemModal;","import React, {useState} from 'react';\nimport {Input, InputGroup, Loader, List} from 'rsuite';\nimport { Close } from '@rsuite/icons';\n\nimport {useMediaQuery, useSystems} from '../../misc/customHooks'\nimport { System } from './System/System';\nimport NewSystemModal from './SystemModal/NewSystemModal';\nimport { SystemDB } from '../../Database/SystemDB/SystemDB';\n\n\n// const selectedStyle = {\n//     borderLeft: '4px solid lightgreen',\n//     transition: '.1s'\n// }\n\nconst findSearchResults = (systems, searchText) => {\n    if(searchText===''){return systems}\n\n    const results = systems.filter(sys => {\n        const {title} = sys\n        if(!title){return false}\n        return title.toLowerCase().includes(searchText.toLowerCase())\n    })\n\n    return results;\n}\n\nconst SideBar = ({onNewRevision, onRevSelected, sysSelectedID, revSelectedID}) => {\n    const [searchText, setSearchText] = useState('');\n\n    const isDesktop = useMediaQuery('(min-width: 1200px)');\n    const {systems, isUpdating} = useSystems();\n\n    const searchResults =  findSearchResults(systems, searchText);\n\n    const onDeleteSystem = async id => {\n        await SystemDB.delete(id);\n    }\n \n   return (\n        <div className='br-r h-100 p-1' style={{}}>\n            <NewSystemModal/>\n            <InputGroup style={{width: '80%'}} className='mx-auto'>\n                <Input value={searchText} onChange={(e) => setSearchText(e)} placeholder='Search' size='md'/>\n                <InputGroup.Button onClick={()=>setSearchText('')}>\n                    <Close/>\n                </InputGroup.Button>\n            </InputGroup>\n\n            <div className='mt-2'>\n                <div><strong>{systems.length}</strong> Total Descriptions</div>\n                <span><strong>{searchResults.length}</strong> Descriptions Shown</span>\n            </div>\n            <hr style={{marginTop: '5px', marginBottom: '5px'}}/>\n            <div className='v-scroll' style={{height: isDesktop ? '66vh' : '20vh'}}>\n            {isUpdating ? <Loader/> : null}\n            <List hover autoScroll>\n                {searchResults.map(sys => {\n                    const {title, sysNumber, technician, owner, partNumber, id, revIDs} = sys;\n                    return <System\n                        title={title}\n                        owner={owner}\n                        technician={technician}\n                        sysNumber={sysNumber}\n                        partNumber={partNumber}\n                        revIDs={revIDs}\n                        key={id}\n                        sysID={id}\n                        isSelected={sysSelectedID===id}\n                        revSelectedID={revSelectedID}\n                        onNewRevision={()=>onNewRevision(id)}\n                        onDeleteSystem={()=>onDeleteSystem(id)}\n                        onRevSelected={(revID)=>onRevSelected(id, revID)}\n                    />\n                })}\n            </List>\n                {searchResults.length===0 && !isUpdating ? <span className='muted-c'>No Systems Were Found.</span> : null}\n            </div>\n        </div>\n    )\n\n}\nexport default SideBar;","import React from 'react';\nimport { useTheme } from '../../Contexts/theme.context';\n\n\nconst styles = {\n    height: '100vh'\n}\n\nconst MainStage = ({newStageComp, defaultComp, style}) => {\n    const isDark = (useTheme()) === \"dark\";\n    return (\n        <div style={{...styles, ...style, backgroundColor: isDark ? '#282828' : '#e6ebeb'}}>\n        {newStageComp}\n        {defaultComp}\n    </div>\n    )\n}\nexport default MainStage;","import React from 'react';\nimport MainStage from '../MainStage';\n\nconst DefaultMainStage = ({style}) => (\n        <MainStage\n            style={style}\n            defaultComp={\n                <h1 \n                    className='muted-c' \n                    style={{paddingTop: '10vh', fontSize: '2vw', textAlign: 'center'}}\n                >        \n                    Create a <strong>New Description</strong> or Edit a <strong >Previous Version</strong>\n                </h1>\n            }\n        />\n    );\n\nexport default DefaultMainStage;","import React, { createContext, useContext, useState} from 'react';\n\nconst ToolbarContext = createContext();\n\nexport const ToolBarProvider = ({children}) => {\n    const [isUpdating, setIsUpdating] = useState(false);\n\n    return <ToolbarContext.Provider value={{isUpdating, setIsUpdating}}>\n        {children}\n    </ToolbarContext.Provider>\n}\n\nexport const useToolBar = () => useContext(ToolbarContext);\n","import { get, ref, set } from \"firebase/database\";\n\nimport Alert from \"../../../../misc/Alert\";\nimport { database } from \"../../../../misc/firebase\";\n\n\n\nexport class NotesDB {\n    static read = async (revID) => {\n        try{\n            if(!revID){throw new Error('Missing parent ID')}\n\n            const db = ref(database, `Notes/${revID}`)\n\n            const data = await get(db);\n\n            return data.val();\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static update = async (revID, v) => {\n        try{\n            if(!revID){throw new Error('Missing parent ID')}\n\n            const db = ref(database, `Notes/${revID}`)\n\n            await set(db, v)\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Button, Drawer, Input } from 'rsuite';\nimport { useToolBar } from '../../../Contexts/toolbar.context';\nimport {NotesDB} from '../../../Database/SystemDB/RevisionDB/NotesDB/NotesDB';\n\nexport const NotesDrawer = ({isOpen,revID,onClose}) => {\n    const [isEnlarged, setIsEnlarged] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [value, setValue] = useState('');\n    \n    const {setIsUpdating}=useToolBar();\n\n    useEffect(()=> {\n        const getValue = async () => {\n            setValue('');\n            const v = await NotesDB.read(revID);\n            setValue(v);\n            setIsLoading(false);\n        }\n\n        getValue();\n    }, [revID]);\n\n    const handleUpdate = async (v) => {\n        setIsUpdating(true);\n        await NotesDB.update(revID, v);\n        setIsUpdating(false);\n    }\n\n\n    return (\n        <Drawer size={isEnlarged ? 'lg' : 'xs'} backdrop={false} placement='bottom' open={isOpen} onClose={onClose}>\n        <Drawer.Header>\n        <Drawer.Title>Notes</Drawer.Title>\n        <Drawer.Actions>\n            <Button onClick={()=>setIsEnlarged(v=>!v)}>Expand</Button>\n            <Button onClick={onClose} appearance=\"primary\">\n            Close\n            </Button>\n        </Drawer.Actions>\n        </Drawer.Header>\n        <Drawer.Body>\n            <Input as='textarea' value={value} disabled={isLoading} onChange={(v) => {setValue(v); handleUpdate(v)}} rows={isEnlarged ? 20 : 5} placeholder=\"Write any related notes here...\"/>\n        </Drawer.Body>\n    </Drawer>\n    )\n}\n\n","import { CheckRound, DoingRound } from '@rsuite/icons';\nimport React, { useEffect, useState } from 'react';\n\nlet to;\nconst SavedIndicator = ({isUpdating, persistFor=1000}) => {\n    const [delayedIsUpdating, setDelayedIsUpdating] = useState(false);    \n    useEffect(() => {\n        clearTimeout(to);\n        if(!isUpdating){\n            setDelayedIsUpdating(true);\n            to = setTimeout(() => {\n                setDelayedIsUpdating(false);\n            }, persistFor);\n        }\n    }, [isUpdating, persistFor])\n\n\n\n    return (\n        <>\n        {delayedIsUpdating ? <DoingRound pulse/> : <CheckRound style={{color: 'lightgreen'}}/>}\n        </>\n    );\n};\n\nexport default SavedIndicator;","import { ArrowDownLine } from '@rsuite/icons';\nimport React, {useState } from 'react';\n\n\nconst CustomPanel = ({defaultExpand=false, header, children}) => {\n    const [isExpanded, setIsExpanded] = useState(defaultExpand);\n\n    const handleClick = () => {setIsExpanded(v=>!v)}\n\n\n    return (\n        <div className='rs-panel rs-panel-in rs-panel-collapsible rs-panel-bordered rs-panel-shaded mb-1'>\n               <div type='button' tabIndex={0} role=\"button\" styling=\"link\" onKeyDown={handleClick} onClick={handleClick} className='rs-panel-header' style={{paddingBottom: '5px', paddingTop: '5px'}}>\n                        <ArrowDownLine flip={isExpanded ? 'vertical' : null} className='rs-icon' style={{top: '10px'}}/>\n                        <h5 className='rs-panel-title'>{header}</h5>\n                </div>\n                    {isExpanded ?  \n                        <div className='rs-anim-collapse rs-anim-in rs-panel-collapse' style={{height: 'auto'}}>\n                            <div className='rs-panel-body'>\n                                {children}\n                            </div>\n                        </div> \n                    : null}\n        </div>\n    );\n};\n\nexport default CustomPanel;","import React from 'react';\nimport {Grid, Row, Col} from 'rsuite';\n\nexport const GridHeader = ({dataChildren, actionChildren}) => {\n    return (\n        <Grid fluid> \n            <Row>\n                <Col xs={18}>\n                    <div style={{textAlign: 'left', fontSize: '12px', marginTop: '3px'}} className='muted-c'>\n                        {dataChildren}\n                    </div>\n                </Col>\n                <Col xs={6}>\n                    <div style={{textAlign: 'right'}}>\n                        {actionChildren}\n                    </div>\n                </Col>\n            </Row>\n        </Grid>\n    )\n}\n","import React, { useRef } from 'react'\nimport { Button, Dropdown, Popover, Whisper } from 'rsuite';\nimport MoreIcon from '@rsuite/icons/More';\n\n\nconst OptionsPopOver = React.forwardRef(({ handleSelect, ...rest }, ref) => (\n    <Popover ref={ref} {...rest} full>\n      <Dropdown.Menu onSelect={(n, e)=>{handleSelect(n); e.stopPropagation()}}>\n        <Dropdown.Item eventKey={-1} className='muted-c'>Track</Dropdown.Item> \n        <Dropdown.Item eventKey={2}>Delete</Dropdown.Item>\n      </Dropdown.Menu>\n    </Popover>\n));\n\n\n\nexport const CompItemOptions = ({onTrack, onDelete}) => {\n  const ref = useRef();\n  const handleSelect = n => {\n    if(n===1){\n        onTrack();\n    }else if(n===2){\n        onDelete();\n    }\n\n    ref.current.close();\n  }\n  return (\n    <Whisper\n        placement=\"rightStart\"\n        controlId=\"control-id-with-dropdown\"\n        trigger=\"click\"\n        ref={ref}\n        onClick={(e)=>e.stopPropagation()}\n        speaker={<OptionsPopOver handleSelect={e=>handleSelect(e)}/>}                              \n    >\n      <Button appearance='subtle' size='xs'><MoreIcon/></Button>\n    </Whisper>\n  )\n}\n","import React from 'react';\nimport { DatePicker } from 'rsuite';\n\nconst MyDateInput = ({value, onChange, size='md', style, disabled}) => {\n    const date =  Number.isNaN(Date.parse(value)) ? new Date() : new Date(value);\n\n    const handleChange = val => {\n       const d = new Date(val);\n        onChange(d.toDateString());\n    }\n\n    return (\n        <DatePicker cleanable={false} size={size} onChange={handleChange} style={{...style, display: 'block'}} disabled={disabled} value={date}/>\n    );\n};\n\nexport default MyDateInput;","import React from 'react';\nimport { InputNumber } from 'rsuite';\n\n\nconst width = {\n    xs: '15px',\n    sm: '70px',\n    md: '150px',\n    lg: '100%'\n}\n\nconst getWidth = str => {\n    if(!width[str]){return width.md}\n    return width[str];\n}\n\nconst MyNumberInput = ({value, onChange, size='md', style, disabled, min=0}) => {\n    const width = getWidth(size);\n    return (\n        <InputNumber min={min} disabled={disabled} value={value} onChange={onChange} size={size} style={{width, ...style}}/>\n    );\n};\n\nexport default MyNumberInput;","import React, { useEffect, useState } from 'react';\nimport { Input } from 'rsuite';\nimport { useToolBar } from '../../../../../../../Contexts/toolbar.context';\nimport { HardWareDataDB } from '../../../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/HarwareDataDB';\nimport MyDateInput from '../../../../../../Custom Inputs/MyDateInput';\nimport MyNumberInput from '../../../../../../Custom Inputs/MyNumberInput';\n\nconst inputs = {\n    Text: Input,\n    Number: MyNumberInput,\n    Date: MyDateInput\n}\n\nconst getInput = str => {\n    if(!inputs[str]){return inputs.Text}\n    return inputs[str]\n}\n\nconst HardInput = ({title, itemID, inputType='Text'}) => {\n    const MyInput = getInput(inputType);\n    const [value, setValue] = useState('');\n    const [disabled, setDisabled] = useState(false);\n    const {setIsUpdating} = useToolBar();\n\n    useEffect(() => {\n        const getInitVal = async () => {\n            setDisabled(true);\n            const data = await HardWareDataDB.readSpecific(itemID, title);\n            if(data){setValue(data.value || '')}\n            setDisabled(false)\n        }\n        getInitVal();\n    }, [itemID, title]);\n\n    const handleChange = async val => {\n        setValue(val);\n        setIsUpdating(true);\n        await HardWareDataDB.update(itemID, title, val);\n        setIsUpdating(false);\n    }\n    \n    return (\n        <div>\n            <label style={{fontSize: '14px'}} htmlFor={title}>{title}</label>\n            <MyInput size='sm' disabled={disabled} onChange={(v)=>handleChange(v)} value={value}/>\n        </div>\n    );\n};\n\nexport default HardInput;","import React, { useEffect, useState } from 'react';\nimport { Input } from 'rsuite';\nimport { useToolBar } from '../../../../../../../Contexts/toolbar.context';\nimport { SoftWareDataDB } from '../../../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/SoftwareDataDB';\nimport MyDateInput from '../../../../../../Custom Inputs/MyDateInput';\nimport MyNumberInput from '../../../../../../Custom Inputs/MyNumberInput';\n\nconst inputs = {\n    Text: Input,\n    Number: MyNumberInput,\n    Date: MyDateInput\n}\n\nconst getInput = str => {\n    if(!inputs[str]){return inputs.Text}\n    return inputs[str]\n}\n\nconst SoftInput = ({title, itemID, inputType='Text'}) => {\n    const MyInput = getInput(inputType);\n    const [value, setValue] = useState('');\n    const [disabled, setDisabled] = useState(false);\n    const {setIsUpdating} = useToolBar();\n\n    useEffect(() => {\n        const getInitVal = async () => {\n            setDisabled(true);\n            const data = await SoftWareDataDB.readSpecific(itemID, title);\n            if(data){setValue(data.value || '')}\n            setDisabled(false)\n        }\n        getInitVal();\n    }, [itemID, title]);\n\n    const handleChange = async val => {\n        setValue(val);\n        setIsUpdating(true);\n        await SoftWareDataDB.update(itemID, title, val);\n        setIsUpdating(false);\n    }\n    \n    return (\n        <div>\n            <label style={{fontSize: '14px'}} htmlFor={title}>{title}</label>\n            <MyInput size='sm' disabled={disabled} onChange={(v)=>handleChange(v)} value={value}/>\n        </div>\n    );\n};\n\nexport default SoftInput;","import React from 'react';\nimport {Col, Grid, Row } from 'rsuite';\nimport { useToolBar } from '../../../../../../Contexts/toolbar.context';\nimport { ComponentItemDB } from '../../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/ComponentItemDB';\nimport Alert from '../../../../../../misc/Alert';\nimport CustomPanel from '../../../../../misc/Custom Panel/CustomPanel';\nimport { GridHeader } from '../../../../../misc/Custom Panel/GridHeader';\nimport { dispTime } from '../../../../../../misc/helperfunc';\nimport { CompItemOptions } from './CompItemOptions';\nimport HardInput from './Local Inputs/HardInput';\nimport SoftInput from './Local Inputs/SoftInput';\n\nconst CompItem = ({name, birthdate, format, itemID, parentID}) => {\n    const {setIsUpdating} = useToolBar();    \n    const dispSoftwareData = () => {\n        if(!format || !format.Software){return null}\n        \n        const dataTitles = Object.keys(format.Software);\n        return dataTitles.map((title, i) => {\n            return (\n                <Col key={i} xs={24} lg={12}>\n                    <SoftInput title={title} key={i} itemID={itemID} inputType={format.Software[title].input}/>\n                </Col>\n            )\n        })\n    }\n\n    const dispHardwareData = () => {\n        if(!format || !format.Hardware){return null}\n        \n        const dataTitles = Object.keys(format.Hardware);\n        return dataTitles.map((title, i) => {\n            return (\n                <Col key={i} xs={24} lg={12}>\n                    <HardInput title={title} key={i} itemID={itemID} inputType={format.Hardware[title].input}/>\n                </Col>\n            )\n        })\n    }\n\n\n    const softInputs = dispSoftwareData();\n    const hardInputs = dispHardwareData();\n\n\n    const handleDelete = async () => {\n        try{\n            setIsUpdating(true);\n            await ComponentItemDB.deleteSpecific(parentID, itemID);\n            Alert.success(`Successfully deleted component item`)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n    return (\n        <CustomPanel defaultExpand={false} header={name}>\n            <GridHeader\n                dataChildren={<span>{dispTime(birthdate)}</span>}\n                actionChildren={\n                    <CompItemOptions onDelete={handleDelete}/>\n                }\n            />\n            \n                <Grid fluid>\n                    <Row>\n                        {softInputs ? <h5 className='mb-2' style={{fontSize: '14px', borderBottom: '1px solid', fontWeight: '400'}}>Software</h5> : null}\n                        {softInputs}\n                    </Row>\n                    <Row>\n                        {hardInputs ? <h5 className='mb-2 mt-2' style={{fontSize: '14px', borderBottom: '1px solid', fontWeight: '400'}}>Hardware</h5> : null}\n                        {hardInputs}\n                    </Row>\n                </Grid>\n                \n        </CustomPanel>\n    );\n};\n\nexport default CompItem;","import React from 'react';\nimport { Button, Loader } from 'rsuite';\nimport { useToolBar } from '../../../../../Contexts/toolbar.context';\nimport { ComponentItemDB } from '../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/ComponentItemDB';\nimport Alert from '../../../../../misc/Alert';\nimport CustomPanel from '../../../../misc/Custom Panel/CustomPanel';\nimport { GridHeader } from '../../../../misc/Custom Panel/GridHeader';\nimport { useCompItems } from '../../../../../misc/customHooks';\nimport { dispTime } from '../../../../../misc/helperfunc';\nimport CompItem from './CompItem/CompItem';\n\nconst Comp = ({name, birthdate, compID, format}) => {\n    const {compItems, isUpdating} = useCompItems(compID);\n    const {setIsUpdating} = useToolBar();\n\n    const showCompItems = () => {\n        if(isUpdating){return <Loader/>}\n        if(!compItems.length){return \"Add new items\"}\n\n        return compItems.map((v, i) => {\n            const {id, birthdate} = v;\n            return <CompItem birthdate={birthdate} parentID={compID} itemID={id} key={id} name={i+1} format={format}/>\n        })\n    }\n\n    const newCompItem = async () => {\n        setIsUpdating(true);\n        try{\n            await ComponentItemDB.create(compID);\n            Alert.success('Successfully created new component item')\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n    return (\n        <CustomPanel defaultExpand header={name}>\n            <GridHeader\n                dataChildren={\n                    <div>\n                        <div>{compItems ? compItems.length : 0} items</div>\n                        <span>{dispTime(birthdate)}</span>\n                    </div>\n            }\n                actionChildren={<Button size='xs' color='blue' appearance='ghost' onClick={newCompItem}>Add</Button>}\n            />\n            <hr style={{marginTop: '5px'}}/>\n            {showCompItems()}\n        </CustomPanel>\n    );\n};\n\nexport default Comp;","import React from 'react';\nimport { Button, Modal } from 'rsuite';\n\nconst CompDeleteModal = ({show, onClose, onDelete, name}) => {\n    return (\n        <Modal open={show} onClose={onClose}>\n            <Modal.Header>\n                <Modal.Title>\n                    Are you sure ?\n                </Modal.Title>\n                <Modal.Body>\n                    <p>\n                        Are you sure you want to delete the <strong>{name}</strong> component?\n                    </p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button color='red' appearance='primary' onClick={onDelete}>Yes</Button>\n                    <Button appearance='subtle' onClick={onClose}>No</Button>\n                </Modal.Footer>\n            </Modal.Header>\n        </Modal>\n    );\n};\n\nexport default CompDeleteModal;","import React, { useState } from 'react';\nimport { Button } from 'rsuite';\nimport { useToolBar } from '../../../../../../Contexts/toolbar.context';\nimport { ComponentDB } from '../../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB';\nimport Alert from '../../../../../../misc/Alert';\nimport CompDeleteModal from './CompDeleteModal';\n\nconst ActiveComp = ({name, id, subSysID, style}) => {\n    const [showModal, setShowModal] = useState(false);\n    const {setIsUpdating} = useToolBar();\n\n    const handleDelete = async () => {\n        setIsUpdating(true);\n        setShowModal(false);\n        try{\n            await ComponentDB.deleteSpecific(subSysID, id);\n            Alert.success(`Successfully deleted ${name}`)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false)\n    }\n\n     return (\n        <>\n            <Button style={style} color='green' appearance='primary' size='xs' onClick={()=>setShowModal(true)}> - {name} </Button>\n            <CompDeleteModal show={showModal} name={name} id={id} onClose={()=>setShowModal(false)} onDelete={handleDelete}/>\n        </>\n    );\n};\n\nexport default ActiveComp;","import React from 'react';\nimport { Button, Grid, Row, Col } from 'rsuite';\nimport { useToolBar } from '../../../../../Contexts/toolbar.context';\nimport { ComponentDB } from '../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB';\nimport Alert from '../../../../../misc/Alert';\nimport ActiveComp from './misc/ActiveComp';\n\nconst ComponentStatus = ({subSysID, activeComps, possibleComps})  => {\n    const {setIsUpdating} = useToolBar();\n\n    const handleCreate = async name => {\n        setIsUpdating(true);\n        try{\n            await ComponentDB.create(subSysID, name);\n            Alert.success(`New ${name} component created`);\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n    const dispActiveComps = () => {\n        return  activeComps.map(v => {\n            const {name, id} =v;\n            return (\n                <Col xs={12} md={8} lg={4} key={id}>\n                    <ActiveComp style={{marginBottom: '5px'}} key={id} subSysID={subSysID} id={id} name={name}/>\n                </Col>)\n        })\n    }\n\n    const dispDisabledComps = () => {\n        return possibleComps.map(name => {\n            //  if component already exists in DB\n            if(activeComps.find(ac => ac.name===name)){return null}\n\n            return (\n                <Col key={name} xs={12} md={8} lg={4}>\n                    <Button size='xs' className='mr-2 mb-1' style={{marginBottom: '5px'}} onClick={()=>handleCreate(name)}>\n                        + {name}\n                    </Button>\n                </Col>)\n        })\n    }\n\n    return (\n        <div>\n            <Grid fluid>\n                <Row>\n                    <h5 style={{fontSize: '14px'}}>Active</h5>\n                    {dispActiveComps()}\n                </Row>\n                <Row>\n                    <h5 style={{fontSize: '14px'}}>Disabled</h5>\n                    {dispDisabledComps()}\n                </Row>\n            </Grid>\n        </div>\n    );\n};\n\nexport default ComponentStatus;","import React from 'react';\nimport {Grid, Loader, Row, Col } from 'rsuite';\nimport { useComponents } from '../../../../misc/customHooks';\nimport Comp from './Comp/Comp';\nimport ComponentStatus from './ComponentStatus/ComponentStatus';\nimport dataFormat from '../../../../misc/dataFormat.json';\n\nconst ComponentHandler = ({subSysID, dataKey}) => {\n    const {comps, isUpdating} = useComponents(subSysID);\n    const possibleComps = dataFormat[dataKey];\n\n    if(!possibleComps){return \"Data is not specified for this subsystem\"}\n\n    if(isUpdating){return <Loader/>}\n\n    return (\n        <div style={{padding: '5px 15px'}}>\n            <ComponentStatus activeComps={comps} subSysID={subSysID} possibleComps={Object.keys(possibleComps)}/>\n            <hr/>\n            <div style={{height: '500px', overflowY: 'scroll'}}>\n                <Grid fluid>\n                    <Row>\n                        {comps.map(v=> {\n                            const {name, birthdate, id} = v;\n                            return (\n                                <Col xs={24} md={12} lg={8} key={id}>\n                                    <Comp\n                                        name={name}\n                                        birthdate={birthdate}\n                                        key={id}\n                                        compID={id}\n                                        format={possibleComps[name]}\n                                    />\n                                </Col>\n                            )\n                        })}\n                    </Row>\n                </Grid>\n            </div>\n        </div>\n    );\n};\n\nexport default ComponentHandler;","import React, { useEffect, useState } from 'react';\nimport { Nav } from 'rsuite';\nimport CloseIcon from '@rsuite/icons/Close';\nimport { SubSystemDB } from '../../../Database/SystemDB/RevisionDB/SubSystemDB/SubSystemDB';\nimport ComponentHandler from './ComponentHandler/ComponentHandler';\nimport Alert from '../../../misc/Alert';\nimport { useToolBar } from '../../../Contexts/toolbar.context';\n\nconst SubSystemNav = ({subSystems=[], revID}) => {\n    const {setIsUpdating} = useToolBar();\n    const [selI, setSelI] = useState(null);\n\n    useEffect(() => {\n        if(subSystems.length>0){\n            setSelI(0);\n        }else{\n            setSelI(null);\n        }\n    }, [revID, subSystems.length]);\n\n    const handleDelete = async (id, name) => {\n        setIsUpdating(true);\n        try{\n            await SubSystemDB.deleteSpecific(revID, id);\n\n\n            if(selI-1 >=0){\n                setSelI(i=>i-1);\n            }else{\n                setSelI(null);\n            }\n\n\n            Alert.success(`Deleted subsystem ${name}`)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n    const createSubSystemNavs = () => (\n        subSystems.map((subSys, i) => {\n            const {name, id} = subSys;\n            const isActive = i===selI;\n            const btnColor = isActive ? 'red' : null;\n            return (\n                <Nav.Item \n                    onClick={()=>setSelI(i)} \n                    key={id} \n                    active={isActive}\n                >\n                    {name}\n                    <button \n                        style={{background: 'transparent', color: btnColor, fontSize: '12px', position: 'relative', top:'-2px', left: '3px'}} \n                        type='button'\n                        onClick={(e) => {e.stopPropagation(); handleDelete(id, name)}}\n                        disabled={!isActive}\n                    > \n                        <CloseIcon/> \n                    </button>\n                </Nav.Item>\n            )\n        })\n    )\n\n    return (\n        <div>\n            <Nav appearance=\"tabs\">\n                {createSubSystemNavs()}\n            </Nav>\n            {selI!==null && subSystems.length>0 && subSystems[selI] ? \n                <ComponentHandler subSysID={subSystems[selI].id} dataKey={subSystems[selI].name}/>\n            :\n                <div className='muted-c mx-auto w-100'>\n                    Select a subsystem to begin editing.\n                </div>    \n            }\n        </div>\n    );\n};\n\nexport default SubSystemNav;","import React from 'react';\nimport { Button } from 'rsuite';\nimport { useToolBar } from '../../../Contexts/toolbar.context';\nimport { SubSystemDB } from '../../../Database/SystemDB/RevisionDB/SubSystemDB/SubSystemDB';\nimport Alert from '../../../misc/Alert';\n\nconst possSubs = {\n    general: 'General',\n    atc: 'ATC',\n    acses: 'ACSES'\n}\n\n\nconst SubSystems = ({subSystems, revID}) => {\n    const {setIsUpdating} = useToolBar();\n    \n    const handleAdd = async name => {\n        setIsUpdating(true);\n        try{\n            await SubSystemDB.create(revID, name);\n            Alert.success(`Created new subsystem ${name}`)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n    const hasATC = subSystems.find(v => v.name===possSubs.atc)\n    const hasACSES = subSystems.find(v => v.name===possSubs.acses)\n    const hasGeneral = subSystems.find(v => v.name===possSubs.general)\n    return (\n       <div style={{marginTop: '15px'}}>\n            {hasGeneral ? null : <Button onClick={()=>handleAdd(possSubs.general)} appearance='ghost' size='xs' style={{display: 'block', marginBottom: '5px'}}>+ General</Button> }\n            {hasATC ? null : <Button onClick={()=>handleAdd(possSubs.atc)} appearance='ghost' size='xs' style={{display: 'block', marginBottom: '5px'}}>+ ATC</Button> }\n            {hasACSES ? null : <Button onClick={()=>handleAdd(possSubs.acses)} appearance='ghost' size='xs'>+ ACSES</Button> }\n       </div>\n    );\n};\n\nexport default SubSystems;","import React, { useEffect, useState } from 'react'\nimport { Input } from 'rsuite'\nimport { useToolBar } from '../../../Contexts/toolbar.context'\nimport { RevisionDB } from '../../../Database/SystemDB/RevisionDB/RevisionDB'\nimport Alert from '../../../misc/Alert'\nimport MyNumberInput from '../../Custom Inputs/MyNumberInput'\n\nexport const TitleBar = ({sysID, revID}) => {\n    const {setIsUpdating} = useToolBar();\n    const [isDisabled, setIsDisabled] = useState(false);\n    const [name, setName] = useState('');\n    const [revNum, setRevNum] = useState(0);\n\n\n    useEffect(() => {\n        const loadRev = async () => {\n            setIsDisabled(true);\n            try{\n                const {name, revNumber} =  await RevisionDB.readSpecific(sysID, revID);\n                setName(name || '');\n                setRevNum(revNumber || 0);\n            }catch(err){\n                Alert.error(err.message);\n            }\n            setIsDisabled(false);\n        }\n\n        loadRev();\n\n    }, [revID, sysID])\n\n    const handleUpdate = async (key, val) => {\n        setIsUpdating(true);\n        try{\n            await RevisionDB.updateByKey(sysID, revID, key, val)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n\n    return (\n        <>\n            <div>\n                <Input value={name} disabled={isDisabled} size='lg' onChange={(v) => {handleUpdate('name', v); setName(v)}} style={{textAlign: 'center', fontSize: '24px'}} placeholder='Revision Name'/>\n            </div>\n            <div >\n                <label style={{fontSize: '14px'}} htmlFor='rev'>Rev. Number</label>\n                <MyNumberInput value={revNum} disabled={isDisabled} onChange={(v) => {handleUpdate('revNumber', v); setRevNum(v)}} size='sm'/>\n            </div>\n        </>\n    )\n}\n","import { faRedo, faUndo } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Button, ButtonGroup, ButtonToolbar } from 'rsuite';\nimport { useToolBar } from '../../../Contexts/toolbar.context';\nimport SavedIndicator from './SavedIndicator';\n\n\n\nconst ToolBar = () => {\n    const {isUpdating} = useToolBar();\n    return (\n        <div>\n            <ButtonToolbar style={{display: 'inline'}}>\n                <ButtonGroup>\n                    <Button size='xs' appearance='subtle'><FontAwesomeIcon icon={faUndo}/></Button>\n                    <Button size='xs' appearance='subtle'><FontAwesomeIcon icon={faRedo}/></Button>\n                </ButtonGroup>\n            </ButtonToolbar>\n            <span style={{marginRight: '5px', marginLeft: '5px', borderRight: '1px solid white'}}/>\n            <SavedIndicator isUpdating={isUpdating}/>\n        </div>\n    );\n};\n\nexport default ToolBar;","import React from 'react';\nimport {Button, Grid, Row, Col } from 'rsuite';\n\nimport MainStage from '../MainStage';\nimport { generateDocument } from '../../../misc/helperfunc';\nimport {useModal, useSubSystems} from '../../../misc/customHooks';\nimport { NotesDrawer } from '../misc/NotesDrawer';\nimport SubSystemNav from '../SubSystem/SubSystemNav';\nimport SubSystems from '../SubSystem/SubSystems';\nimport { ToolBarProvider } from '../../../Contexts/toolbar.context';\nimport { TitleBar } from '../misc/TitleBar';\nimport ToolBar from '../misc/ToolBar';\n\n\n\nconst NewMainStage = ({sysID, revID, style}) => {\n    const subSystems = useSubSystems(revID);\n\n    const {isOpen, onOpen, onClose} = useModal();\n\n    return (\n        <MainStage\n            style={style}\n            newStageComp={\n                <>\n                    <ToolBarProvider>\n                        <div className='p-1 w-100 mb-1'>\n                            <Grid fluid>\n                                <Row>\n                                    <Col xs={8}>\n                                        <Button style={{marginRight: '10px'}} onClick={()=>generateDocument(sysID, revID)} color='green' appearance=\"primary\">Generate File</Button>\n                                        <Button appearance='subtle' onClick={onOpen}>Notes</Button>\n                                        <SubSystems subSystems={subSystems} revID={revID}/>\n                                    </Col>\n                                    <Col xs={8}>\n                                        <TitleBar revID={revID} sysID={sysID}/> \n                                    </Col>\n                                    <Col xs={8}>\n                                        <div style={{float: 'right'}}>\n                                            <ToolBar/>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Grid>\n                        </div>\n                        <SubSystemNav subSystems={subSystems} revID={revID}/>\n                        <NotesDrawer \n                            isOpen={isOpen} \n                            onClose={onClose} \n                            revID={revID}\n                        />\n                    </ToolBarProvider>\n                </>\n            }\n        />\n    );\n};\n\nexport default NewMainStage;","import React, {useState} from 'react';\nimport { Grid, Row, Col} from \"rsuite\";\n\nimport { ThemeProvider } from '../../Contexts/theme.context';\nimport { RevisionDB } from '../../Database/SystemDB/RevisionDB/RevisionDB';\nimport HeaderBar from '../misc/HeaderBar';\nimport SideBar from '../SideBar/SideBar';\nimport DefaultMainStage from '../MainStage/Extensions/DefaultMainStage';\nimport NewMainStage from '../MainStage/Extensions/NewMainStage';\nimport MyFooter from '../misc/Footer';\n\nexport default function Main() {\n    const [theme, setTheme] = useState('dark')\n    const [revID, setRevID] = useState(null);\n    const [sysID, setSysID] = useState(null);\n  \n    const onNewRevision = async (sysID) => {\n      const revID = await RevisionDB.create(sysID);\n      setSysID(sysID);\n      setRevID(revID);\n    }\n    \n    return (\n        <ThemeProvider theme={theme}>\n            <div>\n                <HeaderBar setTheme={(t) => setTheme(t)}/>\n                <Grid fluid  style={{padding:0}}>\n                    <Row >\n                    <Col xs={24} lg={7} >\n                        <SideBar \n                        revSelectedID={revID}\n                        sysSelectedID={sysID}\n                        onNewRevision={(sysID)=>onNewRevision(sysID)}\n                        onRevSelected={(sysID, revID)=> {setSysID(sysID); setRevID(revID); }}\n                        />\n                    </Col>\n                    <Col xs={24} lg={17} >\n                        {revID && sysID ? <NewMainStage revID={revID} sysID={sysID}/> : <DefaultMainStage/>}\n                    </Col>\n                    </Row>\n                </Grid>\n                <MyFooter style={{width: '100%'}}/>\n            </div>\n        </ThemeProvider>\n    )\n}\n","import React from 'react'\nimport { Navigate, Outlet } from 'react-router';\nimport { useUser } from '../Contexts/user.context';\n\nconst PublicRoute = () => {\n    const {user, isLoading} = useUser();\n\n    return user && !isLoading ? <Navigate to=\"/\"/> : <Outlet/>;\n}\n\nexport default PublicRoute;","import { isSignInWithEmailLink, signInWithEmailLink } from 'firebase/auth';\nimport React, {useEffect} from 'react'\nimport { auth } from '../../misc/firebase';\n\nconst check = () => {\n    if (isSignInWithEmailLink(auth, window.location.href)) {\n    // Additional state parameters can also be passed via URL.\n    // This can be used to continue the user's intended action before triggering\n    // the sign-in operation.\n    // Get the email if available. This should be available if the user completes\n    // the flow on the same device where they started it.\n    let email = window.localStorage.getItem('emailForSignIn');\n    if (!email) {\n        // User opened the link on a different device. To prevent session fixation\n        // attacks, ask the user to provide the associated email again. For example:\n        email = window.prompt('Please provide your email for confirmation');\n    }\n    // The client SDK will parse the code from the link for you.\n    signInWithEmailLink(auth, email, window.location.href)\n        .then(() => {\n        // Clear email from storage.\n        window.localStorage.removeItem('emailForSignIn');\n        // You can access the new user via result.user\n        // Additional user info profile not available via:\n        // result.additionalUserInfo.profile == null\n        // You can check if the user is new or existing:\n        // result.additionalUserInfo.isNewUser\n        })\n        .catch(() => {\n        // Some error occurred, you can inspect the code: error.code\n        // Common errors could be invalid email and invalid or expired OTPs.\n        });\n    }\n}\n\nexport default function SignInLink() {\n\n    useEffect(()=> {\n        check();\n    }, []);\n    \n    return (\n        <div>\n            j\n        </div>\n    )\n}\n","import React from 'react';\nimport { Routes, Route, BrowserRouter} from 'react-router-dom';\n\n\nimport './styles/main.scss';\nimport './styles/utility.scss';\nimport 'rsuite/dist/rsuite.min.css';\n\nimport PrivateRoute from './misc/PrivateRoute';\nimport Landing from './Components/Pages/Landing';\nimport Main from './Components/Pages/Main';\nimport { UserProvider } from './Contexts/user.context';\nimport PublicRoute from './misc/PublicRoute';\nimport SignInLink from './Components/Pages/SignInLink';\n\nfunction App() {  \n  return (\n    <UserProvider>\n      <BrowserRouter>\n        <Routes>\n          <Route exact path='/' element={<PrivateRoute/>}>\n            <Route exact path='/' element={<Main/>}/>\n          </Route>\n          <Route exact path='/signin' element={<PublicRoute/>}>\n            <Route exact path='/signin' element={<Landing/>}/>\n          </Route>\n          <Route exact path='/finishSignUp' element={<PublicRoute/>}>\n            <Route exact path='/finishSignUp' element={<SignInLink/>}/>\n          </Route>\n        </Routes>\n      </BrowserRouter>\n  </UserProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}