{"version":3,"sources":["misc/firebase.js","Contexts/user.context.js","misc/PrivateRoute.js","images/landing-train.jpg","Components/misc/Footer.js","misc/Alert.js","Database/ProfileDB.js","Components/Pages/JoinForm.js","Components/Pages/SignInModal.js","Components/Pages/Landing.js","Contexts/theme.context.js","Database/DBHelper.js","Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/index.js","Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/HarwareDataDB.js","Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/SoftwareDataDB.js","Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/ComponentItemDB.js","Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB.js","Database/SystemDB/RevisionDB/SubSystemDB/SubSystemDB.js","Database/SystemDB/RevisionDB/RevisionDB.js","Components/misc/Helper Components/ButtonToggle.js","Components/misc/HeaderBar.js","Database/SystemDB/SystemDB.js","misc/helperfunc.js","Components/SideBar/System/SystemOptions.js","Components/misc/Helper Components/HoverShowAll.js","Components/SideBar/System/Rev List/Revision/Revision.js","misc/customHooks.js","Components/SideBar/System/Rev List/RevList.js","Components/SideBar/System/System.js","Components/SideBar/SystemModal/NewSystemModal.js","Components/SideBar/SideBar.js","Components/MainStage/MainStage.js","Components/MainStage/Extensions/DefaultMainStage.js","Contexts/toolbar.context.js","Database/SystemDB/RevisionDB/NotesDB/NotesDB.js","Components/MainStage/misc/NotesDrawer.js","Components/MainStage/misc/SavedIndicator.js","Components/misc/Custom Panel/CustomPanel.js","Components/misc/Custom Panel/GridHeader.js","Components/MainStage/SubSystem/ComponentHandler/Comp/CompItem/CompItemOptions.js","Components/Custom Inputs/MyDateInput.js","Components/Custom Inputs/MyNumberInput.js","Components/MainStage/SubSystem/ComponentHandler/Comp/CompItem/Local Inputs/HardInput.js","Components/MainStage/SubSystem/ComponentHandler/Comp/CompItem/Local Inputs/SoftInput.js","Components/MainStage/SubSystem/ComponentHandler/Comp/CompItem/CompItem.js","Components/MainStage/SubSystem/ComponentHandler/ComponentStatus/misc/CompDeleteModal.js","Components/MainStage/SubSystem/ComponentHandler/Comp/Comp.js","Components/MainStage/SubSystem/ComponentHandler/ComponentStatus/misc/ActiveComp.js","Components/MainStage/SubSystem/ComponentHandler/ComponentStatus/ComponentStatus.js","Components/MainStage/SubSystem/ComponentHandler/ComponentHandler.js","Components/MainStage/SubSystem/SubSystemNav.js","Components/MainStage/SubSystem/SubSystems.js","Components/MainStage/misc/TitleBar.js","Components/MainStage/misc/ToolBar.js","Components/MainStage/Extensions/NewMainStage.js","Components/Pages/Main.js","misc/PublicRoute.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","getDatabase","auth","getAuth","UserContext","createContext","UserProvider","children","useState","user","setUser","isLoading","setIsLoading","useEffect","onAuthStateChanged","p","Provider","value","useUser","useContext","PrivateRoute","to","MyFooter","style","Footer","clear","position","bottom","width","padding","zIndex","className","Grid","fluid","Row","Col","xs","lg","href","textAlign","type","Alert","PlacementType","TOPCENTER","BOTTOMCENTER","TOPSTART","TOPEND","BOTTOMSTART","BOTTOMEND","checkDuration","d","Number","isInteger","checkPlace","success","msg","place","duration","checkedPlace","toaster","push","Notification","header","closable","placement","warning","info","error","ProfileDB","JoinForm","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","passwordRetry","setPasswordRetry","model","Schema","Model","Types","StringType","isRequired","pattern","addRule","handleNewUser","a","check","createUserWithEmailAndPassword","then","create","catch","e","message","borderRadius","height","id","Form","onSubmit","overflowY","Group","controlId","ControlLabel","Control","onChange","v","name","HelpText","tooltip","autoComplete","Button","marginTop","block","size","appearance","read","uid","Error","db","ref","get","data","val","activeStatus","payLoad","birthdate","firebase","ServerValue","TIMESTAMP","update","SignInModal","show","onClose","Modal","backdrop","open","Header","Title","Body","signInWithEmailAndPassword","err","onKeyUp","target","onClick","Landing","showModal","setShowModal","Container","backgroundImage","landingtrain","marginRight","float","color","fontSize","right","ThemeContext","ThemeProvider","theme","CustomProvider","DBHelper","DBPARENT","key","onValue","cb","snap","DataDB","componentID","readSpecific","title","lastUpdated","set","delete","HardWareDataDB","onSpecificValue","spec","SoftWareDataDB","ComponentItemDB","NoIDErr","compID","addListener","componentIDs","compIDsArr","Object","keys","i","length","deleteSpecific","compItemID","ComponentDB","subSysID","compItemIDs","compItemIDsArr","SubSystemDB","revID","subSysIDs","subSysIDsArr","RevisionDB","readAll","sysID","revNumber","birthday","updateByKey","deleteAll","revIDs","revIDsArr","ButtonToggle","options","defaultIndex","justified","selectedIndex","setSelectedIndex","opt","map","handleChange","disp","ButtonToolbar","ButtonGroup","lightDarkDisp","icon","faMoon","faSun","HeaderBar","setTheme","drawIsOpen","setDrawIsOpen","Navbar","Brand","version","Nav","pullRight","marginBottom","Drawer","signOut","SystemDB","owner","technician","sysNumber","partNumber","updates","dispTime","isNaN","Date","toDateString","idObjToArr","obj","saveDocumentToFile","doc","fileName","Packer","toBlob","blob","saveAs","convertSize","x","dispHardSoftData","hardData","softData","loopLen","returnVar","TableRow","TableCell","Paragraph","TextRun","dispComponentItemData","compItems","returnvar","item","snObj","Table","rows","dispComponenetData","comps","comp","text","heading","HeadingLevel","HEADING_3","dispSubSystemData","subSys","components","HEADING_2","generateDocument","SYSID","REVID","date","system","revision","subsystems","Document","default","heading1","run","bold","paragraph","spacing","after","heading2","underline","UnderlineType","SINGLE","heading3","listParagraph","paragraphStyles","basedOn","next","quickFormat","before","HEADING_1","toLocaleTimeString","properties","styles","sections","OptionsPopOver","React","forwardRef","handleSelect","rest","Popover","full","Dropdown","Menu","onSelect","n","stopPropagation","Item","eventKey","SystemOptions","onNewRevision","onDeleteSystem","useRef","Whisper","trigger","speaker","current","close","HoverShowAll","Tooltip","Revision","onSelected","timestamp","isSelected","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","hover","t","moment","isNew","subtract","isBefore","selStyle","borderLeft","handleClick","tabIndex","role","styling","onKeyDown","display","format","left","top","RevList","onRevSelected","revSelectedID","revs","setRevs","isUpdating","setIsUpdating","revsRef","revArr","off","useRevisions","marginLeft","Loader","System","isExpanded","setIsExpanded","handleNewRev","validationModel","NumberType","min","NewSystemModal","selectedSystemIndex","setSelectedSystemIndex","setOwner","setTechnician","utfNumber","setutfNumber","setShow","onNewSystem","sysParent","systemChoices","systems","placeholder","accepter","InputPicker","scrollable","defaultValue","InputNumber","Input","SideBar","sysSelectedID","searchText","setSearchText","isDesktop","query","window","matchMedia","matches","setMatches","queryList","listener","evt","removeListener","useMediaQuery","setSystems","sysRef","systemsArr","useSystems","searchResults","filter","sys","toLowerCase","includes","findSearchResults","InputGroup","List","autoScroll","MainStage","newStageComp","defaultComp","isDark","backgroundColor","DefaultMainStage","paddingTop","ToolbarContext","ToolBarProvider","useToolBar","NotesDB","NotesDrawer","isOpen","isEnlarged","setIsEnlarged","getValue","handleUpdate","Actions","as","disabled","CustomPanel","defaultExpand","paddingBottom","flip","GridHeader","dataChildren","actionChildren","CompItemOptions","onTrack","onDelete","MyDateInput","parse","DatePicker","cleanable","sm","md","MyNumberInput","str","inputs","Text","HardInput","itemID","inputType","MyInput","setDisabled","getInitVal","htmlFor","SoftInput","CompItem","parentID","softInputs","Software","input","hardInputs","Hardware","handleDelete","sn","setSN","useHardwareSerialNumber","borderBottom","fontWeight","CompDeleteModal","Comp","setCompItems","arr","useCompItems","newCompItem","ActiveComp","ComponentStatus","activeComps","possibleComps","handleCreate","find","ac","ComponentHandler","dataKey","setComps","compArr","useComponents","dataFormat","SubSystemNav","subSystems","selI","setSelI","isActive","btnColor","active","background","possSubs","SubSystems","handleAdd","hasATC","hasACSES","hasGeneral","TitleBar","isDisabled","setIsDisabled","setName","revNum","setRevNum","loadRev","SavedIndicator","persistFor","delayedIsUpdating","setDelayedIsUpdating","clearTimeout","setTimeout","pulse","ToolBar","faUndo","faRedo","borderRight","NewMainStage","setSubSys","sort","b","useSubSystems","setIsOpen","onOpen","useCallback","useModal","Main","setRevID","setSysID","PublicRoute","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"s+uBAeMA,EAAMC,YAXG,CACXC,OAAQ,0CACVC,WAAY,gCACZC,YAAa,oDACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBAKJC,EAAWC,YAAYX,GACvBY,EAAOC,YAAQb,G,OCZtBc,EAAcC,0BAEPC,EAAe,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC1B,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAaA,OAXAC,qBAAU,WACNC,YAAmBZ,GAAM,SAACa,GAElBL,EADAK,GAGQ,MAEZH,GAAa,QAElB,IAGC,cAACR,EAAYY,SAAb,CAAsBC,MAAO,CAACR,OAAME,aAApC,SACKJ,KAKAW,EAAU,kBAAMC,qBAAWf,ICpBzBgB,EANM,WACjB,MAA0BF,IAAnBT,EAAP,EAAOA,KAAME,EAAb,EAAaA,UAEb,OAAOF,IAASE,EAAY,cAAC,IAAD,IAAa,cAAC,IAAD,CAAUU,GAAG,a,qDCP3C,MAA0B,0C,iBC6C1BC,EA1CE,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAF,OACb,cAACC,EAAA,EAAD,CAAQD,MAAK,2BAAMA,GAAN,IAAaE,MAAO,OAC7BC,SAAU,QACVC,OAAQ,MACRC,MAAO,OACPC,QAAS,OACTC,OAAQ,IAGRC,UAAU,gBARd,SAUI,eAACC,EAAA,EAAD,CAAMC,OAAK,EAAX,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,mDAKJ,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACE,mBAAGC,KAAK,IAAR,8BAEF,cAACH,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACE,mBAAGC,KAAK,IAAR,4BAEF,cAACH,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAhB,SACE,mBAAGC,KAAK,IAAR,6BAEF,cAACH,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAjB,SACA,8BACA,oBAAGd,MAAO,CAACgB,UAAW,SAAtB,0CACgC,mBAAGD,KAAK,8CAAR,6C,0EC5BtCE,EACO,UADPA,EAEK,QAFLA,EAGO,UAHPA,EAII,OAKWC,E,kCAAAA,EAEVC,cAAc,CACjBC,UAAW,YACXC,aAAc,eACdC,SAAU,WACVC,OAAQ,SACRC,YAAa,cACbC,UAAW,aAREP,EAWVQ,cAAgB,SAAAC,GACnB,OAAGA,GAAKC,OAAOC,UAAUF,GACdA,EAfE,MAEAT,EAkBVY,WAAa,SAAAtC,GAChB,OAA8B,OAnBjB0B,EAmBDY,WAAWtC,GAnBV0B,EAmB6BC,cAAcI,OAAS/B,GAnBpD0B,EAsBVa,QAAU,SAACC,GAAoD,IAA/CC,EAA8C,uDAtBpDf,EAsBiBC,cAAcI,OAAQW,EAAa,uCAC3DC,EAvBOjB,EAuBaY,WAAWG,GACrCG,IAAQC,KACR,cAACC,EAAA,EAAD,CACIC,OAAQtB,EACRiB,SA3BShB,EA2BMQ,cAAcQ,GAC7BM,UAAQ,EACRvB,KAAMA,EAJV,SAMKe,IACY,CAACS,UAAWN,KAhChBjB,EAmCVwB,QAAU,SAACV,GAAmD,IAA/CC,EAA8C,uDAnCnDf,EAmCgBC,cAAcI,OAAQW,EAAa,uCAC1DC,EApCOjB,EAoCaY,WAAWG,GACrCG,IAAQC,KACJ,cAACC,EAAA,EAAD,CACIC,OAAQtB,EACRiB,SAxCKhB,EAwCUQ,cAAcQ,GAC7BM,UAAQ,EACRvB,KAAMA,EAJV,SAMKe,IACY,CAACS,UAAWN,KA7CpBjB,EAgDVyB,KAAO,SAACX,GAAoD,IAA/CC,EAA8C,uDAhDjDf,EAgDcC,cAAcI,OAAQW,EAAa,uCACxDC,EAjDOjB,EAiDaY,WAAWG,GACrCG,IAAQC,KACJ,cAACC,EAAA,EAAD,CACIC,OAAQtB,EACRiB,SArDKhB,EAqDUQ,cAAcQ,GAC7BM,UAAQ,EACRvB,KAAMA,EAJV,SAMKe,IACY,CAACS,UAAWN,KA1DpBjB,EA6DV0B,MAAQ,SAACZ,GAAoD,IAA/CC,EAA8C,uDA7DlDf,EA6DeC,cAAcI,OAAQW,EAAa,uCACzDC,EA9DOjB,EA8DaY,WAAWG,GACrCG,IAAQC,KACJ,cAACC,EAAA,EAAD,CACIC,OAAQtB,EACRiB,SAlEKhB,EAkEUQ,cAAcQ,GAC7BM,UAAQ,EACRvB,KAAMA,EAJV,SAMKe,IACY,CAACS,UAAWN,KCjFlC,IAAMU,EAAb,kCCIe,SAASC,IACpB,MAAkC7D,mBAAS,IAA3C,mBAAO8D,EAAP,KAAkBC,EAAlB,KACA,EAAgC/D,mBAAS,IAAzC,mBAAOgE,EAAP,KAAiBC,EAAjB,KACA,EAA0BjE,mBAAS,IAAnC,mBAAOkE,EAAP,KAAcC,EAAd,KACA,EAAgCnE,mBAAS,IAAzC,mBAAOoE,EAAP,KAAiBC,EAAjB,KACA,EAA0CrE,mBAAS,IAAnD,mBAAOsE,EAAP,KAAsBC,EAAtB,KAEMC,EAAQC,IAAOC,MAAM,CACvBZ,UAAWW,IAAOE,MAAMC,aAAaC,WAAW,0BAChDb,SAAUS,IAAOE,MAAMC,aAAaC,WAAW,0BAC/CX,MAAOO,IAAOE,MAAMC,aAAaE,QAAQ,iBAAiB,qCAC1DV,SAAUK,IAAOE,MAAMC,aAAaC,WAAW,0BAC/CP,cAAeG,IAAOE,MAAMC,aAAaG,SAAQ,WAC7C,OAAIX,IAAaE,IAIhB,gCASDU,EAAa,uCAAG,sBAAAC,EAAA,sDACfT,EAAMU,MAAM,CAACpB,YAAWE,WAAUE,QAAOE,WAAUE,oBAClDa,YAA+BzF,EAAMwE,EAAOE,GAC3CgB,MAAK,WACJnD,EAAMa,QAAN,mCAA0CgB,GAAa7B,EAAMC,cAAcC,UAAW,KACtFyB,EAAUyB,OAAOvB,EAAWE,EAAUE,MAEvCoB,OAAM,SAACC,GACNtD,EAAM0B,MAAM4B,EAAEC,QAASvD,EAAMC,cAAcC,UAAU,QAZ3D4B,EAAa,IAAKE,EAAY,IAAKE,EAAS,IAAKE,EAAY,IAAKE,EAAiB,KAIjE,2CAAH,qDAcrB,OACI,sBAAKxD,MAAO,CAAE0E,aAAc,MAAOpE,QAAS,OAAQD,MAAO,QAASsE,OAAQ,QAASC,GAAG,YAAxF,UACI,sCACA,wFACA,uBACA,eAACC,EAAA,EAAD,CAAMC,SAAUb,EAAeR,MAAOA,EAAtC,UACI,sBAAKzD,MAAO,CAAC2E,OAAQ,MAAOI,UAAW,UAAvC,UACI,eAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,YAAtB,UACI,cAACJ,EAAA,EAAKK,aAAN,yBACA,cAACL,EAAA,EAAKM,QAAN,CAAczF,MAAOqD,EAAWqC,SAAU,SAACC,GAAD,OAAKrC,EAAaqC,IAAIC,KAAK,iBAEzE,eAACT,EAAA,EAAKG,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACJ,EAAA,EAAKK,aAAN,wBACA,cAACL,EAAA,EAAKM,QAAN,CAAczF,MAAOuD,EAAUmC,SAAU,SAAAC,GAAC,OAAEnC,EAAYmC,IAAIC,KAAK,gBAErE,eAACT,EAAA,EAAKG,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACJ,EAAA,EAAKK,aAAN,4BACA,cAACL,EAAA,EAAKM,QAAN,CAAczF,MAAOyD,EAAOiC,SAAU,SAAAC,GAAC,OAAEjC,EAASiC,IAAIC,KAAK,QAAQrE,KAAK,UAC5E,cAAC4D,EAAA,EAAKU,SAAN,CAAeC,SAAO,EAAtB,wDAEA,eAACX,EAAA,EAAKG,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACJ,EAAA,EAAKK,aAAN,uBACA,cAACL,EAAA,EAAKM,QAAN,CAAczF,MAAO2D,EAAU+B,SAAU,SAAAC,GAAC,OAAE/B,EAAY+B,IAAIC,KAAK,WAAWrE,KAAK,WAAWwE,aAAa,WAE7G,eAACZ,EAAA,EAAKG,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAACJ,EAAA,EAAKK,aAAN,6BACA,cAACL,EAAA,EAAKM,QAAN,CAAczF,MAAO6D,EAAe6B,SAAU,SAAAC,GAAC,OAAE7B,EAAiB6B,IAAIC,KAAK,gBAAgBrE,KAAK,WAAWwE,aAAa,cAIhI,cAACZ,EAAA,EAAKG,MAAN,UACI,cAACU,EAAA,EAAD,CAAQ1F,MAAO,CAAC2F,UAAW,QAAS1E,KAAK,SAAS2E,OAAK,EAACC,KAAK,KAAKC,WAAW,UAA7E,0BD3EPjD,EACFkD,K,uCAAO,WAAOC,GAAP,iBAAA9B,EAAA,kEAEF8B,EAFE,sBAES,IAAIC,MAAM,qBAFnB,cAIAC,EAAKC,YAAI1H,EAAD,mBAAuBuH,IAJ/B,SAMaI,YAAIF,GANjB,cAMAG,EANA,yBAQCA,EAAKC,OARN,kCAUNpF,EAAM0B,MAAM,KAAI6B,SAVV,0D,sDADL5B,EAeFyB,O,uCAAS,WAAOvB,EAAWE,EAAUE,GAA5B,iCAAAe,EAAA,6DAAmCqC,EAAnC,yCAEFL,EAAKC,YAAI1H,EAAD,aAER+H,EAAU,CACZzD,YACAE,WACAE,QACAoD,eACAE,UAAWC,IAASjI,SAASkI,YAAYC,WATrC,SAYSC,YAAOX,EAAIM,GAZpB,cAYF5B,EAZE,yBAcDA,GAdC,kCAgBR1D,EAAM0B,MAAM,KAAI6B,SAhBR,0D,uEE4BLqC,EA3CK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QACxB,EAA0B/H,mBAAS,IAAnC,mBAAOkE,EAAP,KAAcC,EAAd,KACA,EAAgCnE,mBAAS,IAAzC,mBAAOoE,EAAP,KAAiBC,EAAjB,KAcA,OACI,eAAC2D,EAAA,EAAD,CAAOpB,KAAK,KAAKqB,UAAQ,EAACC,KAAMJ,EAAMC,QAASA,EAA/C,UACI,cAACC,EAAA,EAAMG,OAAP,UACA,cAACH,EAAA,EAAMI,MAAP,wBAEA,cAACJ,EAAA,EAAMK,KAAP,UACA,eAACzC,EAAA,EAAD,CAAMC,SAjBO,WACjByC,YAA2B5I,EAAMwE,EAAOE,GACvCgB,MAAK,WACFnD,EAAMa,QAAQ,2CAEjBwC,OAAM,SAACiD,GACJtG,EAAM0B,MAAM4E,EAAI/C,aAWhB,UACI,eAACI,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKK,aAAN,4BACA,cAACL,EAAA,EAAKM,QAAN,CAAcsC,QAAS,SAACpC,GAAD,OAAKjC,EAASiC,EAAEqC,OAAOhI,aAElD,eAACmF,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKK,aAAN,uBACA,cAACL,EAAA,EAAKM,QAAN,CAAcsC,QAAS,SAACpC,GAAD,OAAK/B,EAAY+B,EAAEqC,OAAOhI,QAAQuB,KAAK,gBAElE,cAAC4D,EAAA,EAAKG,MAAN,UACI,cAACU,EAAA,EAAD,CAAQI,WAAW,UAAUF,OAAK,EAAC3E,KAAK,SAAxC,4BAIR,cAACgG,EAAA,EAAMhH,OAAP,UACI,cAACyF,EAAA,EAAD,CAAQiC,QAASX,EAASlB,WAAW,SAArC,0BClCD,SAAS8B,IACpB,MAAkC3I,qBAAlC,mBAAO4I,EAAP,KAAkBC,EAAlB,KAEA,OACI,eAACC,EAAA,EAAD,WACE,sBAAKnD,GAAG,mBAAmB5E,MAAO,CAACgI,gBAAgB,OAAD,OAASC,EAAT,MAAlD,UACE,cAAC,EAAD,CAAalB,KAAMc,EAAWb,QAAS,kBAAMc,GAAa,MACxD,cAACV,EAAA,EAAD,CAAQ5G,UAAU,4BAAlB,SACE,cAACC,EAAA,EAAD,CAAMC,OAAK,EAAX,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,iDAEF,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,8BACA,cAAC6E,EAAA,EAAD,CAAQiC,QAAS,kBAAIG,GAAa,IAAO9H,MAAO,CAAC2F,UAAW,KAAMuC,YAAa,MAAOC,MAAO,QAASC,MAAO,QAASC,SAAU,QAAS7H,UAAU,UAAUsF,WAAW,OAAxK,gCAOV,oBAAIlB,GAAG,WAAP,kEAGA,qBAAK5E,MAAO,CAACG,SAAU,WAAYwF,UAAW,MAA9C,SACE,qBAAK3F,MAAO,CAACG,SAAU,WAAYmI,MAAO,KAAM/H,OAAQ,GAAxD,SACE,cAACuC,EAAD,WAIN,cAAC,EAAD,O,aCpCJyF,EAAezJ,0BAER0J,EAAgB,SAAC,GAAD,IAAExJ,EAAF,EAAEA,SAAF,IAAYyJ,aAAZ,MAAkB,QAAlB,SACzB,cAACF,EAAa9I,SAAd,CAAuBC,MAAO+I,EAA9B,SACI,cAACC,EAAA,EAAD,CAAgBD,MAAOA,EAAvB,SACEzJ,OCHG2J,EAAb,kCAAaA,EACF5C,K,uCAAO,WAAO6C,EAAUhE,GAAjB,iBAAAV,EAAA,kEAEFU,EAFE,sBAEQ,IAAIqB,MAAM,qBAFlB,cAIAC,EAAKC,YAAI1H,EAAD,UAAcmK,EAAd,YAA0BhE,IAJlC,SAMawB,YAAIF,GANjB,cAMAG,EANA,yBAQCA,EAAKC,OARN,kCAUNpF,EAAM0B,MAAM,KAAI6B,SAVV,0D,wDADLkE,EAeFrE,O,uCAAS,WAAOsE,EAAUhE,GAAjB,iCAAAV,EAAA,yDAAqBoB,EAArB,+BAA0B,GAA1B,SAEJV,EAFI,sBAEM,IAAIqB,MAAM,qBAFhB,cAIFC,EAAKC,YAAI1H,EAAD,UAAcmK,EAAd,YAA0BhE,IAElC4B,EAAU,CACZlB,OACAmB,UAAWC,IAASjI,SAASkI,YAAYC,WARrC,SAWUvE,YAAK6D,EAAIM,GAASqC,IAX5B,cAWFA,EAXE,yBAaDA,GAbC,kCAgBR3H,EAAM0B,MAAM,KAAI6B,SAhBR,0D,wDAfPkE,EAmCFG,QAAU,SAACF,EAAUhE,EAAImE,GAC5B,IACI,IAAM7C,EAAKC,YAAI1H,EAAD,UAAcmK,EAAd,YAA0BhE,IAQxC,OANAkE,YAAQ5C,GAAI,SAAA8C,GACRD,EAAGC,EAAK1C,UACT,SAAAkB,GACCtG,EAAM0B,MAAM4E,MAGTtB,EACV,MAAMsB,GACHtG,EAAM0B,MAAM4E,KClCjB,IAAMyB,GAAb,kCAAaA,GACFlD,K,uCAAO,WAAO6C,EAAUM,GAAjB,iBAAAhF,EAAA,kEAEFgF,EAFE,sBAEiB,IAAIjD,MAAM,4CAF3B,cAIAC,EAAKC,YAAI1H,EAAD,UAAcmK,EAAd,YAA0BM,IAJlC,SAMa9C,YAAIF,GANjB,cAMAG,EANA,yBAQCA,EAAKC,OARN,kCAUNpF,EAAM0B,MAAN,MAVM,0D,wDADLqG,GAeFE,a,uCAAe,WAAOP,EAAUM,EAAaE,GAA9B,iBAAAlF,EAAA,kEAEVgF,EAFU,sBAES,IAAIjD,MAAM,4CAFnB,UAGVmD,EAHU,sBAGG,IAAInD,MAAM,+BAHb,cAKRC,EAAKC,YAAI1H,EAAD,UAAcmK,EAAd,YAA0BM,EAA1B,YAAyCE,IALzC,SAOKhD,YAAIF,GAPT,cAORG,EAPQ,yBASPA,EAAKC,OATE,kCAWdpF,EAAM0B,MAAN,MAXc,0D,0DAfbqG,GA+BFpC,O,uCAAS,WAAO+B,EAAUM,EAAaE,EAAO1J,GAArC,iBAAAwE,EAAA,kEAEJgF,EAFI,sBAEe,IAAIjD,MAAM,4CAFzB,cAIFC,EAAKC,YAAI1H,EAAD,UAAcmK,EAAd,YAA0BM,EAA1B,YAAyCE,IAEjD5C,EAAU,CACZ9G,QACA2J,YAAa3C,IAASjI,SAASkI,YAAYC,WARvC,SAWF0C,YAAIpD,EAAIM,GAXN,uDAcRtF,EAAM0B,MAAN,MAdQ,yD,4DA/BPqG,GAiDFM,O,uCAAS,WAAOX,EAAUM,GAAjB,eAAAhF,EAAA,kEAEJgF,EAFI,sBAEe,IAAIjD,MAAM,4CAFzB,cAIFC,EAAKC,YAAI1H,EAAD,UAAcmK,EAAd,YAA0BM,IAJhC,SAMFI,YAAIpD,EAAI,MANN,uDASRhF,EAAM0B,MAAN,MATQ,yD,wDC/Db,IAAM4G,GAAb,kCAAaA,GACFZ,S,eADEY,GAGFzD,K,uCAAO,WAAMmD,GAAN,SAAAhF,EAAA,+EACJ+E,GAAOlD,KAJRyD,GAIkBZ,SAAUM,IADvB,2C,sDAHLM,GAOFC,gB,uCAAkB,WAAOP,EAAaQ,EAAMX,GAA1B,eAAA7E,EAAA,sEAEXgC,EAAKC,YAAI1H,EAAD,UATb+K,GASgCZ,SAAnB,YAA+BM,EAA/B,YAA8CQ,IAE5DZ,YAAQ5C,GAAI,SAAA8C,GACRD,EAAGC,EAAK1C,UACT,SAAAkB,GACCtG,EAAM0B,MAAM4E,MAPC,kBAUVtB,GAVU,gCAYjBhF,EAAM0B,MAAN,MAZiB,wD,0DAPhB4G,GAuBFL,a,uCAAe,WAAOD,EAAaE,GAApB,SAAAlF,EAAA,+EACX+E,GAAOE,aAxBTK,GAwB2BZ,SAAUM,EAAaE,IADrC,2C,wDAvBbI,GA2BF3C,O,uCAAS,WAAOqC,EAAaE,EAAO1J,GAA3B,SAAAwE,EAAA,sEACN+E,GAAOpC,OA5BR2C,GA4BoBZ,SAAUM,EAAaE,EAAO1J,GAD3C,2C,0DA3BP8J,GA+BFD,O,uCAAS,WAAML,GAAN,SAAAhF,EAAA,sEACN+E,GAAOM,OAhCRC,GAgCoBZ,SAAUM,GADvB,2C,sDClCb,IAAMS,GAAb,kCAAaA,GACFf,S,eADEe,GAGF5D,K,uCAAO,WAAMmD,GAAN,SAAAhF,EAAA,+EACH+E,GAAOlD,KAJT4D,GAImBf,SAAUM,IADxB,2C,sDAHLS,GAOFR,a,uCAAe,WAAOD,EAAaE,GAApB,SAAAlF,EAAA,+EACX+E,GAAOE,aARTQ,GAQ2Bf,SAAUM,EAAaE,IADrC,2C,wDAPbO,GAWF9C,O,uCAAS,WAAOqC,EAAaE,EAAO1J,GAA3B,SAAAwE,EAAA,sEACN+E,GAAOpC,OAZR8C,GAYoBf,SAAUM,EAAaE,EAAO1J,GAD3C,2C,0DAXPiK,GAeFJ,O,uCAAS,WAAML,GAAN,SAAAhF,EAAA,sEACN+E,GAAOM,OAhBRI,GAgBoBf,SAAUM,GADvB,2C,sDCGb,IAAMU,GAAb,kCAAaA,GACFhB,SAAW,iBADTgB,GAGFC,QAAU5D,MAAM,gDAHd2D,GAKF7D,K,uCAAO,WAAO+D,GAAP,SAAA5F,EAAA,+EACHyE,EAAS5C,KANX6D,GAMqBhB,SAAUkB,IAD1B,2C,sDALLF,GASFG,YAAc,SAACD,EAAQf,GAC1B,OAAOJ,EAASG,QAVXc,GAUwBhB,SAAUkB,EAAQf,IAV1Ca,GAcFtF,O,uCAAS,WAAOwF,EAAQxE,GAAf,SAAApB,EAAA,+EACLyE,EAASrE,OAfXsF,GAeuBhB,SAAUkB,EAAQxE,IADlC,2C,wDAdPsE,GAkBFL,O,uCAAS,WAAOO,GAAP,uBAAA5F,EAAA,kEAEJ4F,EAFI,sBAEU,IApBjBF,GAoB0BC,QAFnB,cAIF3D,EAAKC,YAAI1H,EAAD,UAtBbmL,GAsBgChB,SAAnB,YAA+BkB,IAJrC,SAOmB1D,YAAIF,GAPvB,OASR,IAFM8D,EAPE,OAQFC,EAAaC,OAAOC,KAAKH,EAAa1D,OAAS,IAC7C8D,EAAI,EAAIA,EAAGH,EAAWI,OAAQD,IAC5BxF,EAAKqF,EAAWG,GACtBT,GAAeJ,OAAO3E,GACtB4E,GAAeD,OAAO3E,GAZlB,iBAeF0E,YAAIpD,EAAI,MAfN,0DAkBRhF,EAAM0B,MAAM,KAAI6B,SAlBR,0D,sDAlBPmF,GAwCFU,e,uCAAiB,WAAOR,EAAQS,GAAf,eAAArG,EAAA,kEAEZ4F,EAFY,sBAEE,IA1CjBF,GA0C0BC,QAFX,UAGZU,EAHY,sBAGM,IA3CrBX,GA2C8BC,QAHf,cAMV3D,EAAKC,YAAI1H,EAAD,UA9CbmL,GA8CgChB,SAAnB,YAA+BkB,EAA/B,YAAyCS,IANvC,SAQXZ,GAAeJ,OAAOgB,GARX,wBASXf,GAAeD,OAAOgB,GATX,yBAWVjB,YAAIpD,EAAI,MAXE,0DAchBhF,EAAM0B,MAAM,KAAI6B,SAdA,0D,wDCzCrB,IAAM+F,GAAb,kCAAaA,GACF5B,SAAW,YADT4B,GAKFzE,K,uCAAO,WAAO0E,GAAP,SAAAvG,EAAA,+EACHyE,EAAS5C,KANXyE,GAMqB5B,SAAU6B,IAD1B,2C,sDALLD,GASFT,Y,uCAAc,WAAOU,EAAU1B,GAAjB,SAAA7E,EAAA,+EACVyE,EAASG,QAVX0B,GAUwB5B,SAAU6B,EAAU1B,IADhC,2C,wDATZyB,GAaFlG,O,uCAAS,WAAOmG,EAAUnF,GAAjB,SAAApB,EAAA,+EACLyE,EAASrE,OAdXkG,GAcuB5B,SAAU6B,EAAUnF,IADpC,2C,wDAbPkF,GAiBFjB,O,uCAAS,WAAOkB,GAAP,uBAAAvG,EAAA,kEAEJuG,EAFI,sBAEY,IAAIxE,MAAM,6CAFtB,cAIFC,EAAKC,YAAI1H,EAAD,UArBb+L,GAqBgC5B,SAAnB,YAA+B6B,IAJrC,SAOkBrE,YAAIF,GAPtB,OASR,IAFMwE,EAPE,OAQFC,EAAiBT,OAAOC,KAAKO,EAAYpE,OAAS,IAChD8D,EAAI,EAAIA,EAAGO,EAAeN,OAAQD,IAChCxF,EAAK+F,EAAeP,GAC1BR,GAAgBL,OAAO3E,GAXnB,iBAcF0E,YAAIpD,EAAI,MAdN,0DAiBRhF,EAAM0B,MAAM,KAAI6B,SAjBR,0D,sDAjBP+F,GAsCFF,e,uCAAkB,WAAOG,EAAU7F,GAAjB,eAAAV,EAAA,kEAEbuG,EAFa,sBAEGxE,MAAM,6CAFT,UAGbrB,EAHa,sBAGHqB,MAAM,qCAHH,cAKXC,EAAKC,YAAI1H,EAAD,UA3Cb+L,GA2CgC5B,SAAnB,YAA+B6B,EAA/B,YAA2C7F,IALxC,SAOXgF,GAAgBL,OAAO3E,GAPZ,wBASX0E,YAAIpD,EAAI,MATG,0DAYjBhF,EAAM0B,MAAM,KAAI6B,SAZC,0D,wDCtCtB,IAAMmG,GAAb,kCAAaA,GACFhC,SAAW,YADTgC,GAGFf,QAAU5D,MAAM,2CAHd2E,GAKFb,Y,uCAAc,WAAOc,EAAO9B,GAAd,SAAA7E,EAAA,+EACVyE,EAASG,QANX8B,GAMwBhC,SAAUiC,EAAO9B,IAD7B,2C,wDALZ6B,GASF7E,K,uCAAO,WAAO8E,GAAP,SAAA3G,EAAA,+EACHyE,EAAS5C,KAVX6E,GAUqBhC,SAAUiC,IAD1B,2C,sDATLD,GAaFtG,O,uCAAS,WAAOuG,EAAOvF,GAAd,SAAApB,EAAA,+EACLyE,EAASrE,OAdXsG,GAcuBhC,SAAUiC,EAAOvF,IADjC,2C,wDAbPsF,GAiBFrB,O,uCAAS,WAAOsB,GAAP,uBAAA3G,EAAA,kEAEJ2G,EAFI,sBAES,IAnBhBD,GAmByBf,QAFlB,cAIF3D,EAAKC,YAAI1H,EAAD,UArBbmM,GAqBgChC,SAAnB,YAA+BiC,IAJrC,SAOgBzE,YAAIF,GAPpB,OASR,IAFM4E,EAPE,OAQFC,EAAeb,OAAOC,KAAKW,EAAUxE,OAAS,IAC5C8D,EAAI,EAAIA,EAAGW,EAAaV,OAAQD,IAC9BxF,EAAKmG,EAAaX,GACxBI,GAAYjB,OAAO3E,GAXf,iBAcF0E,YAAIpD,EAAI,MAdN,0DAiBRhF,EAAM0B,MAAM,KAAI6B,SAjBR,0D,sDAjBPmG,GAsCFN,e,uCAAiB,WAAOO,EAAOJ,GAAd,eAAAvG,EAAA,kEAEZ2G,EAFY,sBAEC,IAxChBD,GAwCyBf,QAFV,UAGZY,EAHY,sBAGI,IAzCnBG,GAyC4Bf,QAHb,cAKV3D,EAAKC,YAAI1H,EAAD,UA3CbmM,GA2CgChC,SAAnB,YAA+BiC,EAA/B,YAAwCJ,IALtC,SAOVD,GAAYjB,OAAOkB,GAPT,wBASVnB,YAAIpD,EAAI,MATE,0DAYhBhF,EAAM0B,MAAM,KAAI6B,SAZA,0D,wDChDrB,IAAMuG,GAAb,kCAAaA,GACFpC,SAAW,YADToC,GAGFC,Q,uCAAU,WAAOC,GAAP,SAAAhH,EAAA,+EACNyE,EAAS5C,KAJXiF,GAIqBpC,SAAUsC,IADvB,2C,sDAHRF,GAOFjB,YAAc,SAACmB,EAAOnC,GAC1B,OAAOJ,EAASG,QARVkC,GAQuBpC,SAAUsC,EAAOnC,IARxCiC,GAWF7B,a,uCAAe,WAAO+B,EAAOL,GAAd,iBAAA3G,EAAA,kEAEVgH,EAFU,sBAEG,IAAIjF,MAAM,kCAFb,UAGV4E,EAHU,sBAGG,IAAI5E,MAAM,oCAHb,cAKRC,EAAKC,YAAI1H,EAAD,UAhBbuM,GAgBgCpC,SAAnB,YAA+BsC,EAA/B,YAAwCL,IALxC,SAOKzE,YAAIF,GAPT,cAORG,EAPQ,yBAQPA,EAAKC,OARE,kCAUdpF,EAAM0B,MAAN,MAVc,0D,wDAXboI,GAyBF1G,O,uCAAS,WAAO4G,GAAP,mCAAAhH,EAAA,yDAAcoB,EAAd,+BAAmB,WAAY6F,EAA/B,+BAAyC,EAAzC,SAEJD,EAFI,sBAES,IAAIjF,MAAM,kCAFnB,cAIFC,EAAKC,YAAI1H,EAAD,UA7BbuM,GA6BgCpC,SAAnB,YAA+BsC,IAEvC1E,EAAU,CACZlB,OACA6F,YACAC,SAAU1E,IAASjI,SAASkI,YAAYC,UACxCyC,YAAa3C,IAASjI,SAASkI,YAAYC,WAVvC,SAaUvE,YAAK6D,EAAIM,GAbnB,cAaHH,EAbG,yBAcFA,EAAKwC,KAdH,kCAgBR3H,EAAM0B,MAAN,MAhBQ,0D,sDAzBPoI,GA8CFK,Y,uCAAc,WAAOH,EAAOL,EAAOhC,EAAKnJ,GAA1B,eAAAwE,EAAA,kEAETgH,EAFS,sBAEI,IAAIjF,MAAM,kCAFd,UAGT4E,EAHS,sBAGI,IAAI5E,MAAM,oCAHd,cAKTC,EAAKC,YAAI1H,EAAD,UAnDXuM,GAmD8BpC,SAAnB,YAA+BsC,EAA/B,YAAwCL,EAAxC,YAAiDhC,IALhD,SAOPS,YAAIpD,EAAIxG,GAPD,cASbwG,EAAKC,YAAI1H,EAAD,UAvDPuM,GAuD0BpC,SAAnB,YAA+BsC,EAA/B,YAAwCL,EAAxC,iBATK,UAUPvB,YAAIpD,EAAIQ,IAASjI,SAASkI,YAAYC,WAV/B,0DAYb1F,EAAM0B,MAAN,MAZa,0D,4DA9CZoI,GA8DFV,e,uCAAiB,WAAOY,EAAOL,GAAd,eAAA3G,EAAA,kEAEZgH,EAFY,sBAEC,IAAIjF,MAAM,4CAFX,cAIVC,EAAKC,YAAI1H,EAAD,UAlEbuM,GAkEgCpC,SAAnB,YAA+BsC,EAA/B,YAAwCL,IAJtC,SAOVD,GAAYrB,OAAOsB,GAPT,uBASVvB,YAAIpD,EAAI,MATE,yDAYhBhF,EAAM0B,MAAN,MAZgB,0D,wDA9DfoI,GA+EFM,U,uCAAY,WAAOJ,GAAP,uBAAAhH,EAAA,kEAEPgH,EAFO,sBAEM,IAAIjF,MAAM,4CAFhB,cAILC,EAAKC,YAAI1H,EAAD,UAnFbuM,GAmFgCpC,SAAnB,YAA+BsC,IAJlC,SAOU9E,YAAIF,GAPd,OASX,IAFMqF,EAPK,OAQLC,EAAYtB,OAAOC,KAAKoB,EAAOjF,OAAS,IACtC8D,EAAI,EAAIA,EAAGoB,EAAUnB,OAAQD,IAC3BxF,EAAK4G,EAAUpB,GACrBQ,GAAYrB,OAAO3E,GAXZ,iBAcL0E,YAAIpD,EAAI,MAdH,0DAgBXhF,EAAM0B,MAAN,MAhBW,0D,gICtDR6I,GA/BM,SAAC,GAA0E,IAAD,IAAxEC,eAAwE,MAAhE,GAAgE,MAA5DC,oBAA4D,MAA/C,EAA+C,EAA5CvG,EAA4C,EAA5CA,SAAUpF,EAAkC,EAAlCA,MAAO6F,EAA2B,EAA3BA,KAA2B,IAArB+F,iBAAqB,SAC3F,EAA0C3M,mBAAS0M,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KAQMC,EAAML,EAAQM,KAAI,SAAC1F,EAAI8D,GAAL,OACpB,cAAC1E,EAAA,EAAD,CACIiC,QAAS,kBARI,SAAAyC,GACjB0B,EAAiB1B,GACjBhF,EAASsG,EAAQtB,GAAG1K,OAMHuM,CAAa7B,IAE1BtE,WAAY+F,IAAgBzB,EAAI,UAAY,QAC5CvE,KAAMA,EAJV,SAMKS,EAAI4F,MAJA9B,MAUb,OACI,cAAC+B,GAAA,EAAD,CAAenM,MAAOA,EAAtB,SACI,cAACoM,GAAA,EAAD,CAAaR,UAAWA,EAAxB,SACKG,O,UCbXM,GAAgB,CAClB,CACIH,KAAM,cAAC,KAAD,CAAiBI,KAAMC,OAC7B7M,MAAO,QAEX,CACIwM,KAAM,cAAC,KAAD,CAAiBI,KAAME,OAC7B9M,MAAO,UAiDA+M,GA3CG,SAAC,GAAuB,IAAtBzM,EAAqB,EAArBA,MAAO0M,EAAc,EAAdA,SACvB,EAAoCzN,oBAAS,GAA7C,mBAAO0N,EAAP,KAAmBC,EAAnB,KACO1N,EAAQS,IAART,KAWP,OACI,qCACI,eAAC2N,GAAA,EAAD,CAAQ7M,MAAK,eAAMA,GAAnB,UACI,eAAC6M,GAAA,EAAOC,MAAR,4BACmBC,QAEnB,eAACC,GAAA,EAAD,CAAKC,WAAS,EAACjN,MAAO,CAAC2F,UAAW,OAAlC,UACA,cAACD,EAAA,EAAD,CAAQiC,QAAS,kBAAIiF,GAAc,IAAO9G,WAAW,OAArD,SAA6D5G,EAAKiE,QAClE,cAAC,GAAD,CACIuI,QAASW,GACTjH,SAAU,SAACZ,GAAD,OAAOkI,EAASlI,IAC1BxE,MAAO,CAACkN,aAAc,MAAOhF,YAAa,MAAOlH,UAAW,SAC5D6E,KAAK,aAKb,eAACsH,GAAA,EAAD,CAAQtH,KAAK,KAAKpD,UAAU,QAAQ0E,KAAMwF,EAAY3F,QAAS,kBAAK4F,GAAc,IAAlF,UACI,cAACO,GAAA,EAAO/F,OAAR,UACI,cAAC+F,GAAA,EAAO9F,MAAR,UAAenI,EAAKiE,UAExB,cAACgK,GAAA,EAAO7F,KAAR,UACQ,cAAC5B,EAAA,EAAD,CAAQE,OAAK,EAACE,WAAW,UAAUsC,MAAM,MAAMT,QA/B7C,WAClByF,YAAQzO,GAAM0F,MAAK,eAGjBE,OAAM,SAACiD,GACLtG,EAAM0B,MAAM4E,EAAI/C,aA0BJ,+B,uFCvDX4I,GAAb,kCAAaA,GACFzE,SAAW,UADTyE,GAGFpC,Q,sBAAU,8BAAA/G,EAAA,sEAEHgC,EAAKC,YAAI1H,EAAD,UALb4O,GAKgCzE,SAAnB,MAFL,SAGUxC,YAAIF,GAHd,cAGHG,EAHG,yBAIFA,EAAKC,OAJH,gCAMTpF,EAAM0B,MAAN,MANS,yDAHRyK,GAaFtH,K,uCAAO,WAAMmF,GAAN,SAAAhH,EAAA,+EACHyE,EAAS5C,KAdXsH,GAcqBzE,SAAUsC,IAD1B,2C,sDAbLmC,GAiBFtD,YAAc,SAAChB,GACnB,OAAOJ,EAASG,QAlBVuE,GAkBuBzE,SAAU,GAAIG,IAlBrCsE,GAqBF/I,O,sBAAS,sDAAAJ,EAAA,6DAAOkF,EAAP,+BAAa,WAAYkE,EAAzB,+BAA+B,KAAMC,EAArC,+BAAgD,KAAMC,EAAtD,+BAAgE,KAAMC,EAAtE,+BAAiF,KAAjF,SAEFvH,EAAKC,YAAI1H,EAAD,UAvBb4O,GAuBgCzE,SAAnB,MAERpC,EAAU,CACZ4C,QACAkE,QACAC,aACAC,YACAC,aACArC,SAAU1E,IAASjI,SAASkI,YAAYC,UACxCyC,YAAa3C,IAASjI,SAASkI,YAAYC,WAXvC,UAcWvE,YAAK6D,EAAIM,GAdpB,eAcFH,EAdE,yBAeDA,EAAKwC,KAfJ,kCAiBR3H,EAAM0B,MAAN,MAjBQ,0DArBPyK,GA0CFxG,O,uCAAS,WAAOqE,GAAP,uCAAAhH,EAAA,yDAAckF,EAAd,+BAAoB,WAAYkE,EAAhC,+BAAsC,KAAMC,EAA5C,+BAAuD,KAAMC,EAA7D,+BAAuE,KAAMC,EAA7E,+BAAwF,KAAxF,SAEJvC,EAFI,sBAES,IAAIjF,MAAM,kCAFnB,cAIFC,EAAKC,YAAI1H,EAAD,UA9Cb4O,GA8CgCzE,SAAnB,YAA+BsC,IAEvCwC,EAAS,CACXtE,QACAkE,QACAC,aACAC,YACAC,aACApE,YAAa3C,IAASjI,SAASkI,YAAYC,WAZvC,UAeFC,YAAOX,EAAIwH,GAfT,0DAkBRxM,EAAM0B,MAAN,MAlBQ,0D,sDA1CPyK,GAiEF9D,O,uCAAS,WAAM2B,GAAN,eAAAhH,EAAA,kEAEJgH,EAFI,sBAES,IAAIjF,MAAM,kCAFnB,cAIFC,EAAKC,YAAI1H,EAAD,UArEb4O,GAqEgCzE,SAAnB,YAA+BsC,IAJrC,SAOFF,GAAWM,UAAUJ,GAPnB,uBASF5B,YAAIpD,EAAI,MATN,yDAWRhF,EAAM0B,MAAN,MAXQ,0D,sDCpDb,IAAM+K,GAAW,SAAAhM,GACtB,OAAGC,OAAOgM,MAAMjM,GAAW,MAEnB,IAAIkM,KAAKlM,GAAImM,gBAIVC,GAAa,SAAAC,GACxB,OAAIA,EAEQ9D,OAAOC,KAAK6D,GAEbhC,KAAI,SAAApH,GACb,OAAO,aAACA,MAAOoJ,EAAIpJ,OALL,IAwBlB,IAAMqJ,GAAqB,SAACC,EAAKC,GAC/BC,UAAOC,OAAOH,GAAK7J,MAAK,SAACiK,GAEvBC,kBAAOD,EAAMH,OAIXK,GAAc,SAAAC,GAAC,OAAO,EAAFA,GA8CpBC,GAAmB,SAACC,EAAUC,GAKlC,IAJA,IAAMC,EAAUF,EAAStE,OAASuE,EAASvE,OAASsE,EAAStE,OAASuE,EAASvE,OAEzEyE,EAAY,GAEV1E,EAAG,EAAGA,EAAGyE,EAASzE,IACxB0E,EAAUzM,KACR,IAAI0M,YAAS,CACX/P,SAAU,CACR4P,EAASxE,GACT,IAAI4E,aAAU,CACZhQ,SAAU,CACR,IAAIiQ,aAAU,CACZjQ,SAAU,CACR,IAAIkQ,WAAJ,UAAeN,EAASxE,GAAGxF,GAA3B,cAAmCgK,EAASxE,GAAG1K,SAEjDM,MAAO,eAGR,IAAIgP,aAAU,CAAChQ,SAAS,KAC/B2P,EAASvE,GACP,IAAI4E,aAAU,CACZhQ,SAAU,CACR,IAAIiQ,aAAU,CACZjQ,SAAU,CACR,IAAIkQ,WAAJ,UAAeP,EAASvE,GAAGxF,GAA3B,cAAmC+J,EAASvE,GAAG1K,SAEjDM,MAAO,eAGR,IAAIgP,aAAU,CAAChQ,SAAS,SAMrC,OAAO8P,GAKHK,GAAqB,uCAAG,WAAMC,GAAN,yBAAAlL,EAAA,sDACtBmL,EAAY,GACVjF,EAAG,EAFiB,YAEdA,EAAGgF,EAAU/E,QAFC,wBAGpBiF,EAAOF,EAAUhF,GAHG,SAKNZ,GAAeL,aAAamG,EAAK1K,GAAI,iBAL/B,cAKpB2K,EALoB,YAQTxB,GARS,UAQQvE,GAAezD,KAAKuJ,EAAK1K,IARjC,2BAQpB+J,GARoB,mBAUTZ,GAVS,UAUQpE,GAAe5D,KAAKuJ,EAAK1K,IAVjC,2BAUpBgK,GAVoB,mBAY1BS,EAZ0B,KAapBG,SAboB,MAepB,IAAIT,YAAS,CACX/P,SAAU,CACR,IAAIgQ,aAAU,CACZhQ,SAAU,CACR,IAAIiQ,aAAU,CACZjQ,SAAU,CACR,IAAIkQ,WAAJ,cAAmBK,EAAM7P,SAE3BM,MAAO,uBAOjB,IAAI+O,YAAS,CACX/P,SAAU,CACR,IAAIgQ,aAAU,CACZhQ,SAAU,CACR,IAAIiQ,aAAU,CACZjQ,SAAU,CACR,IAAIkQ,WAAQ,aAEdlP,MAAO,oBAKb,IAAIgP,aAAU,CACZhQ,SAAU,CACR,IAAIiQ,aAAU,CACZjQ,SAAU,CACR,IAAIkQ,WAAQ,aAEdlP,MAAO,wBAjDG,oBAuDX0O,GAAiBC,EAAUC,GAvDhB,iFActBa,KAdsB,kCAYhBpN,KAZgB,yBAEO+H,IAFP,gDA4DrBiF,GA5DqB,4CAAH,sDA+DrBK,GAAkB,uCAAG,WAAMC,GAAN,qBAAAzL,EAAA,sDACnBmL,EAAY,GACVjF,EAAG,EAFc,YAEXA,EAAGuF,EAAMtF,QAFE,wBAGjBuF,EAAOD,EAAMvF,GAHI,KAKL2D,GALK,SAKYnE,GAAgB7D,KAAK6J,EAAKhL,IALtC,0BAKjBwK,GALiB,mBAOvBC,EAAUhN,KAPa,KAOvBgN,EAPuB,MAQrB,IAAIJ,aAAU,CACZY,KAAMD,EAAKtK,KACXwK,QAASC,gBAAaC,aAVH,oBAYZb,GAAsBC,GAZV,iHAEMhF,IAFN,gDAgBlBiF,GAhBkB,4CAAH,sDAmBlBY,GAAiB,uCAAG,WAAM5J,GAAN,qBAAAnC,EAAA,sDAClBmL,EAAY,GAEVjF,EAAG,EAHa,YAGVA,EAAG/D,EAAKgE,QAHE,wBAIhB6F,EAAS7J,EAAK+D,GAJE,KAMH2D,GANG,SAMcvD,GAAYzE,KAAKmK,EAAOtL,IANtC,0BAMhBuL,GANgB,mBAQtBd,EAAUhN,KARY,KAQtBgN,EARsB,MASpB,IAAIJ,aAAU,CACZY,KAAMK,EAAO5K,KACbwK,QAASC,gBAAaK,aAXJ,oBAaXV,GAAmBS,GAbR,iHAGM/F,IAHN,gDAiBjBiF,GAjBiB,4CAAH,sDAoBVgB,GAAgB,uCAAG,WAAOC,EAAOC,GAAd,uBAAArM,EAAA,sEAEtBsM,EAAO,IAAI3C,KAFW,SAIPR,GAAStH,KAAKuK,GAJP,cAItBG,EAJsB,gBAKLzF,GAAW7B,aAAamH,EAAOC,GAL1B,cAKtBG,EALsB,YAMR3C,GANQ,UAMSnD,GAAY7E,KAAKwK,GAN1B,2BAMtBI,GANsB,mBAOZC,YAPY,KAQlB,CACNC,QAAS,CACPC,SAAU,CACNC,IAAK,CACDlL,KAAM2I,GAAY,IAClBwC,MAAM,EACN5I,MAAO,UAEX6I,UAAW,CACPC,QAAS,CACLC,MAAO,KAEXJ,IAAK,CACH3I,MAAO,YAIjBgJ,SAAU,CACNL,IAAK,CACHlL,KAAM2I,GAAY,IAClBwC,MAAM,EACNK,UAAW,CACPpQ,KAAMqQ,iBAAcC,QAExBnJ,MAAO,UAET6I,UAAW,CACTC,QAAS,CACPC,MAAO,OAIfK,SAAU,CACRT,IAAK,CACHlL,KAAM2I,GAAY,IAClBwC,MAAM,EACN5I,MAAO,UAET6I,UAAW,CACTC,QAAS,CACPC,MAAO,MAIbM,cAAe,CACXV,IAAK,CACD3I,MAAO,YAIjBsJ,gBAAiB,CACjB,CACE9M,GAAI,aACJU,KAAM,qBACNqM,QAAS,SACTC,KAAM,SACNC,aAAa,EACbd,IAAK,CACDlL,KAAM2I,GAAY,IAClBpG,MAAO,UAEX6I,UAAW,CACTC,QAAS,CACPY,OAAQ,OAId,CACElN,GAAI,UACJU,KAAM,UACNqM,QAAS,SACTC,KAAM,SACNC,aAAa,EACbd,IAAK,CACDlL,KAAM2I,GAAY,IAClBpG,MAAO,WAGb,CACExD,GAAI,eACJU,KAAM,eACNqM,QAAS,SACTC,KAAM,SACNC,aAAa,EACbd,IAAK,CACDlL,KAAM2I,GAAY,IAClBpG,MAAO,SACP4I,MAAM,MA/FY,KAqGZ,GArGY,MAuGtB,IAAI/B,aAAU,CACZY,KAAK,GAAD,OAAKY,EAAOrH,MAAZ,eAAwBsH,EAASpL,MACrCwK,QAASC,gBAAagC,YAExB,IAAI9C,aAAU,CACZjQ,SAAU,CACR,IAAIkQ,WAAQ,kBAAmB,IAAIA,WAAQ,CAACW,KAAK,GAAD,OAAKW,EAAK1C,eAAV,YAA4B0C,EAAKwB,sBAAwBhB,MAAM,KAEjHhR,MAAO,YAET,IAAIiP,aAAU,CACZjQ,SAAU,CACR,IAAIkQ,WAAQ,gBAAiB,IAAIA,WAAQ,CAACW,KAAMY,EAAOlD,WAAYyD,MAAM,IACzE,IAAI9B,WAAQ,WAAY,IAAIA,WAAQ,CAACW,KAAMY,EAAOnD,MAAO0D,MAAM,KAEjEhR,MAAO,eAET,IAAIiP,aAAU,KAxHQ,oBAyHZgB,GAAkBU,GAzHN,gFAqGxBsB,WArGwB,KAsGxBjT,SAtGwB,2BAQ1BkT,OAR0B,KAoG1BC,SApG0B,OAOtBjE,EAPsB,gBA6H5BD,GAAmBC,EAAK,qBA7HI,mDA+H5BhN,EAAM0B,MAAM,mCA/HgB,0DAAH,wD,2HCpPvBwP,GAAiBC,IAAMC,YAAW,WAA4BnM,GAA5B,IAAGoM,EAAH,EAAGA,aAAiBC,EAApB,0BACpC,cAACC,GAAA,EAAD,yBAAStM,IAAKA,GAASqM,GAAvB,IAA6BE,MAAI,EAAjC,SACE,eAACC,GAAA,EAASC,KAAV,CAAeC,SAAU,SAACC,EAAGtO,GAAK+N,EAAaO,GAAItO,EAAEuO,mBAArD,UACE,cAACJ,GAAA,EAASK,KAAV,CAAeC,SAAU,EAAzB,0BACA,cAACN,GAAA,EAASK,KAAV,0BACA,cAACL,GAAA,EAASK,KAAV,CAAeC,SAAU,EAAzB,oCAOKC,GAAgB,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,eACtCjN,EAAMkN,mBAUZ,OACE,cAACC,GAAA,EAAD,CACI7Q,UAAU,aACVwC,UAAU,2BACVsO,QAAQ,QACRpN,IAAKA,EACLwB,QAAS,SAACnD,GAAD,OAAKA,EAAEuO,mBAChBS,QAAS,cAACpB,GAAD,CAAgBG,aAAc,SAAA/N,GAAC,OAfrC,KADYsO,EAgBwCtO,GAdzD2O,IACW,IAAJL,GACPM,SAGFjN,EAAIsN,QAAQC,QAPO,IAAAZ,KAUnB,SAQE,cAACpN,EAAA,EAAD,CAAQI,WAAW,SAASD,KAAK,KAAjC,SAAsC,cAAC,KAAD,S,UCpB7B8N,GAdM,SAAC,GAAgC,IAAD,IAA9B9D,YAA8B,MAAzB,UAAyB,EAAd7Q,EAAc,EAAdA,SAC7BwG,EACF,cAACoO,GAAA,EAAD,UACG/D,IAIP,OACI,cAACyD,GAAA,EAAD,CAAS7Q,UAAU,MAAMwC,UAAU,mBAAmBsO,QAAQ,QAAQC,QAAShO,EAA/E,SACKxG,K,0CCHA6U,GAAW,SAAC,GAA4D,IAA3DC,EAA0D,EAA1DA,WAAYxO,EAA8C,EAA9CA,KAAMyO,EAAwC,EAAxCA,UAAwC,IAA7B5I,iBAA6B,MAAnB,EAAmB,EAAhB6I,EAAgB,EAAhBA,WAChE,ECkCoB,WACtB,MAA0B/U,oBAAS,GAAnC,mBAAOS,EAAP,KAAcuU,EAAd,KACM9N,EAAMkN,iBAAO,MACba,EAAkB,kBAAMD,GAAS,IACjCE,EAAiB,kBAAMF,GAAS,IAgBtC,OAfA3U,qBACE,WACE,IAAM8U,EAAOjO,EAAIsN,QAKjB,OAJIW,IACFA,EAAKC,iBAAiB,YAAaH,GACnCE,EAAKC,iBAAiB,WAAYF,IAE7B,WACHC,EAAKE,oBAAoB,YAAaJ,GACtCE,EAAKE,oBAAoB,WAAYH,MAI3C,CAAChO,EAAIsN,UAEA,CAACtN,EAAKzG,GDtDU6U,GAArB,mBAAOpO,EAAP,KAAYqO,EAAZ,KACAlP,EAAKA,GAAQ,WAEb,IAAMmP,EAAIC,KAAOX,GACXY,EAAQD,OAASE,SAAS,EAAG,QAAQC,SAASJ,GAE9CK,EAAWd,EAAa,CAACe,WAAY,mBAAqB,KAE1DC,EAAc,WAAOlB,KAC3B,OACI,qBAAK7S,KAAK,SAASgU,SAAU,EAAGC,KAAK,SAASC,QAAQ,OAAOxN,QAASqN,EAAaI,UAAWJ,EAAahV,MAAK,aAAGqV,QAAS,QAAShV,MAAO,QAAWyU,GAAY3O,IAAKA,EAAK3F,UAAU,2BAAvL,SACI,cAACC,EAAA,EAAD,CAAMC,OAAK,EAAX,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC,GAAD,CAAcgP,KAAMvK,EAApB,SACI,mBAAG9E,UAAU,8BAAb,SAA4C8E,QAGpD,cAAC1E,EAAA,EAAD,CAAKC,GAAI,EAAT,SACK8T,EAAQ,sBAAMnU,UAAU,MAAhB,iBAAmC,OAGhD,eAACI,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,sBAAML,UAAU,UAAhB,kBAAsC2K,KAE1C,cAACvK,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,uBAAMb,MAAO,CAACqI,SAAU,QAAxB,UACI,mBAAG7H,UAAU,yBAAb,SAAuCiU,EAAEa,OAAO,eAChD,mBAAG9U,UAAU,8BAAb,SAA4CiU,EAAEa,OAAO,oBAG7D,cAAC1U,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC6E,EAAA,EAAD,CAAQG,KAAK,KAAKC,WAAW,SAASsC,MAAM,MAAMpI,MAAO,CAACG,SAAU,WAAYoV,KAAM,MAAOC,IAAK,MAAOH,QAASb,EAAQ,eAAiB,QAA3I,SACI,cAAC,KAAD,gBEdbiB,GAxBC,SAAC,GAA2C,IAA1CvK,EAAyC,EAAzCA,MAAOwK,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,cACpC,ED6DwB,SAAAzK,GAC1B,MAAwBjM,mBAAS,IAAjC,mBAAO2W,EAAP,KAAaC,EAAb,KACA,EAAoC5W,oBAAS,GAA7C,mBAAO6W,EAAP,KAAmBC,EAAnB,KAGMC,EAAU3C,mBAehB,OAdA/T,qBAAU,WASR,OARAyW,GAAc,GACdC,EAAQvC,QAAUzI,GAAWjB,YAAYmB,GAAO,SAAC7F,GAC/C,IACM4Q,EAASlI,GADA1I,GAEfwQ,EAAQI,GACRF,GAAc,MAGT,WACLG,aAAIF,EAAQvC,YAEb,CAACvI,IAEG,CAAC0K,OAAME,cCjFeK,CAAajL,GAAjC0K,EAAP,EAAOA,KAAME,EAAb,EAAaA,WAEb,OACI,sBAAKtV,UAAU,iCAAiCR,MAAO,CAACoW,WAAY,OAApE,UACKN,EAAa,cAACO,GAAA,EAAD,CAAQrW,MAAO,CAACM,QAAS,UAAa,MAClDwV,GAAcF,EAAOA,EAAK5J,KAAI,SAAA1F,GAC5B,IAAO1B,EAAkC0B,EAAlC1B,GAAIU,EAA8BgB,EAA9BhB,KAAMyO,EAAwBzN,EAAxByN,UAAW5I,EAAa7E,EAAb6E,UACxB,OACA,cAAC,GAAD,CACI2I,WAAY,kBAAI4B,EAAc9Q,IAC9BU,KAAMA,EACNyO,UAAWA,EACX5I,UAAWA,EAEX6I,WAAY2B,IAAgB/Q,GADvBA,MAIb,KACFkR,GAAeF,EAAKvL,OAA8H,KAArH,sBAAM7J,UAAU,UAAUR,MAAO,CAACM,QAAS,QAAS+U,QAAS,SAA7D,sDChB9BiB,GAAS,SAAC,GAAkJ,IAAjJpL,EAAgJ,EAAhJA,MAAgJ,IAAzI9B,aAAyI,MAAnI,WAAmI,EAAvHqE,EAAuH,EAAvHA,WAAYD,EAA2G,EAA3GA,UAAWD,EAAgG,EAAhGA,WAAYD,EAAoF,EAApFA,MAAOoI,EAA6E,EAA7EA,cAAevC,EAA8D,EAA9DA,cAAea,EAA+C,EAA/CA,WAAY2B,EAAmC,EAAnCA,cAAevC,EAAoB,EAApBA,eAChJ,EAAoCnU,oBAAS,GAA7C,mBAAOsX,EAAP,KAAmBC,EAAnB,KACApN,EAAiB,KAATA,EAAc,WAAaA,EAEnC,IAAM0L,EAAUd,EAAa,CAACe,WAAY,wBAA0B,KAE9DC,EAAc,WAAOwB,GAAc,SAAAnR,GAAC,OAAKA,MAEzCoR,EAAe,WACjBtD,IACIoD,GAAYC,GAAc,IAGlC,OACI,sBAAKhW,UAAU,wBAAf,UACI,qBAAKS,KAAK,SAASgU,SAAU,EAAGC,KAAK,SAASC,QAAQ,OAAOxN,QAASqN,EAAaI,UAAWJ,EAAaxU,UAAU,2BAA2BR,MAAK,2BAAM8U,GAAN,IAAgBzU,MAAO,SAA5K,SACI,cAACI,EAAA,EAAD,CAAMC,OAAK,EAAX,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC6E,EAAA,EAAD,CAAQ1F,MAAO,CAACqI,SAAU,QAASvC,WAAW,SAASD,KAAK,KAA5D,SACK0Q,EAAa,cAAC,KAAD,IAAmB,cAAC,KAAD,QAGzC,eAAC3V,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,cAAC,GAAD,CAAcgP,KAAMzG,EAApB,SACI,oBAAI5I,UAAU,yBAAd,SAAwC4I,MAE5C,cAAC,GAAD,CAAcyG,KAAMpC,EAApB,SACI,mBAAGjN,UAAU,yBAAb,SAAuCiN,SAG/C,cAAC7M,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC,GAAD,CAAcgP,KAAK,gBAAnB,SACI,mBAAGrP,UAAU,yBAAb,SAAuCgN,QAG/C,cAAC5M,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC,GAAD,CAAcgP,KAAI,sBAAiBtC,GAAnC,SACI,mBAAG/M,UAAU,yBAAb,SAAuC+M,QAG/C,cAAC3M,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC,GAAD,CAAcgP,KAAI,iBAAYvC,GAA9B,SACI,mBAAG9M,UAAU,yBAAb,SAAuC8M,QAG/C,cAAC1M,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC,GAAD,CACIsS,cAAe,kBAAIsD,KACnBrD,eAAgBA,aAMnCmD,EAAa,cAAC,GAAD,CAASZ,cAAeA,EAAeD,cAAe,SAAC9Q,GAAD,OAAM8Q,EAAc9Q,IAAKsG,MAAOA,IAAW,S,8BCxDrHwL,GAAmBhT,IAAOC,MAAM,CAClC2S,OAAQ5S,IAAOE,MAAM+S,aAAaC,IAAI,EAAG,4BAkF9BC,GA/EQ,WACnB,MAAsD5X,mBAAS,MAA/D,mBAAO6X,EAAP,KAA4BC,EAA5B,KACA,EAA0B9X,mBAAS,IAAnC,mBAAOqO,EAAP,KAAc0J,EAAd,KACA,EAAoC/X,mBAAS,IAA7C,mBAAOsO,EAAP,KAAmB0J,EAAnB,KACA,EAAkChY,mBAAS,GAA3C,mBAAOiY,EAAP,KAAkBC,EAAlB,KACA,EAAwBlY,oBAAS,GAAjC,mBAAO8H,EAAP,KAAaqQ,EAAb,KAMMC,EAAW,uCAAG,kCAAAnT,EAAA,yDACS,OAAtB4S,EADa,wDAEVQ,EAAYC,GAAcC,QAAQV,GAAqBzQ,KACtD+C,EAAgCkO,EAAhClO,MAAOqE,EAAyB6J,EAAzB7J,WAAYD,EAAa8J,EAAb9J,UAHV,kBAKNH,GAAS/I,OAAO8E,EAAOkE,EAAOC,EAAYC,EAAWC,GAL/C,OAHhBsJ,EAAuB,MAAOE,EAAc,IAAKD,EAAS,IAAKG,EAAa,GAUxEC,GAAQ,GACRlW,EAAMa,QAAN,qBAA4BqH,EAA5B,aARY,kDAUZlI,EAAM0B,MAAN,MAVY,0DAAH,qDAcjB,OACA,qCACI,cAAC8C,EAAA,EAAD,CAAQ0C,MAAM,OAAOtC,WAAW,UAAU6B,QAAS,kBAAKyP,GAAQ,IAAOpX,MAAO,CAACkN,aAAc,OAAQmI,QAAS,SAA9G,wBACA,eAACpO,EAAA,EAAD,CAAOpB,KAAK,KAAKsB,KAAMJ,EAAMC,QAAS,kBAAIoQ,GAAQ,IAAlD,UACI,cAACnQ,EAAA,EAAMG,OAAP,UAAc,cAACH,EAAA,EAAMI,MAAP,2BACd,cAACJ,EAAA,EAAMK,KAAP,UACI,eAACzC,EAAA,EAAD,CAAMnE,OAAK,EAAC+C,MAAOiT,GAAiB5R,SAAU,kBAAKuS,KAAnD,UACI,eAACxS,EAAA,EAAKG,MAAN,CAAYC,UAAU,SAASjF,MAAO,CAACkN,aAAc,QAArD,UACI,cAACrI,EAAA,EAAKK,aAAN,oBACI,cAACL,EAAA,EAAKM,QAAN,CACIzF,MAAOoX,EACP1R,SAAU,SAACZ,GACRuS,EAAuBvS,IAE1BqB,KAAK,KACL4R,YAAY,gBACZC,SAAUC,KACVtR,KAAMkR,GAAcC,QACpBlS,KAAK,cAGjB,eAACT,EAAA,EAAKG,MAAN,CAAYhF,MAAO,CAACkN,aAAc,QAAlC,UACI,cAACrI,EAAA,EAAKK,aAAN,CAAmBlF,MAAO,CAACqI,SAAU,QAArC,wBACA,cAACxD,EAAA,EAAKM,QAAN,CAAcG,KAAK,aAAa5F,MAAOwX,EAAW9R,SAAU,SAACZ,GAAD,OAAO2S,EAAa3S,IAAIqB,KAAK,KAAK7F,MAAO,CAACK,MAAO,QAASoX,YAAa,EAAGb,IAAK,EAAGgB,YAAU,EAACC,aAAc,EAAGH,SAAUI,UAExL,cAACrX,EAAA,EAAD,CAAMT,MAAO,CAACM,QAAS,GAAII,OAAK,EAAhC,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,eAACgE,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKK,aAAN,CAAmBlF,MAAO,CAACqI,SAAU,QAArC,wBACA,cAACxD,EAAA,EAAKM,QAAN,CAAcG,KAAK,aAAa5F,MAAO6N,EAAYnI,SAAU,SAACZ,GAAD,OAAOyS,EAAczS,IAAIqB,KAAK,KAAK6R,SAAUK,YAGlH,cAACnX,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,eAACgE,EAAA,EAAKG,MAAN,WACI,cAACH,EAAA,EAAKK,aAAN,CAAmBlF,MAAO,CAACqI,SAAU,QAArC,mBACA,cAACxD,EAAA,EAAKM,QAAN,CAAcG,KAAK,QAAQ5F,MAAO4N,EAAOlI,SAAU,SAACZ,GAAD,OAAOwS,EAASxS,IAAIqB,KAAK,KAAK6R,SAAUK,iBAK3G,cAAClT,EAAA,EAAKG,MAAN,UACI,eAACmH,GAAA,EAAD,CAAe3L,UAAU,OAAzB,UACI,cAACkF,EAAA,EAAD,CAAQzE,KAAK,SAAS6E,WAAW,UAAjC,+BACA,cAACJ,EAAA,EAAD,CAAQiC,QAAS,kBAAIyP,GAAQ,IAAQtR,WAAW,SAAhD,qCCEbkS,GAvDC,SAAC,GAAkE,IAAjE7E,EAAgE,EAAhEA,cAAeuC,EAAiD,EAAjDA,cAAeuC,EAAkC,EAAlCA,cAAetC,EAAmB,EAAnBA,cAC3D,EAAoC1W,mBAAS,IAA7C,mBAAOiZ,EAAP,KAAmBC,EAAnB,KAEMC,EJnBmB,SAAAC,GACzB,MAA8BpZ,oBAC5B,kBAAMqZ,OAAOC,WAAWF,GAAOG,WADjC,mBAAOA,EAAP,KAAgBC,EAAhB,KAcA,OAVAnZ,qBAAU,WACR,IAAMoZ,EAAYJ,OAAOC,WAAWF,GACpCI,EAAWC,EAAUF,SAErB,IAAMG,EAAW,SAAAC,GAAG,OAAIH,EAAWG,EAAIJ,UAGvC,OADAE,EAAU3O,YAAY4O,GACf,kBAAMD,EAAUG,eAAeF,MACrC,CAACN,IAEGG,EIIWM,CAAc,uBAChC,EJ2DsB,WACxB,MAA8B7Z,mBAAS,IAAvC,mBAAOuY,EAAP,KAAgBuB,EAAhB,KACA,EAAoC9Z,oBAAS,GAA7C,mBAAO6W,EAAP,KAAmBC,EAAnB,KAEMiD,EAAS3F,mBAef,OAdA/T,qBAAU,WAUR,OATAyW,GAAc,GAEdiD,EAAOvF,QAAUpG,GAAStD,aAAY,SAAC1E,GACrC,IACM4T,EAAalL,GADA1I,GAEnB0T,EAAWE,GACXlD,GAAc,MAGT,WACLG,aAAI8C,EAAOvF,YAEZ,IACI,CAAC+D,UAAS1B,cI9EeoD,GAAvB1B,EAAP,EAAOA,QAAS1B,EAAhB,EAAgBA,WAEVqD,EAlBgB,SAAC3B,EAASU,GAChC,MAAgB,KAAbA,EAAwBV,EAEXA,EAAQ4B,QAAO,SAAAC,GAC3B,IAAOjQ,EAASiQ,EAATjQ,MACP,QAAIA,GACGA,EAAMkQ,cAAcC,SAASrB,EAAWoB,kBAY5BE,CAAkBhC,EAASU,GAE5C9E,EAAc,uCAAG,WAAMxO,GAAN,SAAAV,EAAA,sEACbmJ,GAAS9D,OAAO3E,GADH,2CAAH,sDAIrB,OACK,sBAAKpE,UAAU,iBAAiBR,MAAO,GAAvC,UACI,cAAC,GAAD,IACA,eAACyZ,GAAA,EAAD,CAAYzZ,MAAO,CAACK,MAAO,OAAQG,UAAU,UAA7C,UACI,cAACuX,GAAA,EAAD,CAAOrY,MAAOwY,EAAY9S,SAAU,SAACZ,GAAD,OAAO2T,EAAc3T,IAAIiT,YAAY,SAAS5R,KAAK,OACvF,cAAC4T,GAAA,EAAW/T,OAAZ,CAAmBiC,QAAS,kBAAIwQ,EAAc,KAA9C,SACI,cAAC,KAAD,SAIR,sBAAK3X,UAAU,OAAf,UACI,gCAAK,iCAASgX,EAAQnN,SAAtB,yBACA,iCAAM,iCAAS8O,EAAc9O,SAA7B,4BAEJ,oBAAIrK,MAAO,CAAC2F,UAAW,MAAOuH,aAAc,SAC5C,sBAAK1M,UAAU,WAAWR,MAAO,CAAC2E,OAAQyT,EAAY,OAAS,QAA/D,UACCtC,EAAa,cAACO,GAAA,EAAD,IAAY,KAC1B,cAACqD,GAAA,EAAD,CAAMlF,OAAK,EAACmF,YAAU,EAAtB,SACKR,EAAcnN,KAAI,SAAAqN,GACf,IAAOjQ,EAA+DiQ,EAA/DjQ,MAAOoE,EAAwD6L,EAAxD7L,UAAWD,EAA6C8L,EAA7C9L,WAAYD,EAAiC+L,EAAjC/L,MAAOG,EAA0B4L,EAA1B5L,WAAY7I,EAAcyU,EAAdzU,GAAI2G,EAAU8N,EAAV9N,OAC5D,OAAO,cAAC,GAAD,CACHnC,MAAOA,EACPkE,MAAOA,EACPC,WAAYA,EACZC,UAAWA,EACXC,WAAYA,EACZlC,OAAQA,EAERL,MAAOtG,EACPoP,WAAYiE,IAAgBrT,EAC5B+Q,cAAeA,EACfxC,cAAe,kBAAIA,EAAcvO,IACjCwO,eAAgB,kBAAIA,EAAexO,IACnC8Q,cAAe,SAAC7K,GAAD,OAAS6K,EAAc9Q,EAAIiG,KANrCjG,QAUW,IAAvBuU,EAAc9O,QAAeyL,EAAuE,KAA1D,sBAAMtV,UAAU,UAAhB,2CCxErD0R,GAAS,CACXvN,OAAQ,SAYGiV,GATG,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,YAAa9Z,EAAW,EAAXA,MACrC+Z,EAA0B,SrBKNna,qBAAW2I,GqBJrC,OACI,sBAAKvI,MAAK,uCAAMkS,IAAWlS,GAAjB,IAAwBga,gBAAiBD,EAAS,UAAY,YAAxE,UACCF,EACAC,MCIMG,GAdU,SAAC,GAAD,IAAEja,EAAF,EAAEA,MAAF,OACjB,cAAC,GAAD,CACIA,MAAOA,EACP8Z,YACI,qBACItZ,UAAU,UACVR,MAAO,CAACka,WAAY,OAAQ7R,SAAU,MAAOrH,UAAW,UAF5D,sBAIa,qDAJb,cAIwD,4DCTlEmZ,GAAiBrb,0BAEVsb,GAAkB,SAAC,GAAgB,IAAfpb,EAAc,EAAdA,SAC7B,EAAoCC,oBAAS,GAA7C,mBAAO6W,EAAP,KAAmBC,EAAnB,KAEA,OAAO,cAACoE,GAAe1a,SAAhB,CAAyBC,MAAO,CAACoW,aAAYC,iBAA7C,SACF/W,KAIIqb,GAAa,kBAAMza,qBAAWua,KCL9BG,GAAb,kCAAaA,GACFvU,K,uCAAO,WAAO8E,GAAP,iBAAA3G,EAAA,kEAEF2G,EAFE,sBAEW,IAAI5E,MAAM,qBAFrB,cAIAC,EAAKC,YAAI1H,EAAD,gBAAoBoM,IAJ5B,SAMazE,YAAIF,GANjB,cAMAG,EANA,yBAQCA,EAAKC,OARN,kCAUNpF,EAAM0B,MAAM,KAAI6B,SAVV,0D,sDADL6V,GAeFzT,O,uCAAS,WAAOgE,EAAOxF,GAAd,eAAAnB,EAAA,kEAEJ2G,EAFI,sBAES,IAAI5E,MAAM,qBAFnB,cAIFC,EAAKC,YAAI1H,EAAD,gBAAoBoM,IAJ1B,SAMFvB,YAAIpD,EAAIb,GANN,uDASRnE,EAAM0B,MAAM,KAAI6B,SATR,yD,wDCjBb,ICFH3E,GDESya,GAAc,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,OAAO3P,EAAmB,EAAnBA,MAAM7D,EAAa,EAAbA,QACtC,EAAoC/H,oBAAS,GAA7C,mBAAOwb,EAAP,KAAmBC,EAAnB,KACA,EAAkCzb,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOS,EAAP,KAAcuU,EAAd,KAEO8B,EAAesE,KAAftE,cAEPzW,qBAAU,WACN,IAAMqb,EAAQ,uCAAG,4BAAAzW,EAAA,6DACb+P,EAAS,IADI,SAEGqG,GAAQvU,KAAK8E,GAFhB,OAEPxF,EAFO,OAGb4O,EAAS5O,GACThG,GAAa,GAJA,2CAAH,qDAOdsb,MACD,CAAC9P,IAEJ,IAAM+P,EAAY,uCAAG,WAAOvV,GAAP,SAAAnB,EAAA,6DACjB6R,GAAc,GADG,SAEXuE,GAAQzT,OAAOgE,EAAOxF,GAFX,OAGjB0Q,GAAc,GAHG,2CAAH,sDAOlB,OACI,eAAC5I,GAAA,EAAD,CAAQtH,KAAM4U,EAAa,KAAO,KAAMvT,UAAU,EAAOzE,UAAU,SAAS0E,KAAMqT,EAAQxT,QAASA,EAAnG,UACA,eAACmG,GAAA,EAAO/F,OAAR,WACA,cAAC+F,GAAA,EAAO9F,MAAR,oBACA,eAAC8F,GAAA,EAAO0N,QAAR,WACI,cAACnV,EAAA,EAAD,CAAQiC,QAAS,kBAAI+S,GAAc,SAAArV,GAAC,OAAGA,MAAvC,oBACA,cAACK,EAAA,EAAD,CAAQiC,QAASX,EAASlB,WAAW,UAArC,yBAKJ,cAACqH,GAAA,EAAO7F,KAAR,UACI,cAACyQ,GAAA,EAAD,CAAO+C,GAAG,WAAWpb,MAAOA,EAAOqb,SAAU3b,EAAWgG,SAAU,SAACC,GAAO4O,EAAS5O,GAAIuV,EAAavV,IAAKoK,KAAMgL,EAAa,GAAK,EAAGhD,YAAY,0C,oBEX7IuD,GA1BK,SAAC,GAA6C,IAAD,IAA3CC,qBAA2C,SAAtB1Y,EAAsB,EAAtBA,OAAQvD,EAAc,EAAdA,SAC/C,EAAoCC,mBAASgc,GAA7C,mBAAO1E,EAAP,KAAmBC,EAAnB,KAEMxB,EAAc,WAAOwB,GAAc,SAAAnR,GAAC,OAAGA,MAG7C,OACI,sBAAK7E,UAAU,mFAAf,UACO,sBAAKS,KAAK,SAASgU,SAAU,EAAGC,KAAK,SAASC,QAAQ,OAAOC,UAAWJ,EAAarN,QAASqN,EAAaxU,UAAU,kBAAkBR,MAAO,CAACkb,cAAe,MAAOhB,WAAY,OAAjL,UACS,cAAC,KAAD,CAAeiB,KAAM5E,EAAa,WAAa,KAAM/V,UAAU,UAAUR,MAAO,CAACwV,IAAK,UACtF,cAAC,GAAD,CAAc3F,KAAMtN,EAApB,SACI,oBAAIvC,MAAO,CAACK,MAAO,OAAQG,UAAU,gCAArC,SAAsE+B,SAI7EgU,EACG,qBAAK/V,UAAU,gDAAgDR,MAAO,CAAC2E,OAAQ,QAA/E,SACI,qBAAKnE,UAAU,gBAAf,SACKxB,MAGX,SCvBToc,GAAa,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,eACtC,OACI,cAAC7a,EAAA,EAAD,CAAMC,OAAK,EAAX,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,qBAAKb,MAAO,CAACgB,UAAW,OAAQqH,SAAU,OAAQ1C,UAAW,OAAQnF,UAAU,UAA/E,SACK6a,MAGT,cAACza,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,qBAAKb,MAAO,CAACgB,UAAW,SAAxB,SACKsa,Y,oBCTnBlJ,GAAiBC,IAAMC,YAAW,WAA4BnM,GAA5B,IAAGoM,EAAH,EAAGA,aAAiBC,EAApB,0BACpC,cAACC,GAAA,EAAD,yBAAStM,IAAKA,GAASqM,GAAvB,IAA6BE,MAAI,EAAjC,SACE,eAACC,GAAA,EAASC,KAAV,CAAeC,SAAU,SAACC,EAAGtO,GAAK+N,EAAaO,GAAItO,EAAEuO,mBAArD,UACE,cAACJ,GAAA,EAASK,KAAV,CAAeC,UAAW,EAAGzS,UAAU,UAAvC,mBACA,cAACmS,GAAA,EAASK,KAAV,CAAeC,SAAU,EAAzB,6BAOKsI,GAAkB,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAClCtV,EAAMkN,mBAUZ,OACE,cAACC,GAAA,EAAD,CACI7Q,UAAU,aACVwC,UAAU,2BACVsO,QAAQ,QACRpN,IAAKA,EACLwB,QAAS,SAACnD,GAAD,OAAKA,EAAEuO,mBAChBS,QAAS,cAAC,GAAD,CAAgBjB,aAAc,SAAA/N,GAAC,OAfrC,KADYsO,EAgBwCtO,GAdvDgX,IACS,IAAJ1I,GACL2I,SAGJtV,EAAIsN,QAAQC,QAPO,IAAAZ,KAUnB,SAQE,cAACpN,EAAA,EAAD,CAAQI,WAAW,SAASD,KAAK,KAAjC,SAAsC,cAAC,KAAD,S,UCpB7B6V,GAbK,SAAC,GAAmD,IAAlDhc,EAAiD,EAAjDA,MAAO0F,EAA0C,EAA1CA,SAA0C,IAAhCS,YAAgC,MAA3B,KAA2B,EAArB7F,EAAqB,EAArBA,MAAO+a,EAAc,EAAdA,SAC/CvK,EAAQ5O,OAAOgM,MAAMC,KAAK8N,MAAMjc,IAAU,IAAImO,KAAS,IAAIA,KAAKnO,GAOtE,OACI,cAACkc,GAAA,EAAD,CAAYC,WAAW,EAAOhW,KAAMA,EAAMT,SANzB,SAAAkB,GAClB,IAAM3E,EAAI,IAAIkM,KAAKvH,GAClBlB,EAASzD,EAAEmM,iBAIuD9N,MAAK,2BAAMA,GAAN,IAAaqV,QAAS,UAAU0F,SAAUA,EAAUrb,MAAO8Q,KCRpInQ,GAAQ,CACVQ,GAAI,OACJib,GAAI,OACJC,GAAI,QACJjb,GAAI,QAeOkb,GAPO,SAAC,GAA0D,IALhEC,EAKOvc,EAAwD,EAAxDA,MAAO0F,EAAiD,EAAjDA,SAAiD,IAAvCS,YAAuC,MAAlC,KAAkC,EAA5B7F,EAA4B,EAA5BA,MAAO+a,EAAqB,EAArBA,SAAqB,IAAXnE,WAAW,MAAP,EAAO,EACtEvW,EALFA,GADS4b,EAMUpW,GAJhBxF,GAAM4b,GADU5b,GAAM0b,GAM7B,OACI,cAACjE,GAAA,EAAD,CAAalB,IAAKA,EAAKmE,SAAUA,EAAUrb,MAAOA,EAAO0F,SAAUA,EAAUS,KAAMA,EAAM7F,MAAK,aAAGK,SAAUL,MCZ7Gkc,GAAS,CACXC,KAAMpE,KACNnW,OAAQoa,GACRnO,KAAM6N,IAuCKU,GA/BG,SAAC,GAAuC,IALzCH,EAKG7S,EAAqC,EAArCA,MAAOiT,EAA8B,EAA9BA,OAA8B,IAAtBC,UACzBC,EALFL,GADSD,OAKwC,MAAZ,OAAY,GAH9CC,GAAOD,GADUC,GAAOC,KAM/B,EAA0Bld,mBAAS,IAAnC,mBAAOS,EAAP,KAAcuU,EAAd,KACA,EAAgChV,oBAAS,GAAzC,mBAAO8b,EAAP,KAAiByB,EAAjB,KACOzG,EAAiBsE,KAAjBtE,cAEPzW,qBAAU,WACN,IAAMmd,EAAU,uCAAG,4BAAAvY,EAAA,6DACfsY,GAAY,GADG,SAEIhT,GAAeL,aAAakT,EAAQjT,GAFxC,QAET/C,EAFS,SAGN4N,EAAS5N,EAAK3G,OAAS,IAChC8c,GAAY,GAJG,2CAAH,qDAMhBC,MACD,CAACJ,EAAQjT,IAEZ,IAAM6C,EAAY,uCAAG,WAAM3F,GAAN,SAAApC,EAAA,6DACjB+P,EAAS3N,GACTyP,GAAc,GAFG,SAGXvM,GAAe3C,OAAOwV,EAAQjT,EAAO9C,GAH1B,OAIjByP,GAAc,GAJG,2CAAH,sDAOlB,OACI,gCACI,uBAAO/V,MAAO,CAACqI,SAAU,QAASqU,QAAStT,EAA3C,SAAmDA,IACnD,cAACmT,EAAD,CAAS1W,KAAK,KAAKkV,SAAUA,EAAU3V,SAAU,SAACC,GAAD,OAAK4G,EAAa5G,IAAI3F,MAAOA,QCrCpFwc,GAAS,CACXC,KAAMpE,KACNnW,OAAQoa,GACRnO,KAAM6N,IAuCKiB,GA/BG,SAAC,GAAuC,IALzCV,EAKG7S,EAAqC,EAArCA,MAAOiT,EAA8B,EAA9BA,OAA8B,IAAtBC,UACzBC,EALFL,GADSD,OAKwC,MAAZ,OAAY,GAH9CC,GAAOD,GADUC,GAAOC,KAM/B,EAA0Bld,mBAAS,IAAnC,mBAAOS,EAAP,KAAcuU,EAAd,KACA,EAAgChV,oBAAS,GAAzC,mBAAO8b,EAAP,KAAiByB,EAAjB,KACOzG,EAAiBsE,KAAjBtE,cAEPzW,qBAAU,WACN,IAAMmd,EAAU,uCAAG,4BAAAvY,EAAA,6DACfsY,GAAY,GADG,SAEI7S,GAAeR,aAAakT,EAAQjT,GAFxC,QAET/C,EAFS,SAGN4N,EAAS5N,EAAK3G,OAAS,IAChC8c,GAAY,GAJG,2CAAH,qDAMhBC,MACD,CAACJ,EAAQjT,IAEZ,IAAM6C,EAAY,uCAAG,WAAM3F,GAAN,SAAApC,EAAA,6DACjB+P,EAAS3N,GACTyP,GAAc,GAFG,SAGXpM,GAAe9C,OAAOwV,EAAQjT,EAAO9C,GAH1B,OAIjByP,GAAc,GAJG,2CAAH,sDAOlB,OACI,gCACI,uBAAO/V,MAAO,CAACqI,SAAU,QAASqU,QAAStT,EAA3C,SAAmDA,IACnD,cAACmT,EAAD,CAAS1W,KAAK,KAAKkV,SAAUA,EAAU3V,SAAU,SAACC,GAAD,OAAK4G,EAAa5G,IAAI3F,MAAOA,QCuC3Ekd,GAtEE,SAAC,GAA2C,IAA1CnW,EAAyC,EAAzCA,UAAW6O,EAA8B,EAA9BA,OAAQ+G,EAAsB,EAAtBA,OAAQQ,EAAc,EAAdA,SACnC9G,EAAiBsE,KAAjBtE,cA4BD+G,EA1BExH,GAAWA,EAAOyH,SAEH7S,OAAOC,KAAKmL,EAAOyH,UACpB/Q,KAAI,SAAC5C,EAAOgB,GAC1B,OACI,cAACxJ,EAAA,EAAD,CAAamb,GAAI,GAAIjb,GAAI,GAAzB,SACI,cAAC,GAAD,CAAWsI,MAAOA,EAAeiT,OAAQA,EAAQC,UAAWhH,EAAOyH,SAAS3T,GAAO4T,OAArD5S,IADxBA,MALqB,KA2BrC6S,EAdE3H,GAAWA,EAAO4H,SAEHhT,OAAOC,KAAKmL,EAAO4H,UACpBlR,KAAI,SAAC5C,EAAOgB,GAC1B,OACI,cAACxJ,EAAA,EAAD,CAAamb,GAAI,GAAIjb,GAAI,GAAzB,SACI,cAAC,GAAD,CAAWsI,MAAOA,EAAeiT,OAAQA,EAAQC,UAAWhH,EAAO4H,SAAS9T,GAAO4T,OAArD5S,IADxBA,MALqB,KAiBrC+S,EAAY,uCAAG,sBAAAjZ,EAAA,sEAEb6R,GAAc,GAFD,SAGPnM,GAAgBU,eAAeuS,EAAUR,GAHlC,OAIbnb,EAAMa,QAAN,uCAJa,gDAMbb,EAAM0B,MAAN,MANa,QAQjBmT,GAAc,GARG,yDAAH,qDAWZxG,ElByI6B,SAAChF,GACtC,MAAoBtL,mBAAS,IAA7B,mBAAOme,EAAP,KAAWC,EAAX,KAQA,OANA/d,qBAAU,WACRkK,GAAeC,gBAAgBc,EAAY,iBAAiB,SAAC5I,GAC3D0b,EAAM1b,QAEP,CAAC4I,IAEG6S,EkBlJSE,CAAwBjB,GAEtC,OACI,eAAC,GAAD,CAAapB,eAAe,EAAO1Y,OAAM,cAASgN,EAAQA,EAAM7P,MAAQ,WAAxE,UACI,cAAC,GAAD,CACI2b,aAAc,+BAAO1N,GAASlH,KAC9B6U,eACI,cAAC,GAAD,CAAiBG,SAAU0B,MAI/B,eAAC1c,EAAA,EAAD,CAAMC,OAAK,EAAX,UACI,eAACC,EAAA,EAAD,WACKmc,EAAa,oBAAItc,UAAU,OAAOR,MAAO,CAACqI,SAAU,OAAQkV,aAAc,YAAaC,WAAY,OAAtF,sBAA8G,KAC3HV,KAEL,eAACnc,EAAA,EAAD,WACKsc,EAAa,oBAAIzc,UAAU,YAAYR,MAAO,CAACqI,SAAU,OAAQkV,aAAc,YAAaC,WAAY,OAA3F,sBAAmH,KAChIP,YCnDVQ,GArBS,SAAC,GAAqC,IAApC1W,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,QAASyU,EAAoB,EAApBA,SAAUnW,EAAU,EAAVA,KAC/C,OACI,cAAC2B,EAAA,EAAD,CAAOE,KAAMJ,EAAMC,QAASA,EAA5B,SACI,eAACC,EAAA,EAAMG,OAAP,WACI,cAACH,EAAA,EAAMI,MAAP,6BAGA,cAACJ,EAAA,EAAMK,KAAP,UACI,qEACwC,iCAAShC,IADjD,mBAIJ,eAAC2B,EAAA,EAAMhH,OAAP,WACI,cAACyF,EAAA,EAAD,CAAQ0C,MAAM,MAAMtC,WAAW,UAAU6B,QAAS8T,EAAlD,iBACA,cAAC/V,EAAA,EAAD,CAAQI,WAAW,SAAS6B,QAASX,EAArC,yBC2DL0W,GA/DF,SAAC,GAAiD,IAAhDpY,EAA+C,EAA/CA,KAAMmB,EAAyC,EAAzCA,UAAWqD,EAA8B,EAA9BA,OAAQW,EAAsB,EAAtBA,SAAU6K,EAAY,EAAZA,OAC9C,EAAwBrW,oBAAS,GAAjC,mBAAO8H,EAAP,KAAaqQ,EAAb,KACA,EpBgJwB,SAAAtN,GAC1B,MAAkC7K,mBAAS,IAA3C,mBAAOmQ,EAAP,KAAkBuO,EAAlB,KACA,EAAoC1e,oBAAS,GAA7C,mBAAO6W,EAAP,KAAmBC,EAAnB,KAmBA,OAjBAzW,qBAAU,WACRyW,GAAc,GACdnM,GAAgBG,YAAYD,GAAQ,SAACzE,GACnC,IACMuY,EAAM7P,GADA1I,GAEZsY,EAAaC,GACb7H,GAAc,QAGf,CAACjM,IAQG,CAACsF,YAAW0G,coBrKe+H,CAAa/T,GAAtCsF,EAAP,EAAOA,UAAW0G,EAAlB,EAAkBA,WACXC,EAAiBsE,KAAjBtE,cAYD+H,EAAW,uCAAG,sBAAA5Z,EAAA,6DAChB6R,GAAc,GADE,kBAGNnM,GAAgBtF,OAAOwF,GAHjB,OAIZ5I,EAAMa,QAAQ,2CAJF,gDAMZb,EAAM0B,MAAN,MANY,QAQhBmT,GAAc,GARE,yDAAH,qDAYXoH,EAAY,uCAAG,sBAAAjZ,EAAA,6DACjB6R,GAAc,GADG,kBAGPvL,GAAYF,eAAeG,EAAUX,GAH9B,OAIb5I,EAAMa,QAAN,+BAAsCuD,IAJzB,gDAMbpE,EAAM0B,MAAN,MANa,QAQjBmT,GAAc,GARG,yDAAH,qDAYlB,OACI,eAAC,GAAD,CAAakF,eAAa,EAAC1Y,OAAQ+C,EAAnC,UACI,cAAC,GAAD,CACI+V,aACI,gCACI,gCAAMjM,EAAYA,EAAU/E,OAAS,EAArC,YACA,+BAAOsD,GAASlH,QAGxB6U,eACI,gCACI,cAAC5V,EAAA,EAAD,CAAQ1F,MAAO,CAACkN,aAAc,OAASrH,KAAK,KAAKuC,MAAM,OAAOtC,WAAW,QAAQ6B,QAASmW,EAA1F,iBACA,cAACpY,EAAA,EAAD,CAASG,KAAK,KAAKuC,MAAM,MAAMtC,WAAW,QAAQ6B,QAAS,kBAAIyP,GAAQ,IAAvE,wBACA,cAAC,GAAD,CAAiBrQ,KAAMA,EAAMC,QAAS,kBAAIoQ,GAAQ,IAAQqE,SAAU0B,EAAc7X,KAAMA,SAKpG,oBAAItF,MAAO,CAAC2F,UAAW,SAnDxBmQ,EAAmB,cAACO,GAAA,EAAD,IAClBjH,EAAU/E,OAEP+E,EAAUpD,KAAI,SAAC3G,EAAG+E,GACrB,IAAOxF,EAAiBS,EAAjBT,GAAI6B,EAAapB,EAAboB,UACX,OAAO,cAAC,GAAD,CAAUA,UAAWA,EAAWoW,SAAU/S,EAAQuS,OAAQzX,EAAaU,KAAM8E,EAAE,EAAGkL,OAAQA,GAAvB1Q,MAJjD,oBCmBtBmZ,GA/BI,SAAC,GAAiC,IAAhCzY,EAA+B,EAA/BA,KAAMV,EAAyB,EAAzBA,GAAI6F,EAAqB,EAArBA,SAAUzK,EAAW,EAAXA,MACrC,EAAkCf,oBAAS,GAA3C,mBAAO4I,EAAP,KAAkBC,EAAlB,KACOiO,EAAiBsE,KAAjBtE,cAEDoH,EAAY,uCAAG,sBAAAjZ,EAAA,6DACjB6R,GAAc,GACdjO,GAAa,GAFI,kBAIP0C,GAAYF,eAAeG,EAAU7F,GAJ9B,OAKb1D,EAAMa,QAAN,+BAAsCuD,IALzB,gDAObpE,EAAM0B,MAAN,MAPa,QASjBmT,GAAc,GATG,yDAAH,qDAYjB,OACG,qCAEI,cAACrQ,EAAA,EAAD,CAAQ1F,MAAOA,EAAOoI,MAAM,QAAQtC,WAAW,UAAUD,KAAK,KAAK8B,QAAS,kBAAIG,GAAa,IAA7F,SACI,cAAC,GAAD,CAAc+H,KAAMvK,EAApB,SACI,uBAAM9E,UAAU,iBAAhB,eACO8E,SAIf,cAAC,GAAD,CAAiByB,KAAMc,EAAWvC,KAAMA,EAAMV,GAAIA,EAAIoC,QAAS,kBAAIc,GAAa,IAAQ2T,SAAU0B,QCgC/Fa,GA1DS,SAAC,GAA6C,IAA5CvT,EAA2C,EAA3CA,SAAUwT,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cACtCnI,EAAiBsE,KAAjBtE,cAEDoI,EAAY,uCAAG,WAAM7Y,GAAN,SAAApB,EAAA,6DACjB6R,GAAc,GADG,kBAGPvL,GAAYlG,OAAOmG,EAAUnF,GAHtB,OAIbpE,EAAMa,QAAN,cAAqBuD,EAArB,uBAJa,gDAMbpE,EAAM0B,MAAN,MANa,QAQjBmT,GAAc,GARG,yDAAH,sDAuClB,OACI,8BACI,eAACtV,EAAA,EAAD,CAAMC,OAAK,EAAX,UACI,eAACC,EAAA,EAAD,WACI,oBAAIX,MAAO,CAACqI,SAAU,QAAtB,oBA/BJ4V,EAAYjS,KAAI,SAAA3G,GACpB,IAAOC,EAAWD,EAAXC,KAAMV,EAAKS,EAALT,GACb,OACI,cAAChE,EAAA,EAAD,CAAKC,GAAI,GAAIkb,GAAI,EAAGjb,GAAI,EAAxB,SACI,cAAC,GAAD,CAAYd,MAAO,CAACkN,aAAc,OAAiBzC,SAAUA,EAAU7F,GAAIA,EAAIU,KAAMA,GAAtCV,IADnBA,SA+BhC,eAACjE,EAAA,EAAD,WACI,oBAAIX,MAAO,CAACqI,SAAU,QAAtB,sBAzBL6V,EAAclS,KAAI,SAAA1G,GAErB,OAAG2Y,EAAYG,MAAK,SAAAC,GAAE,OAAIA,EAAG/Y,OAAOA,KAAc,KAG9C,cAAC1E,EAAA,EAAD,CAAgBC,GAAI,GAAIkb,GAAI,EAAGjb,GAAI,EAAnC,SACI,cAAC4E,EAAA,EAAD,CAAQG,KAAK,KAAKrF,UAAU,YAAYR,MAAO,CAACkN,aAAc,OAAQvF,QAAS,kBAAIwW,EAAa7Y,IAAhG,SACA,cAAC,GAAD,CAAcuK,KAAMvK,EAApB,SACI,uBAAM9E,UAAU,iBAAhB,eACO8E,UAJLA,e,UCMXgZ,GArCU,SAAC,GAAyB,IAAxB7T,EAAuB,EAAvBA,SAAU8T,EAAa,EAAbA,QACjC,EvB8HyB,SAAA9T,GAC3B,MAA0BxL,mBAAS,IAAnC,mBAAO0Q,EAAP,KAAc6O,EAAd,KACA,EAAoCvf,oBAAS,GAA7C,mBAAO6W,EAAP,KAAmBC,EAAnB,KAmBA,OAjBAzW,qBAAU,WACRyW,GAAc,GACdvL,GAAYT,YAAYU,GAAU,SAACpF,GACjC,IACMoZ,EAAU1Q,GADA1I,GAEhBmZ,EAASC,GACT1I,GAAc,QAGf,CAACtL,IAQG,CAACkF,QAAOmG,cuBnJe4I,CAAcjU,GAAnCkF,EAAP,EAAOA,MAAOmG,EAAd,EAAcA,WACRoI,EAAgBS,GAAWJ,GAEjC,OAAIL,EAEDpI,EAAmB,cAACO,GAAA,EAAD,IAGlB,sBAAKrW,MAAO,CAACM,QAAS,YAAtB,UACI,cAAC,GAAD,CAAiB2d,YAAatO,EAAOlF,SAAUA,EAAUyT,cAAehU,OAAOC,KAAK+T,KACpF,uBACA,qBAAKle,MAAO,CAAC2E,OAAQ,QAASI,UAAW,UAAzC,SACI,cAACtE,EAAA,EAAD,CAAMC,OAAK,EAAX,SACI,cAACC,EAAA,EAAD,UACKgP,EAAM3D,KAAI,SAAA3G,GACP,IAAOC,EAAuBD,EAAvBC,KAAMmB,EAAiBpB,EAAjBoB,UAAW7B,EAAMS,EAANT,GACxB,OACI,cAAChE,EAAA,EAAD,CAAKC,GAAI,GAAIkb,GAAI,GAAIjb,GAAI,EAAzB,SACI,cAAC,GAAD,CACIwE,KAAMA,EACNmB,UAAWA,EAEXqD,OAAQlF,EACR0Q,OAAQ4I,EAAc5Y,GACtBmF,SAAUA,GAHL7F,IAJoBA,eAdnC,4CCsEfga,GAzEM,SAAC,GAA4B,IAAD,IAA1BC,kBAA0B,MAAf,GAAe,EAAXhU,EAAW,EAAXA,MAC3BkL,EAAiBsE,KAAjBtE,cACP,EAAwB9W,mBAAS,MAAjC,mBAAO6f,EAAP,KAAaC,EAAb,KAEAzf,qBAAU,WACHuf,EAAWxU,OAAO,EACjB0U,EAAQ,GAERA,EAAQ,QAEb,CAAClU,EAAOgU,EAAWxU,SAEtB,IAAM8S,EAAY,uCAAG,WAAOvY,EAAIU,GAAX,SAAApB,EAAA,6DACjB6R,GAAc,GADG,kBAGPnL,GAAYN,eAAeO,EAAOjG,GAH3B,OAOTma,EADDD,EAAK,GAAI,EACA,SAAA1U,GAAC,OAAEA,EAAE,GAEL,MAIZlJ,EAAMa,QAAN,4BAAmCuD,IAbtB,gDAebpE,EAAM0B,MAAN,MAfa,QAiBjBmT,GAAc,GAjBG,yDAAH,wDA6ClB,OACI,gCACI,cAAC/I,GAAA,EAAD,CAAKlH,WAAW,OAAhB,SA1BJ+Y,EAAW7S,KAAI,SAACkE,EAAQ9F,GACpB,IAAO9E,EAAY4K,EAAZ5K,KAAMV,EAAMsL,EAANtL,GACPoa,EAAW5U,IAAI0U,EACfG,EAAWD,EAAW,MAAQ,KACpC,OACI,eAAChS,GAAA,EAAIgG,KAAL,CACIrL,QAAS,kBAAIoX,EAAQ3U,IAErB8U,OAAQF,EAHZ,UAKK1Z,EACD,wBACItF,MAAO,CAACmf,WAAY,cAAe/W,MAAO6W,EAAU5W,SAAU,OAAQlI,SAAU,WAAYqV,IAAI,OAAQD,KAAM,OAC9GtU,KAAK,SACL0G,QAAS,SAACnD,GAAOA,EAAEuO,kBAAmBoK,EAAavY,EAAIU,IACvDyV,UAAWiE,EAJf,SAMI,cAAC,KAAD,QAVCpa,QAsBL,OAAPka,GAAeD,EAAWxU,OAAO,GAAKwU,EAAWC,GAC9C,cAAC,GAAD,CAAkBrU,SAAUoU,EAAWC,GAAMla,GAAI2Z,QAASM,EAAWC,GAAMxZ,OAE3E,qBAAK9E,UAAU,wBAAf,sDCnEV4e,GACO,UADPA,GAEG,MAFHA,GAGK,QA8BIC,GA1BI,SAAC,GAAyB,IAAxBR,EAAuB,EAAvBA,WAAYhU,EAAW,EAAXA,MACtBkL,EAAiBsE,KAAjBtE,cAEDuJ,EAAS,uCAAG,WAAMha,GAAN,SAAApB,EAAA,6DACd6R,GAAc,GADA,kBAGJnL,GAAYtG,OAAOuG,EAAOvF,GAHtB,OAIVpE,EAAMa,QAAN,gCAAuCuD,IAJ7B,gDAMVpE,EAAM0B,MAAN,MANU,QAQdmT,GAAc,GARA,yDAAH,sDAWTwJ,EAASV,EAAWT,MAAK,SAAA/Y,GAAC,OAAIA,EAAEC,OAAO8Z,MACvCI,EAAWX,EAAWT,MAAK,SAAA/Y,GAAC,OAAIA,EAAEC,OAAO8Z,MACzCK,EAAaZ,EAAWT,MAAK,SAAA/Y,GAAC,OAAIA,EAAEC,OAAO8Z,MACjD,OACG,sBAAKpf,MAAO,CAAC2F,UAAW,QAAxB,UACM8Z,EAAa,KAAO,cAAC/Z,EAAA,EAAD,CAAQiC,QAAS,kBAAI2X,EAAUF,KAAmBtZ,WAAW,QAAQD,KAAK,KAAK7F,MAAO,CAACqV,QAAS,QAASnI,aAAc,OAAvH,uBACpBqS,EAAS,KAAO,cAAC7Z,EAAA,EAAD,CAAQiC,QAAS,kBAAI2X,EAAUF,KAAetZ,WAAW,QAAQD,KAAK,KAAK7F,MAAO,CAACqV,QAAS,QAASnI,aAAc,OAAnH,mBAChBsS,EAAW,KAAO,cAAC9Z,EAAA,EAAD,CAAQiC,QAAS,kBAAI2X,EAAUF,KAAiBtZ,WAAW,QAAQD,KAAK,KAAxE,yBC3BlB6Z,GAAW,SAAC,GAAoB,IAAnBxU,EAAkB,EAAlBA,MAAOL,EAAW,EAAXA,MACtBkL,EAAiBsE,KAAjBtE,cACP,EAAoC9W,oBAAS,GAA7C,mBAAO0gB,EAAP,KAAmBC,EAAnB,KACA,EAAwB3gB,mBAAS,IAAjC,mBAAOqG,EAAP,KAAaua,EAAb,KACA,EAA4B5gB,mBAAS,GAArC,mBAAO6gB,EAAP,KAAeC,EAAf,KAGAzgB,qBAAU,WACN,IAAM0gB,EAAO,uCAAG,gCAAA9b,EAAA,6DACZ0b,GAAc,GADF,kBAGyB5U,GAAW7B,aAAa+B,EAAOL,GAHxD,gBAGDvF,EAHC,EAGDA,KAAM6F,EAHL,EAGKA,UACb0U,EAAQva,GAAQ,IAChBya,EAAU5U,GAAa,GALf,kDAORjK,EAAM0B,MAAM,KAAI6B,SAPR,QASZmb,GAAc,GATF,0DAAH,qDAYbI,MAED,CAACnV,EAAOK,IAEX,IAAM0P,EAAY,uCAAG,WAAO/R,EAAKvC,GAAZ,SAAApC,EAAA,6DACjB6R,GAAc,GADG,kBAGP/K,GAAWK,YAAYH,EAAOL,EAAOhC,EAAKvC,GAHnC,sDAKbpF,EAAM0B,MAAN,MALa,OAOjBmT,GAAc,GAPG,yDAAH,wDAWlB,OACI,qCACI,8BACI,cAACgC,GAAA,EAAD,CAAOrY,MAAO4F,EAAMyV,SAAU4E,EAAY9Z,KAAK,KAAKT,SAAU,SAACC,GAAOuV,EAAa,OAAQvV,GAAIwa,EAAQxa,IAAKrF,MAAO,CAACgB,UAAW,SAAUqH,SAAU,QAASoP,YAAY,oBAE5K,gCACI,uBAAOzX,MAAO,CAACqI,SAAU,QAASqU,QAAQ,MAA1C,yBACA,cAAC,GAAD,CAAehd,MAAOogB,EAAQ/E,SAAU4E,EAAYva,SAAU,SAACC,GAAOuV,EAAa,YAAavV,GAAI0a,EAAU1a,IAAKQ,KAAK,chBxBzHoa,GArBQ,SAAC,GAAmC,IAAlCnK,EAAiC,EAAjCA,WAAiC,IAArBoK,kBAAqB,MAAV,IAAU,EACtD,EAAkDjhB,oBAAS,GAA3D,mBAAOkhB,EAAP,KAA0BC,EAA1B,KAaA,OAZA9gB,qBAAU,WACN+gB,aAAavgB,IACTgW,IACAsK,GAAqB,GACrBtgB,GAAKwgB,YAAW,WACZF,GAAqB,KACtBF,MAER,CAACpK,EAAYoK,IAKZ,mCACCC,EAAoB,cAAC,KAAD,CAAYI,OAAK,IAAK,cAAC,KAAD,CAAYvgB,MAAO,CAACoI,MAAO,mBiBK/DoY,GAhBC,WACZ,IAAO1K,EAAcuE,KAAdvE,WACP,OACI,gCACI,cAAC3J,GAAA,EAAD,CAAenM,MAAO,CAACqV,QAAS,UAAhC,SACI,eAACjJ,GAAA,EAAD,WACI,cAAC1G,EAAA,EAAD,CAAQG,KAAK,KAAKC,WAAW,SAA7B,SAAsC,cAAC,KAAD,CAAiBwG,KAAMmU,SAC7D,cAAC/a,EAAA,EAAD,CAAQG,KAAK,KAAKC,WAAW,SAA7B,SAAsC,cAAC,KAAD,CAAiBwG,KAAMoU,cAGrE,sBAAM1gB,MAAO,CAACkI,YAAa,MAAOkO,WAAY,MAAOuK,YAAa,qBAClE,cAAC,GAAD,CAAgB7K,WAAYA,QCsCzB8K,GA3CM,SAAC,GAA2B,IAA1B1V,EAAyB,EAAzBA,MAAOL,EAAkB,EAAlBA,MAAO7K,EAAW,EAAXA,MAC3B6e,E5BgGmB,SAAAhU,GAC3B,MAA4B5L,mBAAS,IAArC,mBAAOiR,EAAP,KAAe2Q,EAAf,KAkBA,OAhBAvhB,qBAAU,WACRsL,GAAYb,YAAYc,GAAO,SAACxF,GAC9B,IACMoZ,EAAU1Q,GADD1I,GAEfoZ,EAAQqC,MAAK,SAAC5c,EAAE6c,GAAH,OAAU7c,EAAEoB,KAAKyb,EAAEzb,MAAS,EAAK,KAC9Cub,EAAUpC,QAGX,CAAC5T,IAQGqF,E4BnHc8Q,CAAcnW,GAEjC,E5BsKoB,WACtB,MAA4B5L,oBAAS,GAArC,mBAAOub,EAAP,KAAeyG,EAAf,KAKA,MAAO,CAACzG,SAAQ0G,OAHDC,uBAAY,kBAAMF,GAAU,KAAO,IAG1Bja,QAFRma,uBAAY,kBAAMF,GAAU,KAAQ,K4B1KhBG,GAA3B5G,EAAP,EAAOA,OAAQ0G,EAAf,EAAeA,OAAQla,EAAvB,EAAuBA,QAEvB,OACI,cAAC,GAAD,CACIhH,MAAOA,EACP6Z,aACI,mCACI,eAAC,GAAD,WACI,qBAAKrZ,UAAU,iBAAf,SACI,cAACC,EAAA,EAAD,CAAMC,OAAK,EAAX,SACI,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,cAAC6E,EAAA,EAAD,CAAQ1F,MAAO,CAACkI,YAAa,QAASP,QAAS,kBAAI0I,GAAiBnF,EAAOL,IAAQzC,MAAM,QAAQtC,WAAW,UAA5G,2BACA,cAACJ,EAAA,EAAD,CAAQI,WAAW,SAAS6B,QAASuZ,EAArC,mBACA,cAAC,GAAD,CAAYrC,WAAYA,EAAYhU,MAAOA,OAE/C,cAACjK,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC,GAAD,CAAUgK,MAAOA,EAAOK,MAAOA,MAEnC,cAACtK,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,qBAAKb,MAAO,CAACmI,MAAO,SAApB,SACI,cAAC,GAAD,eAMpB,cAAC,GAAD,CAAc0W,WAAYA,EAAYhU,MAAOA,IAC7C,cAAC,GAAD,CACI2P,OAAQA,EACRxT,QAASA,EACT6D,MAAOA,YCtCpB,SAASwW,KACpB,MAA0BpiB,mBAAS,QAAnC,mBAAOwJ,EAAP,KAAciE,EAAd,KACA,EAA0BzN,mBAAS,MAAnC,mBAAO4L,EAAP,KAAcyW,EAAd,KACA,EAA0BriB,mBAAS,MAAnC,mBAAOiM,EAAP,KAAcqW,EAAd,KAEMpO,EAAa,uCAAG,WAAOjI,GAAP,eAAAhH,EAAA,sEACA8G,GAAW1G,OAAO4G,GADlB,OACdL,EADc,OAEpB0W,EAASrW,GACToW,EAASzW,GAHW,2CAAH,sDAMnB,OACI,cAAC,EAAD,CAAepC,MAAOA,EAAtB,SACI,gCACI,cAAC,GAAD,CAAWiE,SAAU,SAAC+H,GAAD,OAAO/H,EAAS+H,MACrC,cAAChU,EAAA,EAAD,CAAMC,OAAK,EAAEV,MAAO,CAACM,QAAQ,GAA7B,SACI,eAACK,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAjB,SACI,cAAC,GAAD,CACA6U,cAAe9K,EACfoN,cAAe/M,EACfiI,cAAe,SAACjI,GAAD,OAASiI,EAAcjI,IACtCwK,cAAe,SAACxK,EAAOL,GAAU0W,EAASrW,GAAQoW,EAASzW,QAG/D,cAACjK,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GAAjB,SACK+J,GAASK,EAAQ,cAAC,GAAD,CAAcL,MAAOA,EAAOK,MAAOA,IAAW,cAAC,GAAD,WAIxE,cAAC,EAAD,CAAUlL,MAAO,CAACK,MAAO,eCrCzC,IAMemhB,GANK,WAChB,MAA0B7hB,IAAnBT,EAAP,EAAOA,KAAME,EAAb,EAAaA,UAEb,OAAOF,IAASE,EAAY,cAAC,IAAD,CAAUU,GAAG,MAAQ,cAAC,IAAD,KCwBtC2hB,OAjBf,WACE,OACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAA/B,SACE,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,IAAIC,QAAS,cAACP,GAAD,QAEjC,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,UAAUC,QAAS,cAAC,GAAD,IAArC,SACE,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAAUC,QAAS,cAACha,EAAD,gBCnBjDia,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cb39394d.chunk.js","sourcesContent":["import { initializeApp} from 'firebase/app';\nimport { getDatabase } from \"firebase/database\";\nimport { getAuth } from \"firebase/auth\";\n\nconst config = {\n    apiKey: \"AIzaSyBWWEHMZLwhbc4VLsmwhvF5Nv1HjxZ15QQ\",\n  authDomain: \"sysdescriptor.firebaseapp.com\",\n  databaseURL: \"https://sysdescriptor-default-rtdb.firebaseio.com\",\n  projectId: \"sysdescriptor\",\n  storageBucket: \"sysdescriptor.appspot.com\",\n  messagingSenderId: \"1070055316533\",\n  appId: \"1:1070055316533:web:bb96f1aab8f9cde30ba57c\",\n  measurementId: \"G-CZ32SF38K8\"\n}\n\nconst app = initializeApp(config);\n\nexport const database = getDatabase(app);\nexport const auth = getAuth(app);","import React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"../misc/firebase\";\n// import { ProfileDB } from \"../Database/ProfileDB\";\n\n\nconst UserContext = createContext();\n\nexport const UserProvider = ({children}) => {\n    const [user, setUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    \n    useEffect(() => {\n        onAuthStateChanged(auth, (p) => {\n            if (p) {\n                setUser(p);\n            } else {\n                setUser(null);\n            }\n            setIsLoading(false);\n        })\n    }, [])\n    \n    return (\n        <UserContext.Provider value={{user, isLoading}}>\n            {children}\n        </UserContext.Provider>\n    );\n}\n\nexport const useUser = () => useContext(UserContext);","import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useUser } from '../Contexts/user.context';\n\nconst PrivateRoute = () => {\n    const {user, isLoading} = useUser();\n\n    return user && !isLoading ? <Outlet /> : <Navigate to=\"/signin\" />;\n}\n\nexport default PrivateRoute;\n\n","export default __webpack_public_path__ + \"static/media/landing-train.6ac10f11.jpg\";","import React from 'react';\nimport { Col, Footer, Grid, Row } from 'rsuite';\n\nconst MyFooter = ({style}) => (\n    <Footer style={{...style, clear: 'both',\n        position: 'fixed',\n        bottom: '0px',\n        width: '100%',\n        padding: '15px',\n        zIndex: 0\n      }}\n\n        className='light-shade-c'\n      >\n        <Grid fluid>\n          <Row>\n            <Col xs={18}>\n              <h5>\n                SysDescriptor\n              </h5>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={4} lg={2}>\n              <a href='/'>Privacy Policy</a>\n            </Col>\n            <Col xs={4} lg={2}>\n              <a href='/'>Terms of Use</a>\n            </Col>\n            <Col xs={4} lg={2}>\n              <a href='/'>Accessibility</a>\n            </Col>\n            <Col xs={12} lg={18}>\n            <div>\n            <p style={{textAlign: 'right'}}>\n               Developed by Siemen Engineer <a href='https://www.linkedin.com/in/keefergregoire/'>Keefer Gregoire</a>\n             </p>\n            </div>\n            </Col>\n          </Row>\n        </Grid>\n    </Footer>\n);\n\n\nexport default MyFooter;","import React from 'react';\nimport { Notification, toaster } from \"rsuite\";\n\n// PlacementType = 'topCenter' | 'bottomCenter' | 'topStart' | 'topEnd' | 'bottomStart' | 'bottomEnd';\n\n\n\nconst type = {\n    success: 'success',\n    error: 'error',\n    warning: 'warning',\n    info: 'info'\n}\n\nconst DEF_DURATION = 1500;\n\nexport default class Alert{\n\n    static PlacementType={\n        TOPCENTER: 'topCenter',\n        BOTTOMCENTER: 'bottomCenter',\n        TOPSTART: 'topStart',\n        TOPEND: 'topEnd',\n        BOTTOMSTART: 'bottomStart',\n        BOTTOMEND: 'bottomend'\n    }\n\n    static checkDuration = d => {\n        if(d && Number.isInteger(d)){\n            return d\n        }\n        return DEF_DURATION;\n    }\n\n    static checkPlace = p => {\n        return this.checkPlace[p] === null ? this.PlacementType.TOPEND : p;\n    }\n    \n    static success = (msg, place=this.PlacementType.TOPEND, duration) => {\n        const checkedPlace = this.checkPlace(place);\n        toaster.push(\n        <Notification \n            header={type.success}  \n            duration={this.checkDuration(duration)} \n            closable\n            type={type.success}\n        >\n            {msg}\n        </Notification>, {placement: checkedPlace});\n    }\n\n    static warning = (msg,place=this.PlacementType.TOPEND, duration) => {\n        const checkedPlace = this.checkPlace(place);\n        toaster.push(\n            <Notification \n                header={type.warning}  \n                duration={this.checkDuration(duration)} \n                closable \n                type={type.warning}\n            >\n                {msg}\n            </Notification>, {placement: checkedPlace});\n    }\n\n    static info = (msg, place=this.PlacementType.TOPEND, duration) => {\n        const checkedPlace = this.checkPlace(place);\n        toaster.push(\n            <Notification \n                header={type.info}  \n                duration={this.checkDuration(duration)} \n                closable\n                type={type.info}\n            >\n                {msg}\n            </Notification>, {placement: checkedPlace});\n    }\n\n    static error = (msg, place=this.PlacementType.TOPEND, duration) => {\n        const checkedPlace = this.checkPlace(place);\n        toaster.push(\n            <Notification \n                header={type.error}  \n                duration={this.checkDuration(duration)} \n                closable\n                type={type.error}\n            >\n                {msg}\n            </Notification>, {placement: checkedPlace});\n    }\n}","import { get, ref, update } from \"firebase/database\";\nimport firebase from 'firebase/compat/';\n\nimport Alert from \"../misc/Alert\";\nimport {database} from \"../misc/firebase\";\n\nexport class ProfileDB {\n    static read = async (uid) => {\n        try{\n            if(!uid){throw new Error('Missing parent ID')}\n\n            const db = ref(database, `profiles/${uid}`)\n\n            const data = await get(db);\n\n            return data.val();\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static create = async (firstName, lastName, email, activeStatus=false) => {\n        try{\n            const db = ref(database, `profiles/`)\n\n            const payLoad = {\n                firstName,\n                lastName,\n                email,\n                activeStatus,\n                birthdate: firebase.database.ServerValue.TIMESTAMP\n            }\n\n            const id = await update(db, payLoad);\n            \n            return id\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n}","import { createUserWithEmailAndPassword } from 'firebase/auth';\nimport React, {useState} from 'react'\nimport {Form, Button, Schema} from 'rsuite';\nimport { ProfileDB } from '../../Database/ProfileDB';\n\nimport Alert from '../../misc/Alert';\n// import { useWindowHeight } from '../../misc/customHooks';\nimport { auth } from '../../misc/firebase';\n\n\nexport default function JoinForm() {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordRetry, setPasswordRetry] = useState('');\n\n    const model = Schema.Model({\n        firstName: Schema.Types.StringType().isRequired('This field is required'),\n        lastName: Schema.Types.StringType().isRequired('This field is required'),\n        email: Schema.Types.StringType().pattern(/.*@siemens.com/,'A valid Siemens email is required'),\n        password: Schema.Types.StringType().isRequired('This field is required'),\n        passwordRetry: Schema.Types.StringType().addRule(() => {\n            if (password !== passwordRetry) {\n              return false;\n            }\n            return true;\n          }, 'The passwords do not match')\n      })\n  \n  \n      const resetFormState= () => {\n          setFirstName(''); setLastName(''); setEmail(''); setPassword(''); setPasswordRetry('');\n      }\n  \n  \n      const handleNewUser = async () => {\n          if(model.check({firstName, lastName, email, password, passwordRetry})){\n              createUserWithEmailAndPassword(auth, email, password)\n              .then(()=> {\n                Alert.success(`Welcome to SysDescriptor ${firstName}`, Alert.PlacementType.TOPCENTER, 4000);\n                ProfileDB.create(firstName, lastName, email);\n              })\n              .catch((e)=> {\n                Alert.error(e.message, Alert.PlacementType.TOPCENTER,4000);\n              })\n            resetFormState();              \n          }\n      }\n\n    return (\n        <div style={{ borderRadius: '5px', padding: '10px', width: '350px', height: '100%'}} id='join-form'>\n            <h2>Join</h2>\n            <p>You must be a Siemens employee to make use of this site</p>\n            <hr/>\n            <Form onSubmit={handleNewUser} model={model}>\n                <div style={{height: '95%', overflowY: 'scroll'}}>\n                    <Form.Group controlId='firstName'>\n                        <Form.ControlLabel>First Name</Form.ControlLabel>\n                        <Form.Control value={firstName} onChange={(v)=>setFirstName(v)} name='firstName'/>\n                    </Form.Group>\n                    <Form.Group controlId='lastName'>\n                        <Form.ControlLabel>Last Name</Form.ControlLabel>\n                        <Form.Control value={lastName} onChange={v=>setLastName(v)} name='lastName'/>\n                    </Form.Group>\n                    <Form.Group controlId=\"email\">\n                        <Form.ControlLabel>Siemens Email</Form.ControlLabel>\n                        <Form.Control value={email} onChange={v=>setEmail(v)} name=\"email\" type=\"email\" />\n                    <Form.HelpText tooltip>Valid Siemens email address is required</Form.HelpText>\n                    </Form.Group>\n                    <Form.Group controlId=\"password\">\n                        <Form.ControlLabel>Password</Form.ControlLabel>\n                        <Form.Control value={password} onChange={v=>setPassword(v)} name=\"password\" type=\"password\" autoComplete=\"off\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"passwordRetry\">\n                        <Form.ControlLabel>Password Retry</Form.ControlLabel>\n                        <Form.Control value={passwordRetry} onChange={v=>setPasswordRetry(v)} name=\"passwordRetry\" type=\"password\" autoComplete=\"off\" />\n                    </Form.Group>\n                </div>\n\n                <Form.Group>\n                    <Button style={{marginTop: '15px'}} type='submit' block size='lg' appearance=\"primary\">Join</Button>\n                </Form.Group>\n            </Form>\n      </div>\n    )\n}\n","import { signInWithEmailAndPassword } from 'firebase/auth';\nimport React, {useState} from 'react'\nimport { Button, Form, Modal } from 'rsuite';\nimport Alert from '../../misc/Alert';\nimport { auth } from '../../misc/firebase';\n\nconst SignInModal = ({show, onClose}) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n\n    const handleSubmit = () => {\n        signInWithEmailAndPassword(auth, email, password)\n        .then(() => {\n            Alert.success('You have been successfully signed in');\n        })\n        .catch((err)=> {\n            Alert.error(err.message);\n        })\n    }\n\n\n    return (\n        <Modal size='xs' backdrop open={show} onClose={onClose}>\n            <Modal.Header>\n            <Modal.Title>Sign In</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group>\n                    <Form.ControlLabel>Siemens Email</Form.ControlLabel>\n                    <Form.Control onKeyUp={(v)=>setEmail(v.target.value)}/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.ControlLabel>Password</Form.ControlLabel>\n                    <Form.Control onKeyUp={(v)=>setPassword(v.target.value)} type='password'/>\n                </Form.Group>\n                <Form.Group>\n                    <Button appearance='primary' block type='submit'>Sign in</Button>\n                </Form.Group>\n            </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={onClose} appearance='subtle'>Cancel</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default SignInModal;\n","\nimport React, {useState} from 'react';\nimport {Grid, Row, Col, Button, Header, Container} from 'rsuite';\n\nimport landingtrain from '../../images/landing-train.jpg';\nimport MyFooter from '../misc/Footer';\nimport JoinForm from './JoinForm';\nimport SignInModal from './SignInModal'; \n\nexport default function Landing() {\n    const [showModal, setShowModal] = useState();\n\n    return (\n        <Container>\n          <div id='background-train' style={{backgroundImage: `url(${landingtrain})`  }}> \n            <SignInModal show={showModal} onClose={() => setShowModal(false)}/>\n              <Header className='light-shade-c white-c p-1'>\n                <Grid fluid>\n                  <Row>\n                    <Col xs={20}>\n                      <h1>SysDescriptor</h1>\n                    </Col>\n                    <Col xs={4}>\n                      <div>\n                      <Button onClick={()=>setShowModal(true)} style={{marginTop: '5%', marginRight: '10%', float: 'right', color: 'white', fontSize: '16px'}} className='white-c' appearance='link'>Sign In</Button>\n                      </div>\n                    </Col>\n                  </Row>\n                </Grid>\n              </Header>\n      \n            <h2 id='tag-line'>Siemens Rail Infastructure test unit management tool</h2>\n        \n      \n            <div style={{position: 'relative', marginTop: '1%'}}>\n              <div style={{position: 'absolute', right: '6%', zIndex: 3}}>\n                <JoinForm/>\n              </div>\n            </div>\n          </div>\n          <MyFooter />\n      </Container>\n    )\n}\n","import React, { createContext, useContext} from 'react';\nimport { CustomProvider } from 'rsuite';\n\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({children, theme='light'}) => (\n    <ThemeContext.Provider value={theme}>\n        <CustomProvider theme={theme}>\n         {children}\n        </CustomProvider>\n    </ThemeContext.Provider>\n)\n\nexport const useTheme = () => useContext(ThemeContext);\n","import { get, ref, push, onValue } from \"firebase/database\";\nimport firebase from 'firebase/compat/';\n\nimport Alert from \"../misc/Alert\";\nimport {database} from \"../misc/firebase\";\n\nexport class DBHelper {\n    static read = async (DBPARENT, id) => {\n        try{\n            if(!id){throw new Error('Missing parent ID')}\n\n            const db = ref(database, `${DBPARENT}/${id}`)\n\n            const data = await get(db);\n\n            return data.val();\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static create = async (DBPARENT, id, name='') => {\n        try{\n            if(!id){throw new Error('Missing parent ID')}\n\n            const db = ref(database, `${DBPARENT}/${id}`)\n\n            const payLoad = {\n                name,\n                birthdate: firebase.database.ServerValue.TIMESTAMP\n            }\n\n            const key = await push(db, payLoad).key;\n            \n            return key\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static onValue = (DBPARENT, id, cb) => {\n        try{\n            const db = ref(database, `${DBPARENT}/${id}`);\n\n            onValue(db, snap => {    \n                cb(snap.val());\n            }, err => {\n                Alert.error(err)\n            })\n\n            return db;\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n}","/* \nRequirements\n------------\n1) Update value\n2) Read value\n2) Delete value\n\n\nFunctionInputs\n--------------\n1) Parent Component ID\n*/\n\nimport { get, ref, set } from \"firebase/database\";\nimport firebase from 'firebase/compat/';\nimport Alert from \"../../../../../../../misc/Alert\";\nimport {database} from \"../../../../../../../misc/firebase\";\n\n\nexport class DataDB {\n    static read = async (DBPARENT, componentID) => {\n        try{\n            if(!componentID){throw new Error('Missing parent component identification.')}\n\n            const db = ref(database, `${DBPARENT}/${componentID}`)\n\n            const data = await get(db);\n\n            return data.val();\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static readSpecific = async (DBPARENT, componentID, title) => {\n        try{\n            if(!componentID){throw new Error('Missing parent component identification.')}\n            if(!title){throw new Error('Need title to retreive data')}\n\n            const db = ref(database, `${DBPARENT}/${componentID}/${title}`)\n\n            const data = await get(db);\n\n            return data.val();\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n\n    static update = async (DBPARENT, componentID, title, value) => {\n        try{\n            if(!componentID){throw new Error('Missing parent component identification.')}\n\n            const db = ref(database, `${DBPARENT}/${componentID}/${title}`)\n\n            const payLoad = {\n                value,\n                lastUpdated: firebase.database.ServerValue.TIMESTAMP\n            }\n\n            await set(db, payLoad);\n\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static delete = async (DBPARENT, componentID) => {\n        try{\n            if(!componentID){throw new Error('Missing parent component identification.')}\n\n            const db = ref(database, `${DBPARENT}/${componentID}`)\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n}","import { onValue, ref } from \"firebase/database\";\nimport { DataDB } from \".\";\nimport Alert from \"../../../../../../../misc/Alert\";\nimport { database } from \"../../../../../../../misc/firebase\";\n\nexport class HardWareDataDB {\n    static DBPARENT = `HardWareData`;\n\n    static read = async componentID => {\n       return DataDB.read(this.DBPARENT, componentID);\n    }\n\n    static onSpecificValue = async (componentID, spec, cb) => {\n        try{\n            const db = ref(database, `${this.DBPARENT}/${componentID}/${spec}`);\n            \n            onValue(db, snap => {    \n                cb(snap.val());\n            }, err => {\n                Alert.error(err)\n            })\n\n            return db;\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static readSpecific = async (componentID, title) => {\n        return DataDB.readSpecific(this.DBPARENT, componentID, title);\n     }\n\n    static update = async (componentID, title, value) => {\n        await DataDB.update(this.DBPARENT, componentID, title, value);\n    }\n\n    static delete = async componentID => {\n        await DataDB.delete(this.DBPARENT, componentID);\n    }\n}","import { DataDB } from \".\";\n\nexport class SoftWareDataDB {\n    static DBPARENT = `SoftWareData`;\n\n    static read = async componentID => {\n        return DataDB.read(this.DBPARENT, componentID);\n    }\n\n    static readSpecific = async (componentID, title) => {\n        return DataDB.readSpecific(this.DBPARENT, componentID, title);\n     }\n\n    static update = async (componentID, title, value) => {\n        await DataDB.update(this.DBPARENT, componentID, title, value);\n    }\n\n    static delete = async componentID => {\n        await DataDB.delete(this.DBPARENT, componentID);\n    }\n}","/* \nRequirements\n------------\n1) Create\n2) Read \n2) Delete \n\n\nFunctionInputs\n--------------\n1) Parent SUB_COMPONENT_ID\n*/\n\nimport { get, ref, set } from \"firebase/database\";\nimport Alert from \"../../../../../../misc/Alert\";\nimport {database} from \"../../../../../../misc/firebase\";\nimport { DBHelper } from \"../../../../../DBHelper\";\nimport { HardWareDataDB } from \"./Data/HarwareDataDB\";\nimport { SoftWareDataDB } from \"./Data/SoftwareDataDB\";\n\nexport class ComponentItemDB {\n    static DBPARENT = 'ComponentItems';\n\n    static NoIDErr = Error('Missing parent sub-component identification.');\n\n    static read = async (compID) => {\n        return DBHelper.read(this.DBPARENT, compID);\n    }\n\n    static addListener = (compID, cb) => {\n        return DBHelper.onValue(this.DBPARENT, compID, cb)\n    }\n\n\n    static create = async (compID, name) => {\n        return DBHelper.create(this.DBPARENT, compID, name);\n    }\n\n    static delete = async (compID) => {\n        try{\n            if(!compID){throw new this.NoIDErr}\n\n            const db = ref(database, `${this.DBPARENT}/${compID}`)\n            \n            //  delete children first\n            const componentIDs = await get(db);\n            const compIDsArr = Object.keys(componentIDs.val() || []) ;\n            for(let i = 0 ; i< compIDsArr.length; i++){\n                const id = compIDsArr[i];\n                SoftWareDataDB.delete(id);\n                HardWareDataDB.delete(id);\n            }\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static deleteSpecific = async (compID, compItemID) => {\n        try{\n            if(!compID){throw new this.NoIDErr}\n            if(!compItemID){throw new this.NoIDErr}\n\n\n            const db = ref(database, `${this.DBPARENT}/${compID}/${compItemID}`);\n            \n           await SoftWareDataDB.delete(compItemID);\n           await HardWareDataDB.delete(compItemID);\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n}","/* \nRequirements\n------------\n1) Create\n2) Read \n2) Delete \n\n\nFunctionInputs\n--------------\n1) Parent SUB_COMPONENT_ID\n*/\n\nimport { get, ref, set } from \"firebase/database\";\nimport Alert from \"../../../../../misc/Alert\";\nimport {database} from \"../../../../../misc/firebase\";\nimport { DBHelper } from \"../../../../DBHelper\";\nimport { ComponentItemDB } from \"./ComponentItemDB/ComponentItemDB\";\n\nexport class ComponentDB {\n    static DBPARENT = 'Component';\n\n    \n\n    static read = async (subSysID) => {\n        return DBHelper.read(this.DBPARENT, subSysID);\n    }\n\n    static addListener = async (subSysID, cb) => {\n        return DBHelper.onValue(this.DBPARENT, subSysID, cb);\n    }\n\n    static create = async (subSysID, name) => {\n        return DBHelper.create(this.DBPARENT, subSysID, name);\n    }\n\n    static delete = async (subSysID) => {\n        try{\n            if(!subSysID){throw new Error('Missing parent sub-system identification.');}\n\n            const db = ref(database, `${this.DBPARENT}/${subSysID}`)\n            \n            //  delete children first\n            const compItemIDs = await get(db);\n            const compItemIDsArr = Object.keys(compItemIDs.val() || []) ;\n            for(let i = 0 ; i< compItemIDsArr.length; i++){\n                const id = compItemIDsArr[i];\n                ComponentItemDB.delete(id);\n            }\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static deleteSpecific =  async (subSysID, id) => {\n        try{\n            if(!subSysID){throw Error('Missing parent sub-system identification.');}\n            if(!id){throw Error('Missing component identification.');}\n\n            const db = ref(database, `${this.DBPARENT}/${subSysID}/${id}`);\n\n            await ComponentItemDB.delete(id);\n            \n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n}","/* \nRequirements\n------------\n1) Create\n2) Read \n2) Delete \n\n\nFunctionInputs\n--------------\n1) Parent SUB_COMPONENT_ID\n*/\n\nimport { get, ref, set } from \"firebase/database\";\nimport Alert from \"../../../../misc/Alert\";\nimport {database} from \"../../../../misc/firebase\";\nimport { DBHelper } from \"../../../DBHelper\";\nimport { ComponentDB } from \"./ComponentDB/ComponentDB\";\n\nexport class SubSystemDB {\n    static DBPARENT = 'SubSystem';\n\n    static NoIDErr = Error('Missing parent revision identification.');\n\n    static addListener = async (revID, cb) => {\n        return DBHelper.onValue(this.DBPARENT, revID, cb);\n    }\n\n    static read = async (revID) => {\n        return DBHelper.read(this.DBPARENT, revID);\n    }\n\n    static create = async (revID, name) => {\n        return DBHelper.create(this.DBPARENT, revID, name);\n    }\n\n    static delete = async (revID) => {\n        try{\n            if(!revID){throw new this.NoIDErr}\n\n            const db = ref(database, `${this.DBPARENT}/${revID}`)\n            \n            //  delete children first\n            const subSysIDs = await get(db);\n            const subSysIDsArr = Object.keys(subSysIDs.val() || []) ;\n            for(let i = 0 ; i< subSysIDsArr.length; i++){\n                const id = subSysIDsArr[i];\n                ComponentDB.delete(id);\n            }\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static deleteSpecific = async (revID, subSysID) => {\n        try{\n            if(!revID){throw new this.NoIDErr}\n            if(!subSysID){throw new this.NoIDErr}\n\n            const db = ref(database, `${this.DBPARENT}/${revID}/${subSysID}`)\n            \n            await ComponentDB.delete(subSysID);\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n}","\nimport { get, ref, set, push} from \"firebase/database\";\nimport firebase from 'firebase/compat/';\nimport { SubSystemDB } from \"./SubSystemDB/SubSystemDB\";\nimport Alert from \"../../../misc/Alert\";\nimport { DBHelper } from \"../../DBHelper\";\nimport {database} from \"../../../misc/firebase\";\n\n\nexport class RevisionDB {\n    static DBPARENT = 'revisions';\n    \n    static readAll = async (sysID) => {\n        return DBHelper.read(this.DBPARENT, sysID);\n    }\n\n    static addListener = (sysID, cb) => {\n       return DBHelper.onValue(this.DBPARENT, sysID, cb);\n    }\n\n    static readSpecific = async (sysID, revID) => {\n        try{\n            if(!sysID){throw new Error('Missing system identification.')}\n            if(!revID){throw new Error('Missing revision identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}/${revID}`)\n\n            const data = await get(db);\n            return data.val()\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static create = async (sysID, name='Untitled', revNumber=0) => {\n        try{\n            if(!sysID){throw new Error('Missing system identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}`)\n\n            const payLoad = {\n                name,\n                revNumber,\n                birthday: firebase.database.ServerValue.TIMESTAMP,\n                lastUpdated: firebase.database.ServerValue.TIMESTAMP\n            }\n\n           const data = await push(db, payLoad);\n           return data.key\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n\n    static updateByKey = async (sysID, revID, key, value) => {\n        try{\n            if(!sysID){throw new Error('Missing system identification.')}\n            if(!revID){throw new Error('Missing revision identification.')}\n\n            let db = ref(database, `${this.DBPARENT}/${sysID}/${revID}/${key}`)\n\n            await set(db, value);\n\n            db = ref(database, `${this.DBPARENT}/${sysID}/${revID}/lastUpdated`);\n            await set(db, firebase.database.ServerValue.TIMESTAMP)\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static deleteSpecific = async (sysID, revID) => {\n        try{\n            if(!sysID){throw new Error('Missing parent component identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}/${revID}`)\n\n            //  delete sub systems first\n            await SubSystemDB.delete(revID);\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n\n    static deleteAll = async (sysID) => {\n        try{\n            if(!sysID){throw new Error('Missing parent component identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}`)\n\n            //  delete sub systems first\n            const revIDs = await get(db);\n            const revIDsArr = Object.keys(revIDs.val() || []) ;\n            for(let i = 0 ; i< revIDsArr.length; i++){\n                const id = revIDsArr[i];\n                SubSystemDB.delete(id);\n            }\n\n            await set(db, null);\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n}","import React, { useState } from 'react';\nimport { ButtonGroup, ButtonToolbar, Button } from 'rsuite';\n\nconst ButtonToggle = ({options=[], defaultIndex=0, onChange, style, size, justified=false}) => {\n    const [selectedIndex, setSelectedIndex] = useState(defaultIndex);\n\n    const handleChange = i => {\n        setSelectedIndex(i);\n        onChange(options[i].value)\n    }\n\n\n    const opt = options.map((val,i) => \n        <Button  \n            onClick={()=>handleChange(i)} \n            key={i}\n            appearance={selectedIndex===i ? 'primary' : 'ghost'}\n            size={size}\n        >\n            {val.disp}\n        </Button>\n    )\n\n\n    \n    return (\n        <ButtonToolbar style={style}>\n            <ButtonGroup justified={justified}>\n                {opt}\n            </ButtonGroup>\n        </ButtonToolbar>\n    );\n};\n\nexport default ButtonToggle;","import React, { useState} from 'react';\nimport { signOut } from 'firebase/auth';\nimport {Navbar, Nav, Button, Drawer } from 'rsuite';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\n\nimport ButtonToggle from './Helper Components/ButtonToggle';\n\n\nimport {version} from '../../../package.json';\nimport { useUser } from '../../Contexts/user.context';\n\nimport { auth } from '../../misc/firebase';\nimport Alert from '../../misc/Alert';\n\nconst lightDarkDisp = [\n    {\n        disp: <FontAwesomeIcon icon={faMoon}/>,\n        value: \"dark\"\n    },\n    {\n        disp: <FontAwesomeIcon icon={faSun}/>,\n        value: \"light\"\n    }\n]\n\n\n\nconst HeaderBar = ({style, setTheme}) => {\n    const [drawIsOpen, setDrawIsOpen] = useState(false);\n    const {user} = useUser();\n\n    const handleSignOut = () => {\n        signOut(auth).then(()=>{\n\n        }\n        ).catch((err) => {\n            Alert.error(err.message);\n        })\n    }\n\n    return(\n        <>\n            <Navbar style={{...style}}>\n                <Navbar.Brand >\n                    SYSDESCRIPTOR {version}\n                </Navbar.Brand>\n                <Nav pullRight style={{marginTop: '0px'}}>\n                <Button onClick={()=>setDrawIsOpen(true)} appearance='link'>{user.email}</Button>\n                <ButtonToggle\n                    options={lightDarkDisp}\n                    onChange={(e) => setTheme(e)}\n                    style={{marginBottom: '5px', marginRight: '5px', textAlign: 'right'}}\n                    size='xs'\n                />\n                </Nav>\n            </Navbar>\n\n            <Drawer size='xs' placement='right' open={drawIsOpen} onClose={() =>setDrawIsOpen(false)}>\n                <Drawer.Header>\n                    <Drawer.Title>{user.email}</Drawer.Title>\n                </Drawer.Header>\n                <Drawer.Body>\n                        <Button block appearance='primary' color='red' onClick={handleSignOut}>Sign Out</Button>\n                    </Drawer.Body>\n            </Drawer>\n        </>\n\n    )\n}\n\nexport default HeaderBar;\n\n\n\n","import firebase from 'firebase/compat/';\nimport { get, ref, push, set, update } from 'firebase/database';\n\nimport Alert from \"../../misc/Alert\";\nimport {database} from \"../../misc/firebase\";\nimport { DBHelper } from \"../DBHelper\";\nimport { RevisionDB } from \"./RevisionDB/RevisionDB\";\n\nexport class SystemDB{\n    static DBPARENT = 'systems';\n\n    static readAll = async () => {\n        try{\n            const db = ref(database, `${this.DBPARENT}/`)\n            const data = await get(db);\n            return data.val();\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static read = async sysID => {\n        return DBHelper.read(this.DBPARENT, sysID);\n    }\n\n    static addListener = (cb) => {\n       return DBHelper.onValue(this.DBPARENT, '', cb);\n    }\n\n    static create = async (title='Untitled', owner=null, technician=null, sysNumber=null, partNumber=null) => {\n        try{\n            const db = ref(database, `${this.DBPARENT}/`)\n\n            const payLoad = {\n                title,\n                owner,\n                technician,\n                sysNumber,\n                partNumber,\n                birthday: firebase.database.ServerValue.TIMESTAMP,\n                lastUpdated: firebase.database.ServerValue.TIMESTAMP\n            }\n\n            const data = await push(db, payLoad);\n            return data.key;\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static update = async (sysID, title='Untitled', owner=null, technician=null, sysNumber=null, partNumber=null) => {\n        try{\n            if(!sysID){throw new Error('Missing system identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}`)\n\n            const updates= {\n                title,\n                owner,\n                technician,\n                sysNumber,\n                partNumber,\n                lastUpdated: firebase.database.ServerValue.TIMESTAMP\n            }\n\n            await update(db, updates);\n\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n\n    static delete = async sysID => {\n        try{\n            if(!sysID){throw new Error('Missing system identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}`)\n\n            //  delete revisions first\n            await RevisionDB.deleteAll(sysID);\n\n            await set(db, null);\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n}","import {Document, Packer, Paragraph, HeadingLevel, UnderlineType, TextRun, Table, TableRow, TableCell } from 'docx';\nimport {saveAs} from 'file-saver';\nimport { RevisionDB } from '../Database/SystemDB/RevisionDB/RevisionDB';\nimport { ComponentDB } from '../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB';\nimport { ComponentItemDB } from '../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/ComponentItemDB';\nimport { HardWareDataDB } from '../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/HarwareDataDB';\nimport { SoftWareDataDB } from '../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/SoftwareDataDB';\nimport { SubSystemDB } from '../Database/SystemDB/RevisionDB/SubSystemDB/SubSystemDB';\nimport { SystemDB } from '../Database/SystemDB/SystemDB';\nimport Alert from './Alert';\n\nexport function makeid(length=5) {\n    let result           = '';\n    const characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for ( let i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return `${Date.now()}${result}`;\n}\n\nexport const dispTime = d => {\n  if(Number.isNaN(d)){return '- -'}\n\n  return (new Date(d)).toDateString();  \n\n}\n\nexport const idObjToArr = obj => {\n  if(!obj){return []}\n  \n  const ids = Object.keys(obj);\n\n  return ids.map(id => {\n    return {id, ...obj[id]}\n  })\n}\n\nexport const arrRemove = (arr, item) =>{\n    const i = arr.findIndex(item);\n    if(i===-1){return arr}\n\n    return arr.splice(i, 1);\n}\n\nexport function filterList(sysArr, searchString) {\n  const filtered = sysArr.filter(str => {\n    if(!str){return false}\n    return str.includes(searchString);\n  });\n  return filtered;\n}\n\nconst saveDocumentToFile = (doc, fileName) => {\n  Packer.toBlob(doc).then((blob) => {\n    // saveAs from FileSaver will download the file\n    saveAs(blob, fileName);\n  });\n}\n\nconst convertSize = x => (x*2)\n\n\n\n// const hasValue = e => { //  eslint consistent-return: [\"error\", { \"treatUndefinedAsUnspecified\": false }]\n//   if(Object.entries(e).contains(\"value\")){\n//     return !(e.value==='')\n//   }\n//   if(Object.entries(e).length > 0){\n//     const entries = Object.entries(e);\n//     for(let i =0 ; i<entries.length; i++){\n//       hasValue(e[entries[i]]);\n//     }\n//   }else{\n//     return false\n//   }\n// }\n\n// const getOptionalValues = optionsArr => {\n//   const arr = [];\n\n//   for(let i =0; i< optionsArr.length; i++){\n//     if(hasValue(optionsArr[i])){\n//       arr.push(optionsArr[i]);\n//     }\n//   }\n\n//   return arr;\n// }\n\n// const buildTable = jsonDoc => {\n//   const dataToDisplay = [...jsonDoc.required, ...getOptionalValues()]\n// }\n\nexport const getKeyName = obj => {\n  return Object.keys(obj)[0];\n}\n\nexport const snapToArr = snapArr => {\n  const json = (snapArr) || {};\n  const ids = Object.keys(json);\n  const arr = ids.map(id =>  ({id, ...json[id]}));\n  return arr || [];\n}\n\n\nconst dispHardSoftData = (hardData, softData) => {\n  const loopLen = hardData.length > softData.length ? hardData.length : softData.length;\n\n  const returnVar = [];\n\n  for(let i =0; i< loopLen; i++){\n    returnVar.push(\n      new TableRow({\n        children: [\n          softData[i] ?\n          new TableCell({\n            children: [\n              new Paragraph({\n                children: [\n                  new TextRun(`${softData[i].id}:  ${softData[i].value}`)\n                ],\n                style: 'default'\n              }),\n            ],\n          }) : new TableCell({children:[]}),\n        hardData[i] ?\n          new TableCell({\n            children: [\n              new Paragraph({\n                children: [\n                  new TextRun(`${hardData[i].id}:  ${hardData[i].value}`)\n                ],\n                style: 'default'\n              }),\n            ],\n          }) : new TableCell({children:[]}),\n        ]\n      })\n    )\n  }\n\n  return returnVar;\n}\n\n\n\nconst dispComponentItemData = async compItems => {\n  const returnvar = [];\n  for(let i =0; i< compItems.length; i++){\n    const item = compItems[i];\n    /* eslint-disable no-await-in-loop */\n    const snObj = await HardWareDataDB.readSpecific(item.id, 'Serial Number');\n    \n    /* eslint-disable no-await-in-loop */\n    const hardData = idObjToArr(await HardWareDataDB.read(item.id));\n    /* eslint-disable no-await-in-loop */\n    const softData = idObjToArr(await SoftWareDataDB.read(item.id));\n\n    returnvar.push(\n      new Table({\n        rows: [\n          new TableRow({\n            children: [\n              new TableCell({\n                children: [\n                  new Paragraph({\n                    children: [\n                      new TextRun(`SN: ${snObj.value}`)\n                    ],\n                    style: 'default-bold',\n                    \n                  }),\n                ],\n              })\n            ]\n          }),\n          new TableRow({\n            children: [\n              new TableCell({\n                children: [\n                  new Paragraph({\n                    children: [\n                      new TextRun(\"Hardware\")\n                    ],\n                    style: 'default-bold',\n\n                  }),\n                ],\n              }),\n              new TableCell({\n                children: [\n                  new Paragraph({\n                    children: [\n                      new TextRun(\"Software\")\n                    ],\n                    style: 'default-bold'\n                  }),\n                ],\n              })\n            ]\n          }),\n          ...await dispHardSoftData(hardData, softData)\n        ]\n      }),\n    )\n  }\n  return returnvar;\n}\n\nconst dispComponenetData = async comps => {\n  const returnvar = [];\n  for(let i =0; i< comps.length; i++){\n    const comp = comps[i];\n    /* eslint-disable no-await-in-loop */\n    const compItems = idObjToArr(await ComponentItemDB.read(comp.id));\n\n    returnvar.push(\n      new Paragraph({\n        text: comp.name,\n        heading: HeadingLevel.HEADING_3,\n      }),\n      ...await dispComponentItemData(compItems)\n    )\n  }\n\n  return returnvar;\n}\n\nconst dispSubSystemData = async data => {\n  const returnvar = [];\n\n  for(let i =0; i< data.length; i++){\n    const subSys = data[i];\n    /* eslint-disable no-await-in-loop */\n    const components = idObjToArr(await ComponentDB.read(subSys.id));\n\n    returnvar.push(\n      new Paragraph({\n        text: subSys.name,\n        heading: HeadingLevel.HEADING_2,\n      }),\n      ...await dispComponenetData(components)\n    )\n\n  }\n  return returnvar;\n}\n\nexport const generateDocument = async (SYSID, REVID) => {\n  try{\n    const date = new Date();\n\n    const system = await SystemDB.read(SYSID);\n    const revision = await RevisionDB.readSpecific(SYSID, REVID);\n    const subsystems =  idObjToArr(await SubSystemDB.read(REVID));\n    const doc = new Document({\n      styles: {\n        default: {\n          heading1: {\n              run: {\n                  size: convertSize(28),\n                  bold: true,\n                  color: \"FFFFFF\"\n              },\n              paragraph: {\n                  spacing: {\n                      after: 120,\n                  },\n                  run: {\n                    color: \"FFFFFF\"\n                  }\n              },\n          },\n          heading2: {\n              run: {\n                size: convertSize(22),\n                bold: true,\n                underline: {\n                    type: UnderlineType.SINGLE,\n                },\n                color: \"FFFFFF\",\n              },\n              paragraph: {\n                spacing: {\n                  after: 100,\n                }\n              }\n          },\n          heading3: {\n            run: {\n              size: convertSize(16),\n              bold: true,\n              color: \"FFFFFF\",\n            },\n            paragraph: {\n              spacing: {\n                after: 50,\n              }\n            }\n        },\n          listParagraph: {\n              run: {\n                  color: \"FF0000\",\n              },\n          },\n        },\n        paragraphStyles: [\n        {\n          id: \"tech-owner\",\n          name: \"Technician & Owner\",\n          basedOn: \"Normal\",\n          next: \"Normal\",\n          quickFormat: true,\n          run: {\n              size: convertSize(14),\n              color: \"FFFFFF\"\n          },\n          paragraph: {\n            spacing: {\n              before: 100,\n            }\n          }\n        },\n        {\n          id: \"default\",\n          name: \"default\",\n          basedOn: \"Normal\",\n          next: \"Normal\",\n          quickFormat: true,\n          run: {\n              size: convertSize(10),\n              color: \"FFFFFF\"\n          },\n        },\n        {\n          id: \"default-bold\",\n          name: \"default-bold\",\n          basedOn: \"Normal\",\n          next: \"Normal\",\n          quickFormat: true,\n          run: {\n              size: convertSize(10),\n              color: \"FFFFFF\",\n              bold: true\n          },\n        }\n      ],\n      },\n      sections: [{\n        properties: {},\n        children: [\n          new Paragraph({\n            text: `${system.title} -- ${revision.name}`,\n            heading: HeadingLevel.HEADING_1,\n          }),\n          new Paragraph({\n            children: [\n              new TextRun(\"Generated On: \"), new TextRun({text: `${date.toDateString()} ${date.toLocaleTimeString()}`, bold: true}),\n            ],\n            style: 'default'\n          }),\n          new Paragraph({\n            children: [\n              new TextRun(\"Technician: \"), new TextRun({text: system.technician, bold: true}),\n              new TextRun(\"Owner: \"), new TextRun({text: system.owner, bold: true})\n            ],\n            style: \"tech-owner\"\n          }),\n          new Paragraph(\"\"),\n          ... await dispSubSystemData(subsystems)\n        ],\n      }],\n    });\n    saveDocumentToFile(doc, \"New Document.docx\");\n  }catch(err){\n    Alert.error('Unable to generate the document');\n  }\n}\n\n\n\n\n\n","import React, { useRef } from 'react'\nimport { Button, Dropdown, Popover, Whisper } from 'rsuite';\nimport MoreIcon from '@rsuite/icons/More';\n\n\nconst OptionsPopOver = React.forwardRef(({ handleSelect, ...rest }, ref) => (\n    <Popover ref={ref} {...rest} full>\n      <Dropdown.Menu onSelect={(n, e)=>{handleSelect(n); e.stopPropagation()}}>\n        <Dropdown.Item eventKey={1} >New Revision</Dropdown.Item>\n        <Dropdown.Item>Edit System</Dropdown.Item>\n        <Dropdown.Item eventKey={3}>Delete System</Dropdown.Item>\n      </Dropdown.Menu>\n    </Popover>\n));\n\n\n\nexport const SystemOptions = ({onNewRevision, onDeleteSystem}) => {\n  const ref = useRef();\n  const handleSelect = n => {\n    if(n===1){\n      onNewRevision();\n    }else if(n===3){\n      onDeleteSystem();\n    }\n\n    ref.current.close();\n  }\n  return (\n    <Whisper\n        placement=\"rightStart\"\n        controlId=\"control-id-with-dropdown\"\n        trigger=\"click\"\n        ref={ref}\n        onClick={(e)=>e.stopPropagation()}\n        speaker={<OptionsPopOver handleSelect={e=>handleSelect(e)}/>}                              \n    >\n      <Button appearance='subtle' size='xs'><MoreIcon/></Button>\n    </Whisper>\n  )\n}\n","import React from 'react';\nimport { Tooltip, Whisper } from 'rsuite';\n\nconst HoverShowAll = ({text=\"missing\", children}) => {\n    const tooltip = (\n        <Tooltip>\n          {text}\n        </Tooltip>\n      );\n\n    return (\n        <Whisper placement=\"top\" controlId=\"control-id-hover\" trigger=\"hover\" speaker={tooltip}>\n            {children}\n        </Whisper>\n    );\n};\n\nexport default HoverShowAll;","import React from 'react'\nimport { Button, Col, Row, Grid } from 'rsuite';\nimport TrashIcon from '@rsuite/icons/Trash';\nimport moment from 'moment';\n\nimport { useHover } from '../../../../../misc/customHooks';\nimport HoverShowAll from '../../../../misc/Helper Components/HoverShowAll';\n\n\nexport const Revision = ({onSelected, name, timestamp, revNumber=0, isSelected}) => {\n    const [ref, hover] = useHover();\n    name=name || 'Untitled';\n\n    const t = moment(timestamp);\n    const isNew = moment().subtract(2, \"days\").isBefore(t);\n\n    const selStyle = isSelected ? {borderLeft: '2px solid white'} : null;\n\n    const handleClick = () => {onSelected()}\n    return (\n        <div type='button' tabIndex={0} role=\"button\" styling=\"link\" onClick={handleClick} onKeyDown={handleClick} style={{display: 'block', width: '100%', ...selStyle}}  ref={ref} className='rs-list-item pointer p-1'>\n            <Grid fluid>\n                <Row>\n                    <Col xs={5}>\n                        <HoverShowAll text={name}>\n                            <p className='bold ellip-overflow align-l'>{name}</p>\n                        </HoverShowAll>\n                    </Col>\n                    <Col xs={5}>\n                        {isNew ? <span className='new'>New</span> : null}\n                        \n                    </Col>\n                    <Col xs={5}>\n                        <span className='muted-c'>Rev </span>{revNumber}\n                    </Col>\n                    <Col xs={7}>\n                        <span style={{fontSize: '12px'}}>\n                            <p className='muted-c ellip-overflow'>{t.format(\"MMM Do YY\")}</p>\n                            <p className='muted-c mt-0 ellip-overflow'>{t.format(\"h:mm:ss a\")}</p>\n                        </span>\n                    </Col>\n                    <Col xs={2}>\n                        <Button size='xs' appearance='subtle' color='red' style={{position: 'absolute', left: '1px', top: '4px', display: hover ? 'inline-block' : 'none' }}>\n                            <TrashIcon/>\n                        </Button>\n                    </Col>\n                </Row>\n            </Grid>\n        </div>\n    )\n}\n","import { useState, useEffect, useRef, useCallback } from \"react\";\nimport { off } from \"@firebase/database\";\nimport { idObjToArr} from \"./helperfunc\";\nimport { SystemDB } from \"../Database/SystemDB/SystemDB\";\nimport { RevisionDB } from \"../Database/SystemDB/RevisionDB/RevisionDB\";\nimport { SubSystemDB } from \"../Database/SystemDB/RevisionDB/SubSystemDB/SubSystemDB\";\nimport { ComponentDB } from \"../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB\";\nimport { ComponentItemDB } from \"../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/ComponentItemDB\";\nimport { HardWareDataDB } from \"../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/HarwareDataDB\";\n\n\nexport const useMediaQuery = query => {\n    const [matches, setMatches] = useState(\n      () => window.matchMedia(query).matches\n    );\n  \n    useEffect(() => {\n      const queryList = window.matchMedia(query);\n      setMatches(queryList.matches);\n  \n      const listener = evt => setMatches(evt.matches);\n  \n      queryList.addListener(listener);\n      return () => queryList.removeListener(listener);\n    }, [query]);\n  \n    return matches;\n};\n\nexport const useWindowHeight = () => {\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowHeight(window.innerHeight);\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowHeight;\n}\n\nexport const useHover = () => {\n  const [value, setValue] = useState(false);\n  const ref = useRef(null);\n  const handleMouseOver = () => setValue(true);\n  const handleMouseOut = () => setValue(false);\n  useEffect(\n    () => {\n      const node = ref.current;\n      if (node) {\n        node.addEventListener(\"mouseover\", handleMouseOver);\n        node.addEventListener(\"mouseout\", handleMouseOut);\n      }\n      return () => {\n          node.removeEventListener(\"mouseover\", handleMouseOver);\n          node.removeEventListener(\"mouseout\", handleMouseOut);\n      };\n    },\n    // eslint-disable-next-line\n    [ref.current] // Recall only if ref changes\n  );\n  return [ref, value];\n}\n\nexport const useRevisions = sysID => {\n  const [revs, setRevs] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n  \n  \n  const revsRef = useRef();\n  useEffect(() => {\n    setIsUpdating(true);\n    revsRef.current = RevisionDB.addListener(sysID, (v) => {\n      const revOBJ = v;\n      const revArr = idObjToArr(revOBJ);\n      setRevs(revArr);\n      setIsUpdating(false);\n    })\n    \n    return () => {\n      off(revsRef.current);\n    }\n  }, [sysID]);\n\n  return {revs, isUpdating};\n}\n\nexport const useSystems = () => {\n  const [systems, setSystems] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  const sysRef = useRef();\n  useEffect(() => {\n    setIsUpdating(true);\n    \n    sysRef.current = SystemDB.addListener((v) => {\n      const systemsObj = v;\n      const systemsArr = idObjToArr(systemsObj);\n      setSystems(systemsArr);\n      setIsUpdating(false);\n    })\n    \n    return () => {\n      off(sysRef.current);\n    }\n  }, []);\n  return {systems, isUpdating}\n}\n\nexport const useSubSystems = revID => {\n  const [subSys, setSubSys] = useState([]);\n\n  useEffect(() => {\n    SubSystemDB.addListener(revID, (v) => {\n      const subObj = v;\n      const compArr = idObjToArr(subObj);\n      compArr.sort((a,b) => (a.name>b.name ?  -1 :  1))\n      setSubSys(compArr);\n    })\n\n  }, [revID]);\n\n  // useEffect(() => {\n  //   return () => {\n  //     off(subRef);\n  //   }\n  // }, []);\n\n  return subSys\n}\n\nexport const useComponents = subSysID => {\n  const [comps, setComps] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  useEffect(() => {\n    setIsUpdating(true);\n    ComponentDB.addListener(subSysID, (v) => {\n      const compObj = v;\n      const compArr = idObjToArr(compObj);\n      setComps(compArr);\n      setIsUpdating(false);\n    })\n\n  }, [subSysID]);\n\n  // useEffect(() => {\n  //   return () => {\n  //     off(compRef);\n  //   }\n  // }, []);\n\n  return {comps, isUpdating}\n}\n\n\nexport const useCompItems = compID => {\n  const [compItems, setCompItems] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  useEffect(() => {\n    setIsUpdating(true);\n    ComponentItemDB.addListener(compID, (v) => {\n      const obj = v;\n      const arr = idObjToArr(obj);\n      setCompItems(arr);\n      setIsUpdating(false);\n    })\n\n  }, [compID]);\n\n  // useEffect(() => {\n  //   return () => {\n  //     off(compRef);\n  //   }\n  // }, []);\n\n  return {compItems, isUpdating}\n}\n\n\nexport const useModal = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onOpen = useCallback(() => setIsOpen(true), []);\n  const onClose = useCallback(() => setIsOpen(false), []);\n\n  return {isOpen, onOpen, onClose};\n}\n\n\nexport const useHardwareSerialNumber = (compItemID) => {\n  const [sn, setSN] = useState('');\n\n  useEffect(() => {\n    HardWareDataDB.onSpecificValue(compItemID, 'Serial Number', (d) => {\n      setSN(d);\n    })\n  }, [compItemID]);\n\n  return sn;\n}\n\n\n","import React from 'react';\nimport { Loader } from 'rsuite';\nimport { useRevisions } from '../../../../misc/customHooks';\nimport {Revision} from './Revision/Revision';\n\nconst RevList = ({sysID, onRevSelected, revSelectedID}) => {\n    const {revs, isUpdating} = useRevisions(sysID);\n\n    return (\n        <div className='rs-list rs-list-hover v-scroll' style={{marginLeft: '10%'}}>\n            {isUpdating ? <Loader style={{padding: '10px'}}/> : null}\n            {!isUpdating && revs ? revs.map(val => {\n                const {id, name, timestamp, revNumber} = val;\n                    return(\n                    <Revision \n                        onSelected={()=>onRevSelected(id)}\n                        name={name}\n                        timestamp={timestamp}\n                        revNumber={revNumber}\n                        key={id}\n                        isSelected={revSelectedID===id}\n                    />\n                )\n            }): null}\n            {!isUpdating && !revs.length ? <span className='muted-c' style={{padding: '5px 0', display: 'block'}}>Create a new revision to get started</span> : null}\n        </div>\n    );\n};\n\nexport default RevList;","import React, { useState } from 'react';\nimport {Row, Col, Grid, Button} from 'rsuite';\nimport ArrowRightIcon from '@rsuite/icons/ArrowRight';\nimport ArrowDownIcon from '@rsuite/icons/ArrowDown';\nimport { SystemOptions } from './SystemOptions';\nimport HoverShowAll from '../../misc/Helper Components/HoverShowAll';\nimport RevList from './Rev List/RevList';\n\nexport const System = ({sysID, title='Untitled', partNumber, sysNumber, technician, owner, onRevSelected, onNewRevision, isSelected, revSelectedID, onDeleteSystem}) => {\n    const [isExpanded, setIsExpanded] = useState(false);\n    title = title ==='' ? 'Untitled' : title;\n\n    const selStyle= isSelected ? {borderLeft: '1px solid lightgreen'} : null\n\n    const handleClick = () => {setIsExpanded(v => !v)}\n\n    const handleNewRev = () => {\n        onNewRevision();\n        if(!isExpanded){setIsExpanded(true)}\n    }\n\n    return (\n        <div className='rs-list rs-list-hover'>\n            <div type='button' tabIndex={0} role=\"button\" styling=\"link\" onClick={handleClick} onKeyDown={handleClick} className='rs-list-item pointer p-2' style={{...selStyle, width: '100%'}}>\n                <Grid fluid>\n                    <Row>\n                        <Col xs={2}>\n                            <Button style={{fontSize: '18px'}} appearance='subtle' size='xs'>\n                                {isExpanded ? <ArrowDownIcon/> : <ArrowRightIcon/>}\n                            </Button>\n                        </Col>\n                        <Col xs={8}>\n                            <HoverShowAll text={title}>\n                                <h5 className='ellip-overflow align-l'>{title}</h5>\n                            </HoverShowAll>\n                            <HoverShowAll text={partNumber}>\n                                <p className='muted-c ellip-overflow'>{partNumber}</p>\n                            </HoverShowAll>\n                        </Col>\n                        <Col xs={2}>\n                            <HoverShowAll text=\"System Number\">\n                                <p className='muted-c ellip-overflow'>{sysNumber}</p>\n                            </HoverShowAll>\n                        </Col>\n                        <Col xs={5}>\n                            <HoverShowAll text={`Technician: ${technician}`}>\n                                <p className='muted-c ellip-overflow'>{technician}</p>\n                            </HoverShowAll>\n                        </Col>\n                        <Col xs={5}>\n                            <HoverShowAll text={`Owner: ${owner}`}>\n                                <p className='muted-c ellip-overflow'>{owner}</p>\n                            </HoverShowAll>\n                        </Col>\n                        <Col xs={2}>\n                            <SystemOptions\n                                onNewRevision={()=>handleNewRev()}\n                                onDeleteSystem={onDeleteSystem}\n                            />\n                        </Col>\n                    </Row>\n                </Grid>         \n            </div>\n            {isExpanded ? <RevList revSelectedID={revSelectedID} onRevSelected={(id)=>onRevSelected(id)} sysID={sysID}/> : null}           \n        </div>\n    )\n}","import React, {useState} from 'react';\nimport { Button, Form, InputNumber, InputPicker, Modal, Input, Grid, Row, Col, ButtonToolbar, Schema} from 'rsuite';\nimport { SystemDB } from '../../../Database/SystemDB/SystemDB';\nimport Alert from '../../../misc/Alert';\nimport systemChoices from '../../../misc/SystemChoices/systemChoices.json';\n\n\nconst validationModel  = Schema.Model({\n    System: Schema.Types.NumberType().min(0, \"This value is required\")\n})\n\nconst NewSystemModal = () => {\n    const [selectedSystemIndex, setSelectedSystemIndex] = useState(null);\n    const [owner, setOwner] = useState('');\n    const [technician, setTechnician] = useState('');\n    const [utfNumber, setutfNumber] = useState(0);\n    const [show, setShow] = useState(false);\n\n    const clearInputs = () => {\n        setSelectedSystemIndex(null); setTechnician(''); setOwner(''); setutfNumber(0);\n    }\n\n    const onNewSystem = async () => {\n        if(selectedSystemIndex===null){return}\n        const sysParent = systemChoices.systems[selectedSystemIndex].data;\n        const {title, partNumber, sysNumber} = sysParent;\n        try{\n            await SystemDB.create(title, owner, technician, sysNumber, partNumber);\n            clearInputs();\n            setShow(false);\n            Alert.success(`New System ${title} Created`);\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    return (\n    <>\n        <Button color=\"blue\" appearance='primary' onClick={()=> setShow(true)} style={{marginBottom: '20px', display: 'block'}}>New System</Button>\n        <Modal size='xs' open={show} onClose={()=>setShow(false)}>\n            <Modal.Header><Modal.Title>New System</Modal.Title></Modal.Header>\n            <Modal.Body>\n                <Form fluid model={validationModel} onSubmit={()=> onNewSystem()}>\n                    <Form.Group controlId='System' style={{marginBottom: '10px'}}>\n                        <Form.ControlLabel>Title</Form.ControlLabel>\n                            <Form.Control\n                                value={selectedSystemIndex}\n                                onChange={(e) => {\n                                   setSelectedSystemIndex(e)\n                                }} \n                                size='lg' \n                                placeholder='LDL, HST, ...' \n                                accepter={InputPicker}\n                                data={systemChoices.systems}\n                                name='System'\n                            />\n                    </Form.Group>\n                    <Form.Group style={{marginBottom: '10px'}}>\n                        <Form.ControlLabel style={{fontSize: '14px'}}>UTF Number</Form.ControlLabel>\n                        <Form.Control name='UTF Number' value={utfNumber} onChange={(e) => setutfNumber(e)} size='xs' style={{width: '80px'}} placeholder={0} min={0} scrollable defaultValue={0} accepter={InputNumber} />\n                    </Form.Group>\n                    <Grid style={{padding: 0}} fluid>\n                        <Row>\n                            <Col xs={12}>\n                                <Form.Group>\n                                    <Form.ControlLabel style={{fontSize: '16px'}}>Technician</Form.ControlLabel>\n                                    <Form.Control name='technician' value={technician} onChange={(e) => setTechnician(e)} size='sm' accepter={Input} />\n                                </Form.Group>\n                            </Col>\n                            <Col xs={12}>\n                                <Form.Group>\n                                    <Form.ControlLabel style={{fontSize: '16px'}}>Owner</Form.ControlLabel>\n                                    <Form.Control name='owner' value={owner} onChange={(e) => setOwner(e)} size='sm' accepter={Input} />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                    </Grid>\n                    <Form.Group>\n                        <ButtonToolbar className='mt-3'>\n                            <Button type='submit' appearance='primary'>Create New System</Button>\n                            <Button onClick={()=>setShow(false)} appearance='subtle'>Cancel</Button>\n                        </ButtonToolbar>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n        </Modal>\n    </>\n    )\n}\n\nexport default NewSystemModal;","import React, {useState} from 'react';\nimport {Input, InputGroup, Loader, List} from 'rsuite';\nimport { Close } from '@rsuite/icons';\n\nimport {useMediaQuery, useSystems} from '../../misc/customHooks'\nimport { System } from './System/System';\nimport NewSystemModal from './SystemModal/NewSystemModal';\nimport { SystemDB } from '../../Database/SystemDB/SystemDB';\n\n\n// const selectedStyle = {\n//     borderLeft: '4px solid lightgreen',\n//     transition: '.1s'\n// }\n\nconst findSearchResults = (systems, searchText) => {\n    if(searchText===''){return systems}\n\n    const results = systems.filter(sys => {\n        const {title} = sys\n        if(!title){return false}\n        return title.toLowerCase().includes(searchText.toLowerCase())\n    })\n\n    return results;\n}\n\nconst SideBar = ({onNewRevision, onRevSelected, sysSelectedID, revSelectedID}) => {\n    const [searchText, setSearchText] = useState('');\n\n    const isDesktop = useMediaQuery('(min-width: 1200px)');\n    const {systems, isUpdating} = useSystems();\n\n    const searchResults =  findSearchResults(systems, searchText);\n\n    const onDeleteSystem = async id => {\n        await SystemDB.delete(id);\n    }\n \n   return (\n        <div className='br-r h-100 p-1' style={{}}>\n            <NewSystemModal/>\n            <InputGroup style={{width: '80%'}} className='mx-auto'>\n                <Input value={searchText} onChange={(e) => setSearchText(e)} placeholder='Search' size='md'/>\n                <InputGroup.Button onClick={()=>setSearchText('')}>\n                    <Close/>\n                </InputGroup.Button>\n            </InputGroup>\n\n            <div className='mt-2'>\n                <div><strong>{systems.length}</strong> Total Descriptions</div>\n                <span><strong>{searchResults.length}</strong> Descriptions Shown</span>\n            </div>\n            <hr style={{marginTop: '5px', marginBottom: '5px'}}/>\n            <div className='v-scroll' style={{height: isDesktop ? '66vh' : '20vh'}}>\n            {isUpdating ? <Loader/> : null}\n            <List hover autoScroll>\n                {searchResults.map(sys => {\n                    const {title, sysNumber, technician, owner, partNumber, id, revIDs} = sys;\n                    return <System\n                        title={title}\n                        owner={owner}\n                        technician={technician}\n                        sysNumber={sysNumber}\n                        partNumber={partNumber}\n                        revIDs={revIDs}\n                        key={id}\n                        sysID={id}\n                        isSelected={sysSelectedID===id}\n                        revSelectedID={revSelectedID}\n                        onNewRevision={()=>onNewRevision(id)}\n                        onDeleteSystem={()=>onDeleteSystem(id)}\n                        onRevSelected={(revID)=>onRevSelected(id, revID)}\n                    />\n                })}\n            </List>\n                {searchResults.length===0 && !isUpdating ? <span className='muted-c'>No Systems Were Found.</span> : null}\n            </div>\n        </div>\n    )\n\n}\nexport default SideBar;","import React from 'react';\nimport { useTheme } from '../../Contexts/theme.context';\n\n\nconst styles = {\n    height: '100vh'\n}\n\nconst MainStage = ({newStageComp, defaultComp, style}) => {\n    const isDark = (useTheme()) === \"dark\";\n    return (\n        <div style={{...styles, ...style, backgroundColor: isDark ? '#282828' : '#e6ebeb'}}>\n        {newStageComp}\n        {defaultComp}\n    </div>\n    )\n}\nexport default MainStage;","import React from 'react';\nimport MainStage from '../MainStage';\n\nconst DefaultMainStage = ({style}) => (\n        <MainStage\n            style={style}\n            defaultComp={\n                <h1 \n                    className='muted-c' \n                    style={{paddingTop: '10vh', fontSize: '2vw', textAlign: 'center'}}\n                >        \n                    Create a <strong>New Description</strong> or Edit a <strong >Previous Version</strong>\n                </h1>\n            }\n        />\n    );\n\nexport default DefaultMainStage;","import React, { createContext, useContext, useState} from 'react';\n\nconst ToolbarContext = createContext();\n\nexport const ToolBarProvider = ({children}) => {\n    const [isUpdating, setIsUpdating] = useState(false);\n\n    return <ToolbarContext.Provider value={{isUpdating, setIsUpdating}}>\n        {children}\n    </ToolbarContext.Provider>\n}\n\nexport const useToolBar = () => useContext(ToolbarContext);\n","import { get, ref, set } from \"firebase/database\";\n\nimport Alert from \"../../../../misc/Alert\";\nimport { database } from \"../../../../misc/firebase\";\n\n\n\nexport class NotesDB {\n    static read = async (revID) => {\n        try{\n            if(!revID){throw new Error('Missing parent ID')}\n\n            const db = ref(database, `Notes/${revID}`)\n\n            const data = await get(db);\n\n            return data.val();\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static update = async (revID, v) => {\n        try{\n            if(!revID){throw new Error('Missing parent ID')}\n\n            const db = ref(database, `Notes/${revID}`)\n\n            await set(db, v)\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Button, Drawer, Input } from 'rsuite';\nimport { useToolBar } from '../../../Contexts/toolbar.context';\nimport {NotesDB} from '../../../Database/SystemDB/RevisionDB/NotesDB/NotesDB';\n\nexport const NotesDrawer = ({isOpen,revID,onClose}) => {\n    const [isEnlarged, setIsEnlarged] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [value, setValue] = useState('');\n    \n    const {setIsUpdating}=useToolBar();\n\n    useEffect(()=> {\n        const getValue = async () => {\n            setValue('');\n            const v = await NotesDB.read(revID);\n            setValue(v);\n            setIsLoading(false);\n        }\n\n        getValue();\n    }, [revID]);\n\n    const handleUpdate = async (v) => {\n        setIsUpdating(true);\n        await NotesDB.update(revID, v);\n        setIsUpdating(false);\n    }\n\n\n    return (\n        <Drawer size={isEnlarged ? 'lg' : 'xs'} backdrop={false} placement='bottom' open={isOpen} onClose={onClose}>\n        <Drawer.Header>\n        <Drawer.Title>Notes</Drawer.Title>\n        <Drawer.Actions>\n            <Button onClick={()=>setIsEnlarged(v=>!v)}>Expand</Button>\n            <Button onClick={onClose} appearance=\"primary\">\n            Close\n            </Button>\n        </Drawer.Actions>\n        </Drawer.Header>\n        <Drawer.Body>\n            <Input as='textarea' value={value} disabled={isLoading} onChange={(v) => {setValue(v); handleUpdate(v)}} rows={isEnlarged ? 20 : 5} placeholder=\"Write any related notes here...\"/>\n        </Drawer.Body>\n    </Drawer>\n    )\n}\n\n","import { CheckRound, DoingRound } from '@rsuite/icons';\nimport React, { useEffect, useState } from 'react';\n\nlet to;\nconst SavedIndicator = ({isUpdating, persistFor=1000}) => {\n    const [delayedIsUpdating, setDelayedIsUpdating] = useState(false);    \n    useEffect(() => {\n        clearTimeout(to);\n        if(!isUpdating){\n            setDelayedIsUpdating(true);\n            to = setTimeout(() => {\n                setDelayedIsUpdating(false);\n            }, persistFor);\n        }\n    }, [isUpdating, persistFor])\n\n\n\n    return (\n        <>\n        {delayedIsUpdating ? <DoingRound pulse/> : <CheckRound style={{color: 'lightgreen'}}/>}\n        </>\n    );\n};\n\nexport default SavedIndicator;","import { ArrowDownLine } from '@rsuite/icons';\nimport React, {useState } from 'react';\nimport HoverShowAll from '../Helper Components/HoverShowAll';\n\n\nconst CustomPanel = ({defaultExpand=false, header, children}) => {\n    const [isExpanded, setIsExpanded] = useState(defaultExpand);\n\n    const handleClick = () => {setIsExpanded(v=>!v)}\n\n\n    return (\n        <div className='rs-panel rs-panel-in rs-panel-collapsible rs-panel-bordered rs-panel-shaded mb-1'>\n               <div type='button' tabIndex={0} role=\"button\" styling=\"link\" onKeyDown={handleClick} onClick={handleClick} className='rs-panel-header' style={{paddingBottom: '5px', paddingTop: '5px'}}>\n                        <ArrowDownLine flip={isExpanded ? 'vertical' : null} className='rs-icon' style={{top: '10px'}}/>\n                        <HoverShowAll text={header}>\n                            <h5 style={{width: '90%'}} className='rs-panel-title ellip-overflow'>{header}</h5>\n                        </HoverShowAll>\n                        \n                </div>\n                    {isExpanded ?  \n                        <div className='rs-anim-collapse rs-anim-in rs-panel-collapse' style={{height: 'auto'}}>\n                            <div className='rs-panel-body'>\n                                {children}\n                            </div>\n                        </div> \n                    : null}\n        </div>\n    );\n};\n\nexport default CustomPanel;","import React from 'react';\nimport {Grid, Row, Col} from 'rsuite';\n\nexport const GridHeader = ({dataChildren, actionChildren}) => {\n    return (\n        <Grid fluid> \n            <Row>\n                <Col xs={18}>\n                    <div style={{textAlign: 'left', fontSize: '12px', marginTop: '3px'}} className='muted-c'>\n                        {dataChildren}\n                    </div>\n                </Col>\n                <Col xs={6}>\n                    <div style={{textAlign: 'right'}}>\n                        {actionChildren}\n                    </div>\n                </Col>\n            </Row>\n        </Grid>\n    )\n}\n","import React, { useRef } from 'react'\nimport { Button, Dropdown, Popover, Whisper } from 'rsuite';\nimport MoreIcon from '@rsuite/icons/More';\n\n\nconst OptionsPopOver = React.forwardRef(({ handleSelect, ...rest }, ref) => (\n    <Popover ref={ref} {...rest} full>\n      <Dropdown.Menu onSelect={(n, e)=>{handleSelect(n); e.stopPropagation()}}>\n        <Dropdown.Item eventKey={-1} className='muted-c'>Track</Dropdown.Item> \n        <Dropdown.Item eventKey={2}>Delete</Dropdown.Item>\n      </Dropdown.Menu>\n    </Popover>\n));\n\n\n\nexport const CompItemOptions = ({onTrack, onDelete}) => {\n  const ref = useRef();\n  const handleSelect = n => {\n    if(n===1){\n        onTrack();\n    }else if(n===2){\n        onDelete();\n    }\n\n    ref.current.close();\n  }\n  return (\n    <Whisper\n        placement=\"rightStart\"\n        controlId=\"control-id-with-dropdown\"\n        trigger=\"click\"\n        ref={ref}\n        onClick={(e)=>e.stopPropagation()}\n        speaker={<OptionsPopOver handleSelect={e=>handleSelect(e)}/>}                              \n    >\n      <Button appearance='subtle' size='xs'><MoreIcon/></Button>\n    </Whisper>\n  )\n}\n","import React from 'react';\nimport { DatePicker } from 'rsuite';\n\nconst MyDateInput = ({value, onChange, size='md', style, disabled}) => {\n    const date =  Number.isNaN(Date.parse(value)) ? new Date() : new Date(value);\n\n    const handleChange = val => {\n       const d = new Date(val);\n        onChange(d.toDateString());\n    }\n\n    return (\n        <DatePicker cleanable={false} size={size} onChange={handleChange} style={{...style, display: 'block'}} disabled={disabled} value={date}/>\n    );\n};\n\nexport default MyDateInput;","import React from 'react';\nimport { InputNumber } from 'rsuite';\n\n\nconst width = {\n    xs: '15px',\n    sm: '70px',\n    md: '150px',\n    lg: '100%'\n}\n\nconst getWidth = str => {\n    if(!width[str]){return width.md}\n    return width[str];\n}\n\nconst MyNumberInput = ({value, onChange, size='md', style, disabled, min=0}) => {\n    const width = getWidth(size);\n    return (\n        <InputNumber min={min} disabled={disabled} value={value} onChange={onChange} size={size} style={{width, ...style}}/>\n    );\n};\n\nexport default MyNumberInput;","import React, { useEffect, useState } from 'react';\nimport { Input } from 'rsuite';\nimport { useToolBar } from '../../../../../../../Contexts/toolbar.context';\nimport { HardWareDataDB } from '../../../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/HarwareDataDB';\nimport MyDateInput from '../../../../../../Custom Inputs/MyDateInput';\nimport MyNumberInput from '../../../../../../Custom Inputs/MyNumberInput';\n\nconst inputs = {\n    Text: Input,\n    Number: MyNumberInput,\n    Date: MyDateInput\n}\n\nconst getInput = str => {\n    if(!inputs[str]){return inputs.Text}\n    return inputs[str]\n}\n\nconst HardInput = ({title, itemID, inputType='Text'}) => {\n    const MyInput = getInput(inputType);\n    const [value, setValue] = useState('');\n    const [disabled, setDisabled] = useState(false);\n    const {setIsUpdating} = useToolBar();\n\n    useEffect(() => {\n        const getInitVal = async () => {\n            setDisabled(true);\n            const data = await HardWareDataDB.readSpecific(itemID, title);\n            if(data){setValue(data.value || '')}\n            setDisabled(false)\n        }\n        getInitVal();\n    }, [itemID, title]);\n\n    const handleChange = async val => {\n        setValue(val);\n        setIsUpdating(true);\n        await HardWareDataDB.update(itemID, title, val);\n        setIsUpdating(false);\n    }\n    \n    return (\n        <div>\n            <label style={{fontSize: '14px'}} htmlFor={title}>{title}</label>\n            <MyInput size='sm' disabled={disabled} onChange={(v)=>handleChange(v)} value={value}/>\n        </div>\n    );\n};\n\nexport default HardInput;","import React, { useEffect, useState } from 'react';\nimport { Input } from 'rsuite';\nimport { useToolBar } from '../../../../../../../Contexts/toolbar.context';\nimport { SoftWareDataDB } from '../../../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/SoftwareDataDB';\nimport MyDateInput from '../../../../../../Custom Inputs/MyDateInput';\nimport MyNumberInput from '../../../../../../Custom Inputs/MyNumberInput';\n\nconst inputs = {\n    Text: Input,\n    Number: MyNumberInput,\n    Date: MyDateInput\n}\n\nconst getInput = str => {\n    if(!inputs[str]){return inputs.Text}\n    return inputs[str]\n}\n\nconst SoftInput = ({title, itemID, inputType='Text'}) => {\n    const MyInput = getInput(inputType);\n    const [value, setValue] = useState('');\n    const [disabled, setDisabled] = useState(false);\n    const {setIsUpdating} = useToolBar();\n\n    useEffect(() => {\n        const getInitVal = async () => {\n            setDisabled(true);\n            const data = await SoftWareDataDB.readSpecific(itemID, title);\n            if(data){setValue(data.value || '')}\n            setDisabled(false)\n        }\n        getInitVal();\n    }, [itemID, title]);\n\n    const handleChange = async val => {\n        setValue(val);\n        setIsUpdating(true);\n        await SoftWareDataDB.update(itemID, title, val);\n        setIsUpdating(false);\n    }\n    \n    return (\n        <div>\n            <label style={{fontSize: '14px'}} htmlFor={title}>{title}</label>\n            <MyInput size='sm' disabled={disabled} onChange={(v)=>handleChange(v)} value={value}/>\n        </div>\n    );\n};\n\nexport default SoftInput;","import React from 'react';\nimport {Col, Grid, Row } from 'rsuite';\nimport { useToolBar } from '../../../../../../Contexts/toolbar.context';\nimport { ComponentItemDB } from '../../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/ComponentItemDB';\nimport Alert from '../../../../../../misc/Alert';\nimport CustomPanel from '../../../../../misc/Custom Panel/CustomPanel';\nimport { GridHeader } from '../../../../../misc/Custom Panel/GridHeader';\nimport { dispTime } from '../../../../../../misc/helperfunc';\nimport { CompItemOptions } from './CompItemOptions';\nimport HardInput from './Local Inputs/HardInput';\nimport SoftInput from './Local Inputs/SoftInput';\nimport { useHardwareSerialNumber } from '../../../../../../misc/customHooks';\n\nconst CompItem = ({birthdate, format, itemID, parentID}) => {\n    const {setIsUpdating} = useToolBar();    \n    const dispSoftwareData = () => {\n        if(!format || !format.Software){return null}\n        \n        const dataTitles = Object.keys(format.Software);\n        return dataTitles.map((title, i) => {\n            return (\n                <Col key={i} md={24} lg={12}>\n                    <SoftInput title={title} key={i} itemID={itemID} inputType={format.Software[title].input}/>\n                </Col>\n            )\n        })\n    }\n\n    const dispHardwareData = () => {\n        if(!format || !format.Hardware){return null}\n        \n        const dataTitles = Object.keys(format.Hardware);\n        return dataTitles.map((title, i) => {\n            return (\n                <Col key={i} md={24} lg={12}>\n                    <HardInput title={title} key={i} itemID={itemID} inputType={format.Hardware[title].input}/>\n                </Col>\n            )\n        })\n    }\n\n\n    const softInputs = dispSoftwareData();\n    const hardInputs = dispHardwareData();\n\n\n    const handleDelete = async () => {\n        try{\n            setIsUpdating(true);\n            await ComponentItemDB.deleteSpecific(parentID, itemID);\n            Alert.success(`Successfully deleted component item`)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n    const snObj = useHardwareSerialNumber(itemID);\n\n    return (\n        <CustomPanel defaultExpand={false} header={`SN: ${snObj ? snObj.value : 'not set'}`}>\n            <GridHeader\n                dataChildren={<span>{dispTime(birthdate)}</span>}\n                actionChildren={\n                    <CompItemOptions onDelete={handleDelete}/>\n                }\n            />\n            \n                <Grid fluid>\n                    <Row>\n                        {softInputs ? <h5 className='mb-2' style={{fontSize: '14px', borderBottom: '1px solid', fontWeight: '400'}}>Software</h5> : null}\n                        {softInputs}\n                    </Row>\n                    <Row>\n                        {hardInputs ? <h5 className='mb-2 mt-2' style={{fontSize: '14px', borderBottom: '1px solid', fontWeight: '400'}}>Hardware</h5> : null}\n                        {hardInputs}\n                    </Row>\n                </Grid>\n                \n        </CustomPanel>\n    );\n};\n\nexport default CompItem;","import React from 'react';\nimport { Button, Modal } from 'rsuite';\n\nconst CompDeleteModal = ({show, onClose, onDelete, name}) => {\n    return (\n        <Modal open={show} onClose={onClose}>\n            <Modal.Header>\n                <Modal.Title>\n                    Are you sure ?\n                </Modal.Title>\n                <Modal.Body>\n                    <p>\n                        Are you sure you want to delete the <strong>{name}</strong> component?\n                    </p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button color='red' appearance='primary' onClick={onDelete}>Yes</Button>\n                    <Button appearance='subtle' onClick={onClose}>No</Button>\n                </Modal.Footer>\n            </Modal.Header>\n        </Modal>\n    );\n};\n\nexport default CompDeleteModal;","import React, { useState } from 'react';\nimport { Button, Loader } from 'rsuite';\nimport { useToolBar } from '../../../../../Contexts/toolbar.context';\nimport { ComponentItemDB } from '../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/ComponentItemDB';\nimport Alert from '../../../../../misc/Alert';\nimport CustomPanel from '../../../../misc/Custom Panel/CustomPanel';\nimport { GridHeader } from '../../../../misc/Custom Panel/GridHeader';\nimport { useCompItems } from '../../../../../misc/customHooks';\nimport { dispTime } from '../../../../../misc/helperfunc';\nimport CompItem from './CompItem/CompItem';\nimport CompDeleteModal from '../ComponentStatus/misc/CompDeleteModal';\nimport { ComponentDB } from '../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB';\n\nconst Comp = ({name, birthdate, compID, subSysID, format}) => {\n    const [show, setShow] = useState(false);\n    const {compItems, isUpdating} = useCompItems(compID);\n    const {setIsUpdating} = useToolBar();\n\n    const showCompItems = () => {\n        if(isUpdating){return <Loader/>}\n        if(!compItems.length){return \"Add new items\"}\n\n        return compItems.map((v, i) => {\n            const {id, birthdate} = v;\n            return <CompItem birthdate={birthdate} parentID={compID} itemID={id} key={id} name={i+1} format={format}/>\n        })\n    }\n\n    const newCompItem = async () => {\n        setIsUpdating(true);\n        try{\n            await ComponentItemDB.create(compID);\n            Alert.success('Successfully created new component item')\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n\n    const handleDelete = async () => {\n        setIsUpdating(true); \n        try{\n            await ComponentDB.deleteSpecific(subSysID, compID);\n            Alert.success(`Successfully deleted ${name}`)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false)\n    }\n\n\n    return (\n        <CustomPanel defaultExpand header={name}>\n            <GridHeader\n                dataChildren={\n                    <div>\n                        <div>{compItems ? compItems.length : 0} items</div>\n                        <span>{dispTime(birthdate)}</span>\n                    </div>\n            }\n                actionChildren={\n                    <div>\n                        <Button style={{marginBottom: '5px'}}  size='xs' color='blue' appearance='ghost' onClick={newCompItem}>Add</Button>\n                        <Button  size='xs' color='red' appearance='ghost' onClick={()=>setShow(true)}>Remove All</Button>\n                        <CompDeleteModal show={show} onClose={()=>setShow(false)} onDelete={handleDelete} name={name}/>\n                    </div>\n                \n                }\n            />\n            <hr style={{marginTop: '5px'}}/>\n            {showCompItems()}\n        </CustomPanel>\n    );\n};\n\nexport default Comp;","import React, { useState } from 'react';\nimport { Button } from 'rsuite';\nimport { useToolBar } from '../../../../../../Contexts/toolbar.context';\nimport { ComponentDB } from '../../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB';\nimport Alert from '../../../../../../misc/Alert';\nimport HoverShowAll from '../../../../../misc/Helper Components/HoverShowAll';\nimport CompDeleteModal from './CompDeleteModal';\n\nconst ActiveComp = ({name, id, subSysID, style}) => {\n    const [showModal, setShowModal] = useState(false);\n    const {setIsUpdating} = useToolBar();\n\n    const handleDelete = async () => {\n        setIsUpdating(true);\n        setShowModal(false);\n        try{\n            await ComponentDB.deleteSpecific(subSysID, id);\n            Alert.success(`Successfully deleted ${name}`)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false)\n    }\n\n     return (\n        <>\n\n            <Button style={style} color='green' appearance='primary' size='xs' onClick={()=>setShowModal(true)}>\n                <HoverShowAll text={name}>\n                    <span className='ellip-overflow'>\n                        - {name} \n                    </span>\n                </HoverShowAll>\n            </Button>\n            <CompDeleteModal show={showModal} name={name} id={id} onClose={()=>setShowModal(false)} onDelete={handleDelete}/>\n        </>\n    );\n};\n\nexport default ActiveComp;","import React from 'react';\nimport { Button, Grid, Row, Col } from 'rsuite';\nimport { useToolBar } from '../../../../../Contexts/toolbar.context';\nimport { ComponentDB } from '../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB';\nimport Alert from '../../../../../misc/Alert';\nimport HoverShowAll from '../../../../misc/Helper Components/HoverShowAll';\nimport ActiveComp from './misc/ActiveComp';\n\nconst ComponentStatus = ({subSysID, activeComps, possibleComps})  => {\n    const {setIsUpdating} = useToolBar();\n\n    const handleCreate = async name => {\n        setIsUpdating(true);\n        try{\n            await ComponentDB.create(subSysID, name);\n            Alert.success(`New ${name} component created`);\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n    const dispActiveComps = () => {\n        return  activeComps.map(v => {\n            const {name, id} =v;\n            return (\n                <Col xs={12} md={8} lg={4} key={id}>\n                    <ActiveComp style={{marginBottom: '5px'}} key={id} subSysID={subSysID} id={id} name={name}/>\n                </Col>)\n        })\n    }\n\n    const dispDisabledComps = () => {\n        return possibleComps.map(name => {\n            //  if component already exists in DB\n            if(activeComps.find(ac => ac.name===name)){return null}\n\n            return (\n                <Col key={name} xs={12} md={8} lg={4}> \n                    <Button size='xs' className='mr-2 mb-1' style={{marginBottom: '5px'}} onClick={()=>handleCreate(name)}>\n                    <HoverShowAll text={name}>\n                        <span className='ellip-overflow'>\n                            + {name} \n                        </span>\n                    </HoverShowAll>\n                    </Button>\n                </Col>)\n        })\n    }\n\n    return (\n        <div>\n            <Grid fluid>\n                <Row>\n                    <h5 style={{fontSize: '14px'}}>Active</h5>\n                    {dispActiveComps()}\n                </Row>\n                <Row>\n                    <h5 style={{fontSize: '14px'}}>Disabled</h5>\n                    {dispDisabledComps()}\n                </Row>\n            </Grid>\n        </div>\n    );\n};\n\nexport default ComponentStatus;","import React from 'react';\nimport {Grid, Loader, Row, Col } from 'rsuite';\nimport { useComponents } from '../../../../misc/customHooks';\nimport Comp from './Comp/Comp';\nimport ComponentStatus from './ComponentStatus/ComponentStatus';\nimport dataFormat from '../../../../misc/dataFormat.json';\n\nconst ComponentHandler = ({subSysID, dataKey}) => {\n    const {comps, isUpdating} = useComponents(subSysID);\n    const possibleComps = dataFormat[dataKey];\n\n    if(!possibleComps){return \"Data is not specified for this subsystem\"}\n\n    if(isUpdating){return <Loader/>}\n\n    return (\n        <div style={{padding: '5px 15px'}}>\n            <ComponentStatus activeComps={comps} subSysID={subSysID} possibleComps={Object.keys(possibleComps)}/>\n            <hr/>\n            <div style={{height: '500px', overflowY: 'scroll'}}>\n                <Grid fluid>\n                    <Row>\n                        {comps.map(v=> {\n                            const {name, birthdate, id} = v;\n                            return (\n                                <Col xs={24} md={12} lg={8} key={id}>\n                                    <Comp\n                                        name={name}\n                                        birthdate={birthdate}\n                                        key={id}\n                                        compID={id}\n                                        format={possibleComps[name]}\n                                        subSysID={subSysID}\n                                    />\n                                </Col>\n                            )\n                        })}\n                    </Row>\n                </Grid>\n            </div>\n        </div>\n    );\n};\n\nexport default ComponentHandler;","import React, { useEffect, useState } from 'react';\nimport { Nav } from 'rsuite';\nimport CloseIcon from '@rsuite/icons/Close';\nimport { SubSystemDB } from '../../../Database/SystemDB/RevisionDB/SubSystemDB/SubSystemDB';\nimport ComponentHandler from './ComponentHandler/ComponentHandler';\nimport Alert from '../../../misc/Alert';\nimport { useToolBar } from '../../../Contexts/toolbar.context';\n\nconst SubSystemNav = ({subSystems=[], revID}) => {\n    const {setIsUpdating} = useToolBar();\n    const [selI, setSelI] = useState(null);\n\n    useEffect(() => {\n        if(subSystems.length>0){\n            setSelI(0);\n        }else{\n            setSelI(null);\n        }\n    }, [revID, subSystems.length]);\n\n    const handleDelete = async (id, name) => {\n        setIsUpdating(true);\n        try{\n            await SubSystemDB.deleteSpecific(revID, id);\n\n\n            if(selI-1 >=0){\n                setSelI(i=>i-1);\n            }else{\n                setSelI(null);\n            }\n\n\n            Alert.success(`Deleted subsystem ${name}`)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n    const createSubSystemNavs = () => (\n        subSystems.map((subSys, i) => {\n            const {name, id} = subSys;\n            const isActive = i===selI;\n            const btnColor = isActive ? 'red' : null;\n            return (\n                <Nav.Item \n                    onClick={()=>setSelI(i)} \n                    key={id} \n                    active={isActive}\n                >\n                    {name}\n                    <button \n                        style={{background: 'transparent', color: btnColor, fontSize: '12px', position: 'relative', top:'-2px', left: '3px'}} \n                        type='button'\n                        onClick={(e) => {e.stopPropagation(); handleDelete(id, name)}}\n                        disabled={!isActive}\n                    > \n                        <CloseIcon/> \n                    </button>\n                </Nav.Item>\n            )\n        })\n    )\n\n    return (\n        <div>\n            <Nav appearance=\"tabs\">\n                {createSubSystemNavs()}\n            </Nav>\n            {selI!==null && subSystems.length>0 && subSystems[selI] ? \n                <ComponentHandler subSysID={subSystems[selI].id} dataKey={subSystems[selI].name}/>\n            :\n                <div className='muted-c mx-auto w-100'>\n                    Select a subsystem to begin editing.\n                </div>    \n            }\n        </div>\n    );\n};\n\nexport default SubSystemNav;","import React from 'react';\nimport { Button } from 'rsuite';\nimport { useToolBar } from '../../../Contexts/toolbar.context';\nimport { SubSystemDB } from '../../../Database/SystemDB/RevisionDB/SubSystemDB/SubSystemDB';\nimport Alert from '../../../misc/Alert';\n\nconst possSubs = {\n    general: 'General',\n    atc: 'ATC',\n    acses: 'ACSES'\n}\n\n\nconst SubSystems = ({subSystems, revID}) => {\n    const {setIsUpdating} = useToolBar();\n    \n    const handleAdd = async name => {\n        setIsUpdating(true);\n        try{\n            await SubSystemDB.create(revID, name);\n            Alert.success(`Created new subsystem ${name}`)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n    const hasATC = subSystems.find(v => v.name===possSubs.atc)\n    const hasACSES = subSystems.find(v => v.name===possSubs.acses)\n    const hasGeneral = subSystems.find(v => v.name===possSubs.general)\n    return (\n       <div style={{marginTop: '15px'}}>\n            {hasGeneral ? null : <Button onClick={()=>handleAdd(possSubs.general)} appearance='ghost' size='xs' style={{display: 'block', marginBottom: '5px'}}>+ General</Button> }\n            {hasATC ? null : <Button onClick={()=>handleAdd(possSubs.atc)} appearance='ghost' size='xs' style={{display: 'block', marginBottom: '5px'}}>+ ATC</Button> }\n            {hasACSES ? null : <Button onClick={()=>handleAdd(possSubs.acses)} appearance='ghost' size='xs'>+ ACSES</Button> }\n       </div>\n    );\n};\n\nexport default SubSystems;","import React, { useEffect, useState } from 'react'\nimport { Input } from 'rsuite'\nimport { useToolBar } from '../../../Contexts/toolbar.context'\nimport { RevisionDB } from '../../../Database/SystemDB/RevisionDB/RevisionDB'\nimport Alert from '../../../misc/Alert'\nimport MyNumberInput from '../../Custom Inputs/MyNumberInput'\n\nexport const TitleBar = ({sysID, revID}) => {\n    const {setIsUpdating} = useToolBar();\n    const [isDisabled, setIsDisabled] = useState(false);\n    const [name, setName] = useState('');\n    const [revNum, setRevNum] = useState(0);\n\n\n    useEffect(() => {\n        const loadRev = async () => {\n            setIsDisabled(true);\n            try{\n                const {name, revNumber} =  await RevisionDB.readSpecific(sysID, revID);\n                setName(name || '');\n                setRevNum(revNumber || 0);\n            }catch(err){\n                Alert.error(err.message);\n            }\n            setIsDisabled(false);\n        }\n\n        loadRev();\n\n    }, [revID, sysID])\n\n    const handleUpdate = async (key, val) => {\n        setIsUpdating(true);\n        try{\n            await RevisionDB.updateByKey(sysID, revID, key, val)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n\n    return (\n        <>\n            <div>\n                <Input value={name} disabled={isDisabled} size='lg' onChange={(v) => {handleUpdate('name', v); setName(v)}} style={{textAlign: 'center', fontSize: '24px'}} placeholder='Revision Name'/>\n            </div>\n            <div >\n                <label style={{fontSize: '14px'}} htmlFor='rev'>Rev. Number</label>\n                <MyNumberInput value={revNum} disabled={isDisabled} onChange={(v) => {handleUpdate('revNumber', v); setRevNum(v)}} size='sm'/>\n            </div>\n        </>\n    )\n}\n","import { faRedo, faUndo } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Button, ButtonGroup, ButtonToolbar } from 'rsuite';\nimport { useToolBar } from '../../../Contexts/toolbar.context';\nimport SavedIndicator from './SavedIndicator';\n\n\n\nconst ToolBar = () => {\n    const {isUpdating} = useToolBar();\n    return (\n        <div>\n            <ButtonToolbar style={{display: 'inline'}}>\n                <ButtonGroup>\n                    <Button size='xs' appearance='subtle'><FontAwesomeIcon icon={faUndo}/></Button>\n                    <Button size='xs' appearance='subtle'><FontAwesomeIcon icon={faRedo}/></Button>\n                </ButtonGroup>\n            </ButtonToolbar>\n            <span style={{marginRight: '5px', marginLeft: '5px', borderRight: '1px solid white'}}/>\n            <SavedIndicator isUpdating={isUpdating}/>\n        </div>\n    );\n};\n\nexport default ToolBar;","import React from 'react';\nimport {Button, Grid, Row, Col } from 'rsuite';\n\nimport MainStage from '../MainStage';\nimport { generateDocument } from '../../../misc/helperfunc';\nimport {useModal, useSubSystems} from '../../../misc/customHooks';\nimport { NotesDrawer } from '../misc/NotesDrawer';\nimport SubSystemNav from '../SubSystem/SubSystemNav';\nimport SubSystems from '../SubSystem/SubSystems';\nimport { ToolBarProvider } from '../../../Contexts/toolbar.context';\nimport { TitleBar } from '../misc/TitleBar';\nimport ToolBar from '../misc/ToolBar';\n\n\n\nconst NewMainStage = ({sysID, revID, style}) => {\n    const subSystems = useSubSystems(revID);\n\n    const {isOpen, onOpen, onClose} = useModal();\n\n    return (\n        <MainStage\n            style={style}\n            newStageComp={\n                <>\n                    <ToolBarProvider>\n                        <div className='p-1 w-100 mb-1'>\n                            <Grid fluid>\n                                <Row>\n                                    <Col xs={8}>\n                                        <Button style={{marginRight: '10px'}} onClick={()=>generateDocument(sysID, revID)} color='green' appearance=\"primary\">Generate File</Button>\n                                        <Button appearance='subtle' onClick={onOpen}>Notes</Button>\n                                        <SubSystems subSystems={subSystems} revID={revID}/>\n                                    </Col>\n                                    <Col xs={8}>\n                                        <TitleBar revID={revID} sysID={sysID}/> \n                                    </Col>\n                                    <Col xs={8}>\n                                        <div style={{float: 'right'}}>\n                                            <ToolBar/>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Grid>\n                        </div>\n                        <SubSystemNav subSystems={subSystems} revID={revID}/>\n                        <NotesDrawer \n                            isOpen={isOpen} \n                            onClose={onClose} \n                            revID={revID}\n                        />\n                    </ToolBarProvider>\n                </>\n            }\n        />\n    );\n};\n\nexport default NewMainStage;","import React, {useState} from 'react';\nimport { Grid, Row, Col} from \"rsuite\";\n\nimport { ThemeProvider } from '../../Contexts/theme.context';\nimport { RevisionDB } from '../../Database/SystemDB/RevisionDB/RevisionDB';\nimport HeaderBar from '../misc/HeaderBar';\nimport SideBar from '../SideBar/SideBar';\nimport DefaultMainStage from '../MainStage/Extensions/DefaultMainStage';\nimport NewMainStage from '../MainStage/Extensions/NewMainStage';\nimport MyFooter from '../misc/Footer';\n\nexport default function Main() {\n    const [theme, setTheme] = useState('dark')\n    const [revID, setRevID] = useState(null);\n    const [sysID, setSysID] = useState(null);\n  \n    const onNewRevision = async (sysID) => {\n      const revID = await RevisionDB.create(sysID);\n      setSysID(sysID);\n      setRevID(revID);\n    }\n    \n    return (\n        <ThemeProvider theme={theme}>\n            <div>\n                <HeaderBar setTheme={(t) => setTheme(t)}/>\n                <Grid fluid  style={{padding:0}}>\n                    <Row >\n                    <Col xs={24} lg={7} >\n                        <SideBar \n                        revSelectedID={revID}\n                        sysSelectedID={sysID}\n                        onNewRevision={(sysID)=>onNewRevision(sysID)}\n                        onRevSelected={(sysID, revID)=> {setSysID(sysID); setRevID(revID); }}\n                        />\n                    </Col>\n                    <Col xs={24} lg={17} >\n                        {revID && sysID ? <NewMainStage revID={revID} sysID={sysID}/> : <DefaultMainStage/>}\n                    </Col>\n                    </Row>\n                </Grid>\n                <MyFooter style={{width: '100%'}}/>\n            </div>\n        </ThemeProvider>\n    )\n}\n","import React from 'react'\nimport { Navigate, Outlet } from 'react-router';\nimport { useUser } from '../Contexts/user.context';\n\nconst PublicRoute = () => {\n    const {user, isLoading} = useUser();\n\n    return user && !isLoading ? <Navigate to=\"/\"/> : <Outlet/>;\n}\n\nexport default PublicRoute;","import React from 'react';\nimport { Routes, Route, BrowserRouter} from 'react-router-dom';\n\n\nimport './styles/main.scss';\nimport './styles/utility.scss';\nimport 'rsuite/dist/rsuite.min.css';\n\nimport PrivateRoute from './misc/PrivateRoute';\nimport Landing from './Components/Pages/Landing';\nimport Main from './Components/Pages/Main';\nimport { UserProvider } from './Contexts/user.context';\nimport PublicRoute from './misc/PublicRoute';\n\nfunction App() {  \n  return (\n    <UserProvider>\n      <BrowserRouter>\n        <Routes>\n          <Route exact path='/' element={<PrivateRoute/>}>\n            <Route exact path='/' element={<Main/>}/>\n          </Route>\n          <Route exact path='/signin' element={<PublicRoute/>}>\n            <Route exact path='/signin' element={<Landing/>}/>\n          </Route>\n        </Routes>\n      </BrowserRouter>\n  </UserProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}