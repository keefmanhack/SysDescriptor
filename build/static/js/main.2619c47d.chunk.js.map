{"version":3,"sources":["misc/firebase.js","Contexts/user.context.js","misc/PrivateRoute.js","misc/Alert.js","Database/ProfileDB.js","images/landing-train.jpg","Database/DBHelper.js","Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/index.js","Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/HarwareDataDB.js","Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/SoftwareDataDB.js","Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/ComponentItemDB.js","Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB.js","Database/SystemDB/RevisionDB/SubSystemDB/SubSystemDB.js","Database/SystemDB/RevisionDB/RevisionDB.js","Database/SystemDB/SystemDB.js","misc/helperfunc.js","misc/customHooks.js","Components/misc/Footer.js","Components/Pages/SignInModal.js","Components/Pages/Landing.js","Contexts/theme.context.js","Components/misc/Helper Components/ButtonToggle.js","Components/misc/HeaderBar.js","Components/SideBar/System/SystemOptions.js","Components/misc/Helper Components/HoverShowAll.js","Components/SideBar/System/Rev List/Revision/Revision.js","Components/SideBar/System/Rev List/RevList.js","Components/SideBar/System/System.js","Components/SideBar/SystemModal/NewSystemModal.js","Components/SideBar/SideBar.js","Components/MainStage/MainStage.js","Components/MainStage/Extensions/DefaultMainStage.js","Contexts/toolbar.context.js","Database/SystemDB/RevisionDB/NotesDB/NotesDB.js","Components/MainStage/misc/NotesDrawer.js","Components/MainStage/misc/SavedIndicator.js","Components/misc/Custom Panel/CustomPanel.js","Components/misc/Custom Panel/GridHeader.js","Components/MainStage/SubSystem/ComponentHandler/Comp/CompItem/CompItemOptions.js","Components/Custom Inputs/MyDateInput.js","Components/Custom Inputs/MyNumberInput.js","Components/MainStage/SubSystem/ComponentHandler/Comp/CompItem/Local Inputs/HardInput.js","Components/MainStage/SubSystem/ComponentHandler/Comp/CompItem/Local Inputs/SoftInput.js","Components/MainStage/SubSystem/ComponentHandler/Comp/CompItem/CompItem.js","Components/MainStage/SubSystem/ComponentHandler/Comp/Comp.js","Components/MainStage/SubSystem/ComponentHandler/ComponentStatus/misc/CompDeleteModal.js","Components/MainStage/SubSystem/ComponentHandler/ComponentStatus/misc/ActiveComp.js","Components/MainStage/SubSystem/ComponentHandler/ComponentStatus/ComponentStatus.js","Components/MainStage/SubSystem/ComponentHandler/ComponentHandler.js","Components/MainStage/SubSystem/SubSystemNav.js","Components/MainStage/SubSystem/SubSystems.js","Components/MainStage/misc/TitleBar.js","Components/MainStage/misc/ToolBar.js","Components/MainStage/Extensions/NewMainStage.js","Components/Pages/Main.js","misc/PublicRoute.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","getDatabase","auth","getAuth","UserContext","createContext","UserProvider","children","useState","user","setUser","isLoading","setIsLoading","useEffect","onAuthStateChanged","p","Provider","value","useUser","useContext","PrivateRoute","to","PLACEMENT","type","Alert","duration","success","msg","toaster","push","Notification","header","closable","placement","warning","info","error","ProfileDB","read","uid","a","Error","db","ref","get","data","val","message","create","firstName","lastName","email","payLoad","birthdate","firebase","ServerValue","TIMESTAMP","set","key","DBHelper","DBPARENT","id","name","onValue","cb","snap","err","DataDB","componentID","readSpecific","title","update","lastUpdated","delete","HardWareDataDB","SoftWareDataDB","ComponentItemDB","NoIDErr","compID","addListener","componentIDs","compIDsArr","Object","keys","i","length","deleteSpecific","compItemID","ComponentDB","subSysID","compItemIDs","compItemIDsArr","SubSystemDB","revID","subSysIDs","subSysIDsArr","RevisionDB","readAll","sysID","revNumber","birthday","updateByKey","deleteAll","revIDs","revIDsArr","SystemDB","owner","technician","sysNumber","partNumber","updates","dispTime","d","Number","isNaN","Date","toDateString","idObjToArr","obj","map","saveDocumentToFile","doc","fileName","Packer","toBlob","then","blob","saveAs","convertSize","x","dispHardSoftData","hardData","softData","loopLen","returnVar","TableRow","TableCell","Paragraph","TextRun","style","dispComponentItemData","compItems","returnvar","item","Table","rows","dispComponenetData","comps","comp","text","heading","HeadingLevel","HEADING_3","dispSubSystemData","subSys","components","HEADING_2","generateDocument","SYSID","REVID","date","system","revision","subsystems","Document","default","heading1","run","size","bold","color","paragraph","spacing","after","heading2","underline","UnderlineType","SINGLE","heading3","listParagraph","paragraphStyles","basedOn","next","quickFormat","before","HEADING_1","toLocaleTimeString","properties","styles","sections","useWindowHeight","window","innerHeight","windowHeight","setWindowHeight","handleResize","addEventListener","removeEventListener","MyFooter","Footer","clear","position","bottom","width","padding","zIndex","className","Grid","fluid","Row","Col","xs","lg","href","textAlign","SignInModal","show","onClose","setEmail","password","setPassword","Modal","backdrop","open","Header","Title","Body","Form","onSubmit","signInWithEmailAndPassword","catch","Group","ControlLabel","Control","onKeyUp","v","target","Button","appearance","block","onClick","Landing","setFirstName","setLastName","passwordRetry","setPasswordRetry","showModal","setShowModal","model","Schema","Model","Types","StringType","isRequired","pattern","addRule","Container","backgroundImage","landingtrain","marginTop","marginRight","float","fontSize","right","borderRadius","check","createUserWithEmailAndPassword","userCredential","height","overflowY","controlId","HelpText","tooltip","autoComplete","ThemeContext","ThemeProvider","theme","CustomProvider","ButtonToggle","options","defaultIndex","onChange","justified","selectedIndex","setSelectedIndex","opt","handleChange","disp","ButtonToolbar","ButtonGroup","lightDarkDisp","icon","faMoon","faSun","HeaderBar","setTheme","drawIsOpen","setDrawIsOpen","Navbar","Brand","version","Nav","pullRight","e","marginBottom","Drawer","signOut","OptionsPopOver","React","forwardRef","handleSelect","rest","Popover","full","Dropdown","Menu","onSelect","n","stopPropagation","Item","eventKey","SystemOptions","onNewRevision","onDeleteSystem","useRef","Whisper","trigger","speaker","current","close","HoverShowAll","Tooltip","Revision","onSelected","timestamp","isSelected","setValue","handleMouseOver","handleMouseOut","node","useHover","hover","t","moment","isNew","subtract","isBefore","selStyle","borderLeft","handleClick","tabIndex","role","styling","onKeyDown","display","format","left","top","RevList","onRevSelected","revSelectedID","revs","setRevs","isUpdating","setIsUpdating","revsRef","revArr","off","useRevisions","marginLeft","Loader","System","isExpanded","setIsExpanded","handleNewRev","validationModel","NumberType","min","NewSystemModal","selectedSystemIndex","setSelectedSystemIndex","setOwner","setTechnician","utfNumber","setutfNumber","setShow","onNewSystem","sysParent","systemChoices","systems","placeholder","accepter","InputPicker","scrollable","defaultValue","InputNumber","Input","SideBar","sysSelectedID","searchText","setSearchText","isDesktop","query","matchMedia","matches","setMatches","queryList","listener","evt","removeListener","useMediaQuery","setSystems","sysRef","systemsArr","useSystems","searchResults","filter","sys","toLowerCase","includes","findSearchResults","InputGroup","List","autoScroll","MainStage","newStageComp","defaultComp","isDark","backgroundColor","DefaultMainStage","paddingTop","ToolbarContext","ToolBarProvider","useToolBar","NotesDB","NotesDrawer","isOpen","isEnlarged","setIsEnlarged","getValue","handleUpdate","Actions","as","disabled","CustomPanel","defaultExpand","paddingBottom","flip","GridHeader","dataChildren","actionChildren","CompItemOptions","onTrack","onDelete","MyDateInput","parse","DatePicker","cleanable","sm","md","MyNumberInput","str","inputs","Text","HardInput","itemID","inputType","MyInput","setDisabled","getInitVal","htmlFor","SoftInput","CompItem","parentID","softInputs","Software","input","hardInputs","Hardware","handleDelete","borderBottom","fontWeight","Comp","setCompItems","arr","useCompItems","newCompItem","CompDeleteModal","ActiveComp","ComponentStatus","activeComps","possibleComps","handleCreate","find","ac","ComponentHandler","dataKey","setComps","compArr","useComponents","dataFormat","SubSystemNav","subSystems","selI","setSelI","isActive","btnColor","active","background","possSubs","SubSystems","handleAdd","hasATC","hasACSES","hasGeneral","TitleBar","isDisabled","setIsDisabled","setName","revNum","setRevNum","loadRev","SavedIndicator","persistFor","delayedIsUpdating","setDelayedIsUpdating","clearTimeout","setTimeout","pulse","ToolBar","faUndo","faRedo","borderRight","NewMainStage","setSubSys","sort","b","useSubSystems","setIsOpen","onOpen","useCallback","useModal","Main","setRevID","setSysID","PublicRoute","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2619c47d.chunk.js","sourcesContent":["import { initializeApp} from 'firebase/app';\nimport { getDatabase } from \"firebase/database\";\nimport { getAuth } from \"firebase/auth\";\n\nconst config = {\n    apiKey: \"AIzaSyBWWEHMZLwhbc4VLsmwhvF5Nv1HjxZ15QQ\",\n  authDomain: \"sysdescriptor.firebaseapp.com\",\n  databaseURL: \"https://sysdescriptor-default-rtdb.firebaseio.com\",\n  projectId: \"sysdescriptor\",\n  storageBucket: \"sysdescriptor.appspot.com\",\n  messagingSenderId: \"1070055316533\",\n  appId: \"1:1070055316533:web:bb96f1aab8f9cde30ba57c\",\n  measurementId: \"G-CZ32SF38K8\"\n}\n\nconst app = initializeApp(config);\n\nexport const database = getDatabase(app);\nexport const auth = getAuth(app);","import React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"../misc/firebase\";\n// import { ProfileDB } from \"../Database/ProfileDB\";\n\n\nconst UserContext = createContext();\n\nexport const UserProvider = ({children}) => {\n    const [user, setUser] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    \n    useEffect(() => {\n        onAuthStateChanged(auth, (p) => {\n            if (p) {\n                setUser(p);\n            } else {\n                setUser(null);\n            }\n            setIsLoading(false);\n        })\n    }, [])\n    \n    return (\n        <UserContext.Provider value={{user, isLoading}}>\n            {children}\n        </UserContext.Provider>\n    );\n}\n\nexport const useUser = () => useContext(UserContext);","import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useUser } from '../Contexts/user.context';\n\nconst PrivateRoute = () => {\n    const {user, isLoading} = useUser();\n\n    return user && !isLoading ? <Outlet /> : <Navigate to=\"/signin\" />;\n}\n\nexport default PrivateRoute;\n\n","import React from 'react';\nimport { Notification, toaster } from \"rsuite\";\n\n// PlacementType = 'topCenter' | 'bottomCenter' | 'topStart' | 'topEnd' | 'bottomStart' | 'bottomEnd';\n\nconst PLACEMENT = 'topEnd'\n\nconst type = {\n    success: 'success',\n    error: 'error',\n    warning: 'warning',\n    info: 'info'\n}\n\nexport default class Alert{\n    static duration = 1500; \n    \n    static success = (msg) => {\n        toaster.push(\n        <Notification \n            header={type.success}  \n            duration={this.duration} \n            closable\n            type={type.success}\n        >\n            {msg}\n        </Notification>, {placement: PLACEMENT});\n    }\n\n    static warning = (msg) => {\n        toaster.push(\n            <Notification \n                header={type.warning}  \n                duration={this.duration} \n                closable \n                type={type.warning}\n            >\n                {msg}\n            </Notification>, {placement: PLACEMENT});\n    }\n\n    static info = (msg) => {\n        toaster.push(\n            <Notification \n                header={type.info}  \n                duration={this.duration} \n                closable\n                type={type.info}\n            >\n                {msg}\n            </Notification>, {placement: PLACEMENT});\n    }\n\n    static error = (msg) => {\n        toaster.push(\n            <Notification \n                header={type.error}  \n                duration={this.duration} \n                closable\n                type={type.error}\n            >\n                {msg}\n            </Notification>, {placement: PLACEMENT});\n    }\n}","import { get, ref, set } from \"firebase/database\";\nimport firebase from 'firebase/compat/';\n\nimport Alert from \"../misc/Alert\";\nimport {database} from \"../misc/firebase\";\n\nexport class ProfileDB {\n    static read = async (uid) => {\n        try{\n            if(!uid){throw new Error('Missing parent ID')}\n\n            const db = ref(database, `profiles/${uid}`)\n\n            const data = await get(db);\n\n            return data.val();\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static create = async (uid, firstName, lastName, email) => {\n        try{\n            if(!uid){throw new Error('Missing parent ID')}\n\n            const db = ref(database, `profiles/${uid}`)\n\n            const payLoad = {\n                firstName,\n                lastName,\n                email,\n                birthdate: firebase.database.ServerValue.TIMESTAMP\n            }\n\n            const key = await set(db, payLoad);\n            \n            return key\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n}","export default __webpack_public_path__ + \"static/media/landing-train.6ac10f11.jpg\";","import { get, ref, push, onValue } from \"firebase/database\";\nimport firebase from 'firebase/compat/';\n\nimport Alert from \"../misc/Alert\";\nimport {database} from \"../misc/firebase\";\n\nexport class DBHelper {\n    static read = async (DBPARENT, id) => {\n        try{\n            if(!id){throw new Error('Missing parent ID')}\n\n            const db = ref(database, `${DBPARENT}/${id}`)\n\n            const data = await get(db);\n\n            return data.val();\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static create = async (DBPARENT, id, name='') => {\n        try{\n            if(!id){throw new Error('Missing parent ID')}\n\n            const db = ref(database, `${DBPARENT}/${id}`)\n\n            const payLoad = {\n                name,\n                birthdate: firebase.database.ServerValue.TIMESTAMP\n            }\n\n            const key = await push(db, payLoad).key;\n            \n            return key\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static onValue = (DBPARENT, id, cb) => {\n        try{\n            const db = ref(database, `${DBPARENT}/${id}`);\n\n            onValue(db, snap => {    \n                cb(snap.val());\n            }, err => {\n                Alert.error(err)\n            })\n\n            return db;\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n}","/* \nRequirements\n------------\n1) Update value\n2) Read value\n2) Delete value\n\n\nFunctionInputs\n--------------\n1) Parent Component ID\n*/\n\nimport { get, ref, set } from \"firebase/database\";\nimport firebase from 'firebase/compat/';\nimport Alert from \"../../../../../../../misc/Alert\";\nimport {database} from \"../../../../../../../misc/firebase\";\n\n\nexport class DataDB {\n    static read = async (DBPARENT, componentID) => {\n        try{\n            if(!componentID){throw new Error('Missing parent component identification.')}\n\n            const db = ref(database, `${DBPARENT}/${componentID}`)\n\n            const data = await get(db);\n\n            return data.val();\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static readSpecific = async (DBPARENT, componentID, title) => {\n        try{\n            if(!componentID){throw new Error('Missing parent component identification.')}\n            if(!title){throw new Error('Need title to retreive data')}\n\n            const db = ref(database, `${DBPARENT}/${componentID}/${title}`)\n\n            const data = await get(db);\n\n            return data.val();\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n\n    static update = async (DBPARENT, componentID, title, value) => {\n        try{\n            if(!componentID){throw new Error('Missing parent component identification.')}\n\n            const db = ref(database, `${DBPARENT}/${componentID}/${title}`)\n\n            const payLoad = {\n                value,\n                lastUpdated: firebase.database.ServerValue.TIMESTAMP\n            }\n\n            await set(db, payLoad);\n\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static delete = async (DBPARENT, componentID) => {\n        try{\n            if(!componentID){throw new Error('Missing parent component identification.')}\n\n            const db = ref(database, `${DBPARENT}/${componentID}`)\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n}","import { DataDB } from \".\";\n\nexport class HardWareDataDB {\n    static DBPARENT = `HardWareData`;\n\n    static read = async componentID => {\n       return DataDB.read(this.DBPARENT, componentID);\n    }\n\n    static readSpecific = async (componentID, title) => {\n        return DataDB.readSpecific(this.DBPARENT, componentID, title);\n     }\n\n    static update = async (componentID, title, value) => {\n        await DataDB.update(this.DBPARENT, componentID, title, value);\n    }\n\n    static delete = async componentID => {\n        await DataDB.delete(this.DBPARENT, componentID);\n    }\n}","import { DataDB } from \".\";\n\nexport class SoftWareDataDB {\n    static DBPARENT = `SoftWareData`;\n\n    static read = async componentID => {\n        return DataDB.read(this.DBPARENT, componentID);\n    }\n\n    static readSpecific = async (componentID, title) => {\n        return DataDB.readSpecific(this.DBPARENT, componentID, title);\n     }\n\n    static update = async (componentID, title, value) => {\n        await DataDB.update(this.DBPARENT, componentID, title, value);\n    }\n\n    static delete = async componentID => {\n        await DataDB.delete(this.DBPARENT, componentID);\n    }\n}","/* \nRequirements\n------------\n1) Create\n2) Read \n2) Delete \n\n\nFunctionInputs\n--------------\n1) Parent SUB_COMPONENT_ID\n*/\n\nimport { get, ref, set } from \"firebase/database\";\nimport Alert from \"../../../../../../misc/Alert\";\nimport {database} from \"../../../../../../misc/firebase\";\nimport { DBHelper } from \"../../../../../DBHelper\";\nimport { HardWareDataDB } from \"./Data/HarwareDataDB\";\nimport { SoftWareDataDB } from \"./Data/SoftwareDataDB\";\n\nexport class ComponentItemDB {\n    static DBPARENT = 'ComponentItems';\n\n    static NoIDErr = Error('Missing parent sub-component identification.');\n\n    static read = async (compID) => {\n        return DBHelper.read(this.DBPARENT, compID);\n    }\n\n    static addListener = (compID, cb) => {\n        return DBHelper.onValue(this.DBPARENT, compID, cb)\n    }\n\n\n    static create = async (compID, name) => {\n        return DBHelper.create(this.DBPARENT, compID, name);\n    }\n\n    static delete = async (compID) => {\n        try{\n            if(!compID){throw new this.NoIDErr}\n\n            const db = ref(database, `${this.DBPARENT}/${compID}`)\n            \n            //  delete children first\n            const componentIDs = await get(db);\n            const compIDsArr = Object.keys(componentIDs.val() || []) ;\n            for(let i = 0 ; i< compIDsArr.length; i++){\n                const id = compIDsArr[i];\n                SoftWareDataDB.delete(id);\n                HardWareDataDB.delete(id);\n            }\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static deleteSpecific = async (compID, compItemID) => {\n        try{\n            if(!compID){throw new this.NoIDErr}\n            if(!compItemID){throw new this.NoIDErr}\n\n\n            const db = ref(database, `${this.DBPARENT}/${compID}/${compItemID}`);\n            \n           await SoftWareDataDB.delete(compItemID);\n           await HardWareDataDB.delete(compItemID);\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n}","/* \nRequirements\n------------\n1) Create\n2) Read \n2) Delete \n\n\nFunctionInputs\n--------------\n1) Parent SUB_COMPONENT_ID\n*/\n\nimport { get, ref, set } from \"firebase/database\";\nimport Alert from \"../../../../../misc/Alert\";\nimport {database} from \"../../../../../misc/firebase\";\nimport { DBHelper } from \"../../../../DBHelper\";\nimport { ComponentItemDB } from \"./ComponentItemDB/ComponentItemDB\";\n\nexport class ComponentDB {\n    static DBPARENT = 'Component';\n\n    \n\n    static read = async (subSysID) => {\n        return DBHelper.read(this.DBPARENT, subSysID);\n    }\n\n    static addListener = async (subSysID, cb) => {\n        return DBHelper.onValue(this.DBPARENT, subSysID, cb);\n    }\n\n    static create = async (subSysID, name) => {\n        return DBHelper.create(this.DBPARENT, subSysID, name);\n    }\n\n    static delete = async (subSysID) => {\n        try{\n            if(!subSysID){throw new Error('Missing parent sub-system identification.');}\n\n            const db = ref(database, `${this.DBPARENT}/${subSysID}`)\n            \n            //  delete children first\n            const compItemIDs = await get(db);\n            const compItemIDsArr = Object.keys(compItemIDs.val() || []) ;\n            for(let i = 0 ; i< compItemIDsArr.length; i++){\n                const id = compItemIDsArr[i];\n                ComponentItemDB.delete(id);\n            }\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static deleteSpecific =  async (subSysID, id) => {\n        try{\n            if(!subSysID){throw Error('Missing parent sub-system identification.');}\n            if(!id){throw Error('Missing component identification.');}\n\n            const db = ref(database, `${this.DBPARENT}/${subSysID}/${id}`);\n\n            await ComponentItemDB.delete(id);\n            \n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n}","/* \nRequirements\n------------\n1) Create\n2) Read \n2) Delete \n\n\nFunctionInputs\n--------------\n1) Parent SUB_COMPONENT_ID\n*/\n\nimport { get, ref, set } from \"firebase/database\";\nimport Alert from \"../../../../misc/Alert\";\nimport {database} from \"../../../../misc/firebase\";\nimport { DBHelper } from \"../../../DBHelper\";\nimport { ComponentDB } from \"./ComponentDB/ComponentDB\";\n\nexport class SubSystemDB {\n    static DBPARENT = 'SubSystem';\n\n    static NoIDErr = Error('Missing parent revision identification.');\n\n    static addListener = async (revID, cb) => {\n        return DBHelper.onValue(this.DBPARENT, revID, cb);\n    }\n\n    static read = async (revID) => {\n        return DBHelper.read(this.DBPARENT, revID);\n    }\n\n    static create = async (revID, name) => {\n        return DBHelper.create(this.DBPARENT, revID, name);\n    }\n\n    static delete = async (revID) => {\n        try{\n            if(!revID){throw new this.NoIDErr}\n\n            const db = ref(database, `${this.DBPARENT}/${revID}`)\n            \n            //  delete children first\n            const subSysIDs = await get(db);\n            const subSysIDsArr = Object.keys(subSysIDs.val() || []) ;\n            for(let i = 0 ; i< subSysIDsArr.length; i++){\n                const id = subSysIDsArr[i];\n                ComponentDB.delete(id);\n            }\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static deleteSpecific = async (revID, subSysID) => {\n        try{\n            if(!revID){throw new this.NoIDErr}\n            if(!subSysID){throw new this.NoIDErr}\n\n            const db = ref(database, `${this.DBPARENT}/${revID}/${subSysID}`)\n            \n            await ComponentDB.delete(subSysID);\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n}","\nimport { get, ref, set, push} from \"firebase/database\";\nimport firebase from 'firebase/compat/';\nimport { SubSystemDB } from \"./SubSystemDB/SubSystemDB\";\nimport Alert from \"../../../misc/Alert\";\nimport { DBHelper } from \"../../DBHelper\";\nimport {database} from \"../../../misc/firebase\";\n\n\nexport class RevisionDB {\n    static DBPARENT = 'revisions';\n    \n    static readAll = async (sysID) => {\n        return DBHelper.read(this.DBPARENT, sysID);\n    }\n\n    static addListener = (sysID, cb) => {\n       return DBHelper.onValue(this.DBPARENT, sysID, cb);\n    }\n\n    static readSpecific = async (sysID, revID) => {\n        try{\n            if(!sysID){throw new Error('Missing system identification.')}\n            if(!revID){throw new Error('Missing revision identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}/${revID}`)\n\n            const data = await get(db);\n            return data.val()\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static create = async (sysID, name='Untitled', revNumber=0) => {\n        try{\n            if(!sysID){throw new Error('Missing system identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}`)\n\n            const payLoad = {\n                name,\n                revNumber,\n                birthday: firebase.database.ServerValue.TIMESTAMP,\n                lastUpdated: firebase.database.ServerValue.TIMESTAMP\n            }\n\n           const data = await push(db, payLoad);\n           return data.key\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n\n    static updateByKey = async (sysID, revID, key, value) => {\n        try{\n            if(!sysID){throw new Error('Missing system identification.')}\n            if(!revID){throw new Error('Missing revision identification.')}\n\n            let db = ref(database, `${this.DBPARENT}/${sysID}/${revID}/${key}`)\n\n            await set(db, value);\n\n            db = ref(database, `${this.DBPARENT}/${sysID}/${revID}/lastUpdated`);\n            await set(db, firebase.database.ServerValue.TIMESTAMP)\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static deleteSpecific = async (sysID, revID) => {\n        try{\n            if(!sysID){throw new Error('Missing parent component identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}/${revID}`)\n\n            //  delete sub systems first\n            await SubSystemDB.delete(revID);\n\n            await set(db, null);\n\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n\n    static deleteAll = async (sysID) => {\n        try{\n            if(!sysID){throw new Error('Missing parent component identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}`)\n\n            //  delete sub systems first\n            const revIDs = await get(db);\n            const revIDsArr = Object.keys(revIDs.val() || []) ;\n            for(let i = 0 ; i< revIDsArr.length; i++){\n                const id = revIDsArr[i];\n                SubSystemDB.delete(id);\n            }\n\n            await set(db, null);\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n}","import firebase from 'firebase/compat/';\nimport { get, ref, push, set, update } from 'firebase/database';\n\nimport Alert from \"../../misc/Alert\";\nimport {database} from \"../../misc/firebase\";\nimport { DBHelper } from \"../DBHelper\";\nimport { RevisionDB } from \"./RevisionDB/RevisionDB\";\n\nexport class SystemDB{\n    static DBPARENT = 'systems';\n\n    static readAll = async () => {\n        try{\n            const db = ref(database, `${this.DBPARENT}/`)\n            const data = await get(db);\n            return data.val();\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static read = async sysID => {\n        return DBHelper.read(this.DBPARENT, sysID);\n    }\n\n    static addListener = (cb) => {\n       return DBHelper.onValue(this.DBPARENT, '', cb);\n    }\n\n    static create = async (title='Untitled', owner=null, technician=null, sysNumber=null, partNumber=null) => {\n        try{\n            const db = ref(database, `${this.DBPARENT}/`)\n\n            const payLoad = {\n                title,\n                owner,\n                technician,\n                sysNumber,\n                partNumber,\n                birthday: firebase.database.ServerValue.TIMESTAMP,\n                lastUpdated: firebase.database.ServerValue.TIMESTAMP\n            }\n\n            const data = await push(db, payLoad);\n            return data.key;\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    static update = async (sysID, title='Untitled', owner=null, technician=null, sysNumber=null, partNumber=null) => {\n        try{\n            if(!sysID){throw new Error('Missing system identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}`)\n\n            const updates= {\n                title,\n                owner,\n                technician,\n                sysNumber,\n                partNumber,\n                lastUpdated: firebase.database.ServerValue.TIMESTAMP\n            }\n\n            await update(db, updates);\n\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n\n    static delete = async sysID => {\n        try{\n            if(!sysID){throw new Error('Missing system identification.')}\n\n            const db = ref(database, `${this.DBPARENT}/${sysID}`)\n\n            //  delete revisions first\n            await RevisionDB.deleteAll(sysID);\n\n            await set(db, null);\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n}","import {Document, Packer, Paragraph, HeadingLevel, UnderlineType, TextRun, Table, TableRow, TableCell } from 'docx';\nimport {saveAs} from 'file-saver';\nimport { RevisionDB } from '../Database/SystemDB/RevisionDB/RevisionDB';\nimport { ComponentDB } from '../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB';\nimport { ComponentItemDB } from '../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/ComponentItemDB';\nimport { HardWareDataDB } from '../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/HarwareDataDB';\nimport { SoftWareDataDB } from '../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/SoftwareDataDB';\nimport { SubSystemDB } from '../Database/SystemDB/RevisionDB/SubSystemDB/SubSystemDB';\nimport { SystemDB } from '../Database/SystemDB/SystemDB';\nimport Alert from './Alert';\n\nexport function makeid(length=5) {\n    let result           = '';\n    const characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for ( let i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return `${Date.now()}${result}`;\n}\n\nexport const dispTime = d => {\n  if(Number.isNaN(d)){return '- -'}\n\n  return (new Date(d)).toDateString();  \n\n}\n\nexport const idObjToArr = obj => {\n  if(!obj){return []}\n  \n  const ids = Object.keys(obj);\n\n  return ids.map(id => {\n    return {id, ...obj[id]}\n  })\n}\n\nexport const arrRemove = (arr, item) =>{\n    const i = arr.findIndex(item);\n    if(i===-1){return arr}\n\n    return arr.splice(i, 1);\n}\n\nexport function filterList(sysArr, searchString) {\n  const filtered = sysArr.filter(str => {\n    if(!str){return false}\n    return str.includes(searchString);\n  });\n  return filtered;\n}\n\nconst saveDocumentToFile = (doc, fileName) => {\n  Packer.toBlob(doc).then((blob) => {\n    // saveAs from FileSaver will download the file\n    saveAs(blob, fileName);\n  });\n}\n\nconst convertSize = x => (x*2)\n\n\n\n// const hasValue = e => { //  eslint consistent-return: [\"error\", { \"treatUndefinedAsUnspecified\": false }]\n//   if(Object.entries(e).contains(\"value\")){\n//     return !(e.value==='')\n//   }\n//   if(Object.entries(e).length > 0){\n//     const entries = Object.entries(e);\n//     for(let i =0 ; i<entries.length; i++){\n//       hasValue(e[entries[i]]);\n//     }\n//   }else{\n//     return false\n//   }\n// }\n\n// const getOptionalValues = optionsArr => {\n//   const arr = [];\n\n//   for(let i =0; i< optionsArr.length; i++){\n//     if(hasValue(optionsArr[i])){\n//       arr.push(optionsArr[i]);\n//     }\n//   }\n\n//   return arr;\n// }\n\n// const buildTable = jsonDoc => {\n//   const dataToDisplay = [...jsonDoc.required, ...getOptionalValues()]\n// }\n\nexport const getKeyName = obj => {\n  return Object.keys(obj)[0];\n}\n\nexport const snapToArr = snapArr => {\n  const json = (snapArr) || {};\n  const ids = Object.keys(json);\n  const arr = ids.map(id =>  ({id, ...json[id]}));\n  return arr || [];\n}\n\n\nconst dispHardSoftData = (hardData, softData) => {\n  const loopLen = hardData.length > softData.length ? hardData.length : softData.length;\n\n  const returnVar = [];\n\n  for(let i =0; i< loopLen; i++){\n    returnVar.push(\n      new TableRow({\n        children: [\n          softData[i] ?\n          new TableCell({\n            children: [\n              new Paragraph({\n                children: [\n                  new TextRun(`${softData[i].id}:  ${softData[i].value}`)\n                ],\n                style: 'default'\n              }),\n            ],\n          }) : new TableCell({children:[]}),\n        hardData[i] ?\n          new TableCell({\n            children: [\n              new Paragraph({\n                children: [\n                  new TextRun(`${hardData[i].id}:  ${hardData[i].value}`)\n                ],\n                style: 'default'\n              }),\n            ],\n          }) : new TableCell({children:[]}),\n        ]\n      })\n    )\n  }\n\n  return returnVar;\n}\n\n\n\nconst dispComponentItemData = async compItems => {\n  const returnvar = [];\n  for(let i =0; i< compItems.length; i++){\n    const item = compItems[i];\n    \n    /* eslint-disable no-await-in-loop */\n    const hardData = idObjToArr(await HardWareDataDB.read(item.id));\n    /* eslint-disable no-await-in-loop */\n    const softData = idObjToArr(await SoftWareDataDB.read(item.id));\n\n    returnvar.push(\n      new Table({\n        rows: [\n          new TableRow({\n            children: [\n              new TableCell({\n                children: [\n                  new Paragraph({\n                    children: [\n                      new TextRun(`${i+1}`)\n                    ],\n                    style: 'default-bold',\n                    \n                  }),\n                ],\n              })\n            ]\n          }),\n          new TableRow({\n            children: [\n              new TableCell({\n                children: [\n                  new Paragraph({\n                    children: [\n                      new TextRun(\"Hardware\")\n                    ],\n                    style: 'default-bold',\n\n                  }),\n                ],\n              }),\n              new TableCell({\n                children: [\n                  new Paragraph({\n                    children: [\n                      new TextRun(\"Software\")\n                    ],\n                    style: 'default-bold'\n                  }),\n                ],\n              })\n            ]\n          }),\n          ...await dispHardSoftData(hardData, softData)\n        ]\n      }),\n    )\n  }\n  return returnvar;\n}\n\nconst dispComponenetData = async comps => {\n  const returnvar = [];\n  for(let i =0; i< comps.length; i++){\n    const comp = comps[i];\n    /* eslint-disable no-await-in-loop */\n    const compItems = idObjToArr(await ComponentItemDB.read(comp.id));\n\n    returnvar.push(\n      new Paragraph({\n        text: comp.name,\n        heading: HeadingLevel.HEADING_3,\n      }),\n      ...await dispComponentItemData(compItems)\n    )\n  }\n\n  return returnvar;\n}\n\nconst dispSubSystemData = async data => {\n  const returnvar = [];\n\n  for(let i =0; i< data.length; i++){\n    const subSys = data[i];\n    /* eslint-disable no-await-in-loop */\n    const components = idObjToArr(await ComponentDB.read(subSys.id));\n\n    returnvar.push(\n      new Paragraph({\n        text: subSys.name,\n        heading: HeadingLevel.HEADING_2,\n      }),\n      ...await dispComponenetData(components)\n    )\n\n  }\n  return returnvar;\n}\n\nexport const generateDocument = async (SYSID, REVID) => {\n  try{\n    const date = new Date();\n\n    const system = await SystemDB.read(SYSID);\n    const revision = await RevisionDB.readSpecific(SYSID, REVID);\n    const subsystems =  idObjToArr(await SubSystemDB.read(REVID));\n    const doc = new Document({\n      styles: {\n        default: {\n          heading1: {\n              run: {\n                  size: convertSize(28),\n                  bold: true,\n                  color: \"FFFFFF\"\n              },\n              paragraph: {\n                  spacing: {\n                      after: 120,\n                  },\n                  run: {\n                    color: \"FFFFFF\"\n                  }\n              },\n          },\n          heading2: {\n              run: {\n                size: convertSize(22),\n                bold: true,\n                underline: {\n                    type: UnderlineType.SINGLE,\n                },\n                color: \"FFFFFF\",\n              },\n              paragraph: {\n                spacing: {\n                  after: 100,\n                }\n              }\n          },\n          heading3: {\n            run: {\n              size: convertSize(16),\n              bold: true,\n              color: \"FFFFFF\",\n            },\n            paragraph: {\n              spacing: {\n                after: 50,\n              }\n            }\n        },\n          listParagraph: {\n              run: {\n                  color: \"FF0000\",\n              },\n          },\n        },\n        paragraphStyles: [\n        {\n          id: \"tech-owner\",\n          name: \"Technician & Owner\",\n          basedOn: \"Normal\",\n          next: \"Normal\",\n          quickFormat: true,\n          run: {\n              size: convertSize(14),\n              color: \"FFFFFF\"\n          },\n          paragraph: {\n            spacing: {\n              before: 100,\n            }\n          }\n        },\n        {\n          id: \"default\",\n          name: \"default\",\n          basedOn: \"Normal\",\n          next: \"Normal\",\n          quickFormat: true,\n          run: {\n              size: convertSize(10),\n              color: \"FFFFFF\"\n          },\n        },\n        {\n          id: \"default-bold\",\n          name: \"default-bold\",\n          basedOn: \"Normal\",\n          next: \"Normal\",\n          quickFormat: true,\n          run: {\n              size: convertSize(10),\n              color: \"FFFFFF\",\n              bold: true\n          },\n        }\n      ],\n      },\n      sections: [{\n        properties: {},\n        children: [\n          new Paragraph({\n            text: `${system.title} -- ${revision.name}`,\n            heading: HeadingLevel.HEADING_1,\n          }),\n          new Paragraph({\n            children: [\n              new TextRun(\"Generated On: \"), new TextRun({text: `${date.toDateString()} ${date.toLocaleTimeString()}`, bold: true}),\n            ],\n            style: 'default'\n          }),\n          new Paragraph({\n            children: [\n              new TextRun(\"Technician: \"), new TextRun({text: system.technician, bold: true}),\n              new TextRun(\"Owner: \"), new TextRun({text: system.owner, bold: true})\n            ],\n            style: \"tech-owner\"\n          }),\n          new Paragraph(\"\"),\n          ... await dispSubSystemData(subsystems)\n        ],\n      }],\n    });\n    saveDocumentToFile(doc, \"New Document.docx\");\n  }catch(err){\n    Alert.error('Unable to generate the document');\n  }\n}\n\n\n\n\n\n","import { useState, useEffect, useRef, useCallback } from \"react\";\nimport { off } from \"@firebase/database\";\nimport { idObjToArr} from \"./helperfunc\";\nimport { SystemDB } from \"../Database/SystemDB/SystemDB\";\nimport { RevisionDB } from \"../Database/SystemDB/RevisionDB/RevisionDB\";\nimport { SubSystemDB } from \"../Database/SystemDB/RevisionDB/SubSystemDB/SubSystemDB\";\nimport { ComponentDB } from \"../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB\";\nimport { ComponentItemDB } from \"../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/ComponentItemDB\";\n\n\nexport const useMediaQuery = query => {\n    const [matches, setMatches] = useState(\n      () => window.matchMedia(query).matches\n    );\n  \n    useEffect(() => {\n      const queryList = window.matchMedia(query);\n      setMatches(queryList.matches);\n  \n      const listener = evt => setMatches(evt.matches);\n  \n      queryList.addListener(listener);\n      return () => queryList.removeListener(listener);\n    }, [query]);\n  \n    return matches;\n};\n\nexport const useWindowHeight = () => {\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowHeight(window.innerHeight);\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowHeight;\n}\n\nexport const useHover = () => {\n  const [value, setValue] = useState(false);\n  const ref = useRef(null);\n  const handleMouseOver = () => setValue(true);\n  const handleMouseOut = () => setValue(false);\n  useEffect(\n    () => {\n      const node = ref.current;\n      if (node) {\n        node.addEventListener(\"mouseover\", handleMouseOver);\n        node.addEventListener(\"mouseout\", handleMouseOut);\n      }\n      return () => {\n          node.removeEventListener(\"mouseover\", handleMouseOver);\n          node.removeEventListener(\"mouseout\", handleMouseOut);\n      };\n    },\n    // eslint-disable-next-line\n    [ref.current] // Recall only if ref changes\n  );\n  return [ref, value];\n}\n\nexport const useRevisions = sysID => {\n  const [revs, setRevs] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n  \n  \n  const revsRef = useRef();\n  useEffect(() => {\n    setIsUpdating(true);\n    revsRef.current = RevisionDB.addListener(sysID, (v) => {\n      const revOBJ = v;\n      const revArr = idObjToArr(revOBJ);\n      setRevs(revArr);\n      setIsUpdating(false);\n    })\n    \n    return () => {\n      off(revsRef.current);\n    }\n  }, [sysID]);\n\n  return {revs, isUpdating};\n}\n\nexport const useSystems = () => {\n  const [systems, setSystems] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  const sysRef = useRef();\n  useEffect(() => {\n    setIsUpdating(true);\n    \n    sysRef.current = SystemDB.addListener((v) => {\n      const systemsObj = v;\n      const systemsArr = idObjToArr(systemsObj);\n      setSystems(systemsArr);\n      setIsUpdating(false);\n    })\n    \n    return () => {\n      off(sysRef.current);\n    }\n  }, []);\n  return {systems, isUpdating}\n}\n\nexport const useSubSystems = revID => {\n  const [subSys, setSubSys] = useState([]);\n\n  useEffect(() => {\n    SubSystemDB.addListener(revID, (v) => {\n      const subObj = v;\n      const compArr = idObjToArr(subObj);\n      compArr.sort((a,b) => (a.name>b.name ?  -1 :  1))\n      setSubSys(compArr);\n    })\n\n  }, [revID]);\n\n  // useEffect(() => {\n  //   return () => {\n  //     off(subRef);\n  //   }\n  // }, []);\n\n  return subSys\n}\n\nexport const useComponents = subSysID => {\n  const [comps, setComps] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  useEffect(() => {\n    setIsUpdating(true);\n    ComponentDB.addListener(subSysID, (v) => {\n      const compObj = v;\n      const compArr = idObjToArr(compObj);\n      setComps(compArr);\n      setIsUpdating(false);\n    })\n\n  }, [subSysID]);\n\n  // useEffect(() => {\n  //   return () => {\n  //     off(compRef);\n  //   }\n  // }, []);\n\n  return {comps, isUpdating}\n}\n\n\nexport const useCompItems = compID => {\n  const [compItems, setCompItems] = useState([]);\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  useEffect(() => {\n    setIsUpdating(true);\n    ComponentItemDB.addListener(compID, (v) => {\n      const obj = v;\n      const arr = idObjToArr(obj);\n      setCompItems(arr);\n      setIsUpdating(false);\n    })\n\n  }, [compID]);\n\n  // useEffect(() => {\n  //   return () => {\n  //     off(compRef);\n  //   }\n  // }, []);\n\n  return {compItems, isUpdating}\n}\n\n\nexport const useModal = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onOpen = useCallback(() => setIsOpen(true), []);\n  const onClose = useCallback(() => setIsOpen(false), []);\n\n  return {isOpen, onOpen, onClose};\n}\n\n\n","import React from 'react';\nimport { Col, Footer, Grid, Row } from 'rsuite';\n\nconst MyFooter = ({style}) => (\n    <Footer style={{...style, clear: 'both',\n        position: 'fixed',\n        bottom: '0px',\n        width: '100%',\n        padding: '15px',\n        zIndex: 0\n      }}\n\n        className='light-shade-c'\n      >\n        <Grid fluid>\n          <Row>\n            <Col xs={18}>\n              <h5>\n                SysDescriptor\n              </h5>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={4} lg={2}>\n              <a href='/'>Privacy Policy</a>\n            </Col>\n            <Col xs={4} lg={2}>\n              <a href='/'>Terms of Use</a>\n            </Col>\n            <Col xs={4} lg={2}>\n              <a href='/'>Accessibility</a>\n            </Col>\n            <Col xs={12} lg={18}>\n            <div>\n            <p style={{textAlign: 'right'}}>\n               Developed by Siemen Engineer <a href='https://www.linkedin.com/in/keefergregoire/'>Keefer Gregoire</a>\n             </p>\n            </div>\n            </Col>\n          </Row>\n        </Grid>\n    </Footer>\n);\n\n\nexport default MyFooter;","import { signInWithEmailAndPassword } from 'firebase/auth';\nimport React, {useState} from 'react'\nimport { Button, Form, Modal } from 'rsuite';\nimport Alert from '../../misc/Alert';\nimport { auth } from '../../misc/firebase';\n\nconst SignInModal = ({show, onClose}) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n\n    const handleSubmit = () => {\n        signInWithEmailAndPassword(auth, email, password)\n        .then(() => {\n            Alert.success('You have been successfully signed in');\n        })\n        .catch((err)=> {\n            Alert.error(err.message);\n        })\n    }\n\n\n    return (\n        <Modal size='xs' backdrop open={show} onClose={onClose}>\n            <Modal.Header>\n            <Modal.Title>Sign In</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group>\n                    <Form.ControlLabel>Siemens Email</Form.ControlLabel>\n                    <Form.Control onKeyUp={(v)=>setEmail(v.target.value)}/>\n                </Form.Group>\n                <Form.Group>\n                    <Form.ControlLabel>Password</Form.ControlLabel>\n                    <Form.Control onKeyUp={(v)=>setPassword(v.target.value)} type='password'/>\n                </Form.Group>\n                <Form.Group>\n                    <Button appearance='primary' block type='submit'>Sign in</Button>\n                </Form.Group>\n            </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={onClose} appearance='subtle'>Cancel</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default SignInModal;\n","import { createUserWithEmailAndPassword } from 'firebase/auth';\nimport React, {useState} from 'react';\nimport {Grid, Row, Col, Button, Form, Header, Container, Schema} from 'rsuite';\nimport { ProfileDB } from '../../Database/ProfileDB';\n\nimport landingtrain from '../../images/landing-train.jpg';\nimport Alert from '../../misc/Alert';\nimport { useWindowHeight } from '../../misc/customHooks';\nimport { auth } from '../../misc/firebase';\nimport MyFooter from '../misc/Footer';\nimport SignInModal from './SignInModal';\n\nexport default function Landing() {\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordRetry, setPasswordRetry] = useState('');\n    const [showModal, setShowModal] = useState();\n\n  \n  \n    const model = Schema.Model({\n      firstName: Schema.Types.StringType().isRequired('This field is required'),\n      lastName: Schema.Types.StringType().isRequired('This field is required'),\n      email: Schema.Types.StringType().pattern(/.*@siemens.com/,'A valid Siemens email is required'),\n      password: Schema.Types.StringType().isRequired('This field is required'),\n      passwordRetry: Schema.Types.StringType().addRule(() => {\n          if (password !== passwordRetry) {\n            return false;\n          }\n          return true;\n        }, 'The passwords do not match')\n    })\n\n\n    const resetFormState= () => {\n        setFirstName(''); setLastName(''); setEmail(''); setPassword(''); setPasswordRetry('');\n    }\n\n\n    const handleNewUser = () => {\n        if(model.check()){\n            createUserWithEmailAndPassword(auth, email, password)\n            .then(userCredential => {\n                //  create new profile in DB and link with uid\n                ProfileDB.create(userCredential.user.uid, firstName, lastName, email);\n            })\n            .catch(err => {\n                Alert.error(err.message);\n            })\n            resetFormState();\n        }\n    }\n\n\n\n\n    return (\n        <Container>\n            \n\n        <div id='background-train' style={{backgroundImage: `url(${landingtrain})`  }}> \n        <SignInModal show={showModal} onClose={() => setShowModal(false)}/>\n          <Header className='light-shade-c white-c p-1'>\n            <Grid fluid>\n              <Row>\n                <Col xs={20}>\n                  <h1>SysDescriptor</h1>\n                </Col>\n                <Col xs={4}>\n                  <div>\n                  <Button onClick={()=>setShowModal(true)} style={{marginTop: '5%', marginRight: '10%', float: 'right', color: 'white', fontSize: '16px'}} className='white-c' appearance='link'>Sign In</Button>\n                  </div>\n                </Col>\n              </Row>\n            </Grid>\n          </Header>\n  \n          <h2 id='tag-line'>Siemens Rail Infastructure test unit management tool</h2>\n  \n          <div style={{position: 'relative', marginTop: '1%'}}>\n            <div style={{position: 'absolute', right: '6%', zIndex: 3}}>\n              <div style={{ borderRadius: '5px', padding: '10px', width: '350px'}} id='join-form'>\n                <h2>Join</h2>\n                <p>You must be a Siemens employee to make use of this site</p>\n                <hr/>\n                <Form onSubmit={handleNewUser} model={model}>\n                  <div style={{height: `${useWindowHeight() -600}px`, overflowY: 'scroll'}}>\n                    <Form.Group controlId='firstName'>\n                      <Form.ControlLabel>First Name</Form.ControlLabel>\n                      <Form.Control onKeyUp={(v)=>setFirstName(v.target.value)} name='firstName'/>\n                    </Form.Group>\n                    <Form.Group controlId='lastName'>\n                      <Form.ControlLabel>Last Name</Form.ControlLabel>\n                      <Form.Control onKeyUp={v=>setLastName(v.target.value)} name='lastName'/>\n                    </Form.Group>\n                    <Form.Group controlId=\"email\">\n                      <Form.ControlLabel>Siemens Email</Form.ControlLabel>\n                      <Form.Control onKeyUp={v=>setEmail(v.target.value)} name=\"email\" type=\"email\" />\n                      <Form.HelpText tooltip>Valid Siemens email address is required</Form.HelpText>\n                    </Form.Group>\n                    <Form.Group controlId=\"password\">\n                      <Form.ControlLabel>Password</Form.ControlLabel>\n                      <Form.Control onKeyUp={v=>setPassword(v.target.value)} name=\"password\" type=\"password\" autoComplete=\"off\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"passwordRetry\">\n                      <Form.ControlLabel>Password Retry</Form.ControlLabel>\n                      <Form.Control onKeyUp={v=>setPasswordRetry(v.target.value)} name=\"passwordRetry\" type=\"password\" autoComplete=\"off\" />\n                    </Form.Group>\n                  </div>\n  \n                  <Form.Group>\n                    <Button type='submit' block size='lg' appearance=\"primary\">Join</Button>\n                  </Form.Group>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n        <MyFooter />\n      </Container>\n    )\n}\n","import React, { createContext, useContext} from 'react';\nimport { CustomProvider } from 'rsuite';\n\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({children, theme='light'}) => (\n    <ThemeContext.Provider value={theme}>\n        <CustomProvider theme={theme}>\n         {children}\n        </CustomProvider>\n    </ThemeContext.Provider>\n)\n\nexport const useTheme = () => useContext(ThemeContext);\n","import React, { useState } from 'react';\nimport { ButtonGroup, ButtonToolbar, Button } from 'rsuite';\n\nconst ButtonToggle = ({options=[], defaultIndex=0, onChange, style, size, justified=false}) => {\n    const [selectedIndex, setSelectedIndex] = useState(defaultIndex);\n\n    const handleChange = i => {\n        setSelectedIndex(i);\n        onChange(options[i].value)\n    }\n\n\n    const opt = options.map((val,i) => \n        <Button  \n            onClick={()=>handleChange(i)} \n            key={i}\n            appearance={selectedIndex===i ? 'primary' : 'ghost'}\n            size={size}\n        >\n            {val.disp}\n        </Button>\n    )\n\n\n    \n    return (\n        <ButtonToolbar style={style}>\n            <ButtonGroup justified={justified}>\n                {opt}\n            </ButtonGroup>\n        </ButtonToolbar>\n    );\n};\n\nexport default ButtonToggle;","import React, { useState} from 'react';\nimport { signOut } from 'firebase/auth';\nimport {Navbar, Nav, Button, Drawer } from 'rsuite';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\n\nimport ButtonToggle from './Helper Components/ButtonToggle';\n\n\nimport {version} from '../../../package.json';\nimport { useUser } from '../../Contexts/user.context';\n\nimport { auth } from '../../misc/firebase';\nimport Alert from '../../misc/Alert';\n\nconst lightDarkDisp = [\n    {\n        disp: <FontAwesomeIcon icon={faMoon}/>,\n        value: \"dark\"\n    },\n    {\n        disp: <FontAwesomeIcon icon={faSun}/>,\n        value: \"light\"\n    }\n]\n\n\n\nconst HeaderBar = ({style, setTheme}) => {\n    const [drawIsOpen, setDrawIsOpen] = useState(false);\n    const {user} = useUser();\n\n    const handleSignOut = () => {\n        signOut(auth).then(()=>{\n\n        }\n        ).catch((err) => {\n            Alert.error(err.message);\n        })\n    }\n\n    return(\n        <>\n            <Navbar style={{...style}}>\n                <Navbar.Brand >\n                    SYSDESCRIPTOR {version}\n                </Navbar.Brand>\n                <Nav pullRight style={{marginTop: '0px'}}>\n                <Button onClick={()=>setDrawIsOpen(true)} appearance='link'>{user.email}</Button>\n                <ButtonToggle\n                    options={lightDarkDisp}\n                    onChange={(e) => setTheme(e)}\n                    style={{marginBottom: '5px', marginRight: '5px', textAlign: 'right'}}\n                    size='xs'\n                />\n                </Nav>\n            </Navbar>\n\n            <Drawer size='xs' placement='right' open={drawIsOpen} onClose={() =>setDrawIsOpen(false)}>\n                <Drawer.Header>\n                    <Drawer.Title>{user.email}</Drawer.Title>\n                </Drawer.Header>\n                <Drawer.Body>\n                        <Button block appearance='primary' color='red' onClick={handleSignOut}>Sign Out</Button>\n                    </Drawer.Body>\n            </Drawer>\n        </>\n\n    )\n}\n\nexport default HeaderBar;\n\n\n\n","import React, { useRef } from 'react'\nimport { Button, Dropdown, Popover, Whisper } from 'rsuite';\nimport MoreIcon from '@rsuite/icons/More';\n\n\nconst OptionsPopOver = React.forwardRef(({ handleSelect, ...rest }, ref) => (\n    <Popover ref={ref} {...rest} full>\n      <Dropdown.Menu onSelect={(n, e)=>{handleSelect(n); e.stopPropagation()}}>\n        <Dropdown.Item eventKey={1} >New Revision</Dropdown.Item>\n        <Dropdown.Item>Edit System</Dropdown.Item>\n        <Dropdown.Item eventKey={3}>Delete System</Dropdown.Item>\n      </Dropdown.Menu>\n    </Popover>\n));\n\n\n\nexport const SystemOptions = ({onNewRevision, onDeleteSystem}) => {\n  const ref = useRef();\n  const handleSelect = n => {\n    if(n===1){\n      onNewRevision();\n    }else if(n===3){\n      onDeleteSystem();\n    }\n\n    ref.current.close();\n  }\n  return (\n    <Whisper\n        placement=\"rightStart\"\n        controlId=\"control-id-with-dropdown\"\n        trigger=\"click\"\n        ref={ref}\n        onClick={(e)=>e.stopPropagation()}\n        speaker={<OptionsPopOver handleSelect={e=>handleSelect(e)}/>}                              \n    >\n      <Button appearance='subtle' size='xs'><MoreIcon/></Button>\n    </Whisper>\n  )\n}\n","import React from 'react';\nimport { Tooltip, Whisper } from 'rsuite';\n\nconst HoverShowAll = ({text=\"missing\", children}) => {\n    const tooltip = (\n        <Tooltip>\n          {text}\n        </Tooltip>\n      );\n\n    return (\n        <Whisper placement=\"top\" controlId=\"control-id-hover\" trigger=\"hover\" speaker={tooltip}>\n            {children}\n        </Whisper>\n    );\n};\n\nexport default HoverShowAll;","import React from 'react'\nimport { Button, Col, Row, Grid } from 'rsuite';\nimport TrashIcon from '@rsuite/icons/Trash';\nimport moment from 'moment';\n\nimport { useHover } from '../../../../../misc/customHooks';\nimport HoverShowAll from '../../../../misc/Helper Components/HoverShowAll';\n\n\nexport const Revision = ({onSelected, name, timestamp, revNumber=0, isSelected}) => {\n    const [ref, hover] = useHover();\n    name=name || 'Untitled';\n\n    const t = moment(timestamp);\n    const isNew = moment().subtract(2, \"days\").isBefore(t);\n\n    const selStyle = isSelected ? {borderLeft: '2px solid white'} : null;\n\n    const handleClick = () => {onSelected()}\n    return (\n        <div type='button' tabIndex={0} role=\"button\" styling=\"link\" onClick={handleClick} onKeyDown={handleClick} style={{display: 'block', width: '100%', ...selStyle}}  ref={ref} className='rs-list-item pointer p-1'>\n            <Grid fluid>\n                <Row>\n                    <Col xs={5}>\n                        <HoverShowAll text={name}>\n                            <p className='bold ellip-overflow align-l'>{name}</p>\n                        </HoverShowAll>\n                    </Col>\n                    <Col xs={5}>\n                        {isNew ? <span className='new'>New</span> : null}\n                        \n                    </Col>\n                    <Col xs={5}>\n                        <span className='muted-c'>Rev </span>{revNumber}\n                    </Col>\n                    <Col xs={7}>\n                        <span style={{fontSize: '12px'}}>\n                            <p className='muted-c ellip-overflow'>{t.format(\"MMM Do YY\")}</p>\n                            <p className='muted-c mt-0 ellip-overflow'>{t.format(\"h:mm:ss a\")}</p>\n                        </span>\n                    </Col>\n                    <Col xs={2}>\n                        <Button size='xs' appearance='subtle' color='red' style={{position: 'absolute', left: '1px', top: '4px', display: hover ? 'inline-block' : 'none' }}>\n                            <TrashIcon/>\n                        </Button>\n                    </Col>\n                </Row>\n            </Grid>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Loader } from 'rsuite';\nimport { useRevisions } from '../../../../misc/customHooks';\nimport {Revision} from './Revision/Revision';\n\nconst RevList = ({sysID, onRevSelected, revSelectedID}) => {\n    const {revs, isUpdating} = useRevisions(sysID);\n\n    return (\n        <div className='rs-list rs-list-hover v-scroll' style={{marginLeft: '10%'}}>\n            {isUpdating ? <Loader style={{padding: '10px'}}/> : null}\n            {!isUpdating && revs ? revs.map(val => {\n                const {id, name, timestamp, revNumber} = val;\n                    return(\n                    <Revision \n                        onSelected={()=>onRevSelected(id)}\n                        name={name}\n                        timestamp={timestamp}\n                        revNumber={revNumber}\n                        key={id}\n                        isSelected={revSelectedID===id}\n                    />\n                )\n            }): null}\n            {!isUpdating && !revs.length ? <span className='muted-c' style={{padding: '5px 0', display: 'block'}}>Create a new revision to get started</span> : null}\n        </div>\n    );\n};\n\nexport default RevList;","import React, { useState } from 'react';\nimport {Row, Col, Grid, Button} from 'rsuite';\nimport ArrowRightIcon from '@rsuite/icons/ArrowRight';\nimport ArrowDownIcon from '@rsuite/icons/ArrowDown';\nimport { SystemOptions } from './SystemOptions';\nimport HoverShowAll from '../../misc/Helper Components/HoverShowAll';\nimport RevList from './Rev List/RevList';\n\nexport const System = ({sysID, title='Untitled', partNumber, sysNumber, technician, owner, onRevSelected, onNewRevision, isSelected, revSelectedID, onDeleteSystem}) => {\n    const [isExpanded, setIsExpanded] = useState(false);\n    title = title ==='' ? 'Untitled' : title;\n\n    const selStyle= isSelected ? {borderLeft: '1px solid lightgreen'} : null\n\n    const handleClick = () => {setIsExpanded(v => !v)}\n\n    const handleNewRev = () => {\n        onNewRevision();\n        if(!isExpanded){setIsExpanded(true)}\n    }\n\n    return (\n        <div className='rs-list rs-list-hover'>\n            <div type='button' tabIndex={0} role=\"button\" styling=\"link\" onClick={handleClick} onKeyDown={handleClick} className='rs-list-item pointer p-2' style={{...selStyle, width: '100%'}}>\n                <Grid fluid>\n                    <Row>\n                        <Col xs={2}>\n                            <Button style={{fontSize: '18px'}} appearance='subtle' size='xs'>\n                                {isExpanded ? <ArrowDownIcon/> : <ArrowRightIcon/>}\n                            </Button>\n                        </Col>\n                        <Col xs={8}>\n                            <HoverShowAll text={title}>\n                                <h5 className='ellip-overflow align-l'>{title}</h5>\n                            </HoverShowAll>\n                            <HoverShowAll text={partNumber}>\n                                <p className='muted-c ellip-overflow'>{partNumber}</p>\n                            </HoverShowAll>\n                        </Col>\n                        <Col xs={2}>\n                            <HoverShowAll text=\"System Number\">\n                                <p className='muted-c ellip-overflow'>{sysNumber}</p>\n                            </HoverShowAll>\n                        </Col>\n                        <Col xs={5}>\n                            <HoverShowAll text={`Technician: ${technician}`}>\n                                <p className='muted-c ellip-overflow'>{technician}</p>\n                            </HoverShowAll>\n                        </Col>\n                        <Col xs={5}>\n                            <HoverShowAll text={`Owner: ${owner}`}>\n                                <p className='muted-c ellip-overflow'>{owner}</p>\n                            </HoverShowAll>\n                        </Col>\n                        <Col xs={2}>\n                            <SystemOptions\n                                onNewRevision={()=>handleNewRev()}\n                                onDeleteSystem={onDeleteSystem}\n                            />\n                        </Col>\n                    </Row>\n                </Grid>         \n            </div>\n            {isExpanded ? <RevList revSelectedID={revSelectedID} onRevSelected={(id)=>onRevSelected(id)} sysID={sysID}/> : null}           \n        </div>\n    )\n}","import React, {useState} from 'react';\nimport { Button, Form, InputNumber, InputPicker, Modal, Input, Grid, Row, Col, ButtonToolbar, Schema} from 'rsuite';\nimport { SystemDB } from '../../../Database/SystemDB/SystemDB';\nimport Alert from '../../../misc/Alert';\nimport systemChoices from '../../../misc/SystemChoices/systemChoices.json';\n\n\nconst validationModel  = Schema.Model({\n    System: Schema.Types.NumberType().min(0, \"This value is required\")\n})\n\nconst NewSystemModal = () => {\n    const [selectedSystemIndex, setSelectedSystemIndex] = useState(null);\n    const [owner, setOwner] = useState('');\n    const [technician, setTechnician] = useState('');\n    const [utfNumber, setutfNumber] = useState(0);\n    const [show, setShow] = useState(false);\n\n    const clearInputs = () => {\n        setSelectedSystemIndex(null); setTechnician(''); setOwner(''); setutfNumber(0);\n    }\n\n    const onNewSystem = async () => {\n        if(selectedSystemIndex===null){return}\n        const sysParent = systemChoices.systems[selectedSystemIndex].data;\n        const {title, partNumber, sysNumber} = sysParent;\n        try{\n            await SystemDB.create(title, owner, technician, sysNumber, partNumber);\n            clearInputs();\n            setShow(false);\n            Alert.success(`New System ${title} Created`);\n        }catch(err){\n            Alert.error(err);\n        }\n    }\n\n    return (\n    <>\n        <Button color=\"blue\" appearance='primary' onClick={()=> setShow(true)} style={{marginBottom: '20px', display: 'block'}}>New System</Button>\n        <Modal size='xs' open={show} onClose={()=>setShow(false)}>\n            <Modal.Header><Modal.Title>New System</Modal.Title></Modal.Header>\n            <Modal.Body>\n                <Form fluid model={validationModel} onSubmit={()=> onNewSystem()}>\n                    <Form.Group controlId='System' style={{marginBottom: '10px'}}>\n                        <Form.ControlLabel>Title</Form.ControlLabel>\n                            <Form.Control\n                                value={selectedSystemIndex}\n                                onChange={(e) => {\n                                   setSelectedSystemIndex(e)\n                                }} \n                                size='lg' \n                                placeholder='LDL, HST, ...' \n                                accepter={InputPicker}\n                                data={systemChoices.systems}\n                                name='System'\n                            />\n                    </Form.Group>\n                    <Form.Group style={{marginBottom: '10px'}}>\n                        <Form.ControlLabel style={{fontSize: '14px'}}>UTF Number</Form.ControlLabel>\n                        <Form.Control name='UTF Number' value={utfNumber} onChange={(e) => setutfNumber(e)} size='xs' style={{width: '80px'}} placeholder={0} min={0} scrollable defaultValue={0} accepter={InputNumber} />\n                    </Form.Group>\n                    <Grid style={{padding: 0}} fluid>\n                        <Row>\n                            <Col xs={12}>\n                                <Form.Group>\n                                    <Form.ControlLabel style={{fontSize: '16px'}}>Technician</Form.ControlLabel>\n                                    <Form.Control name='technician' value={technician} onChange={(e) => setTechnician(e)} size='sm' accepter={Input} />\n                                </Form.Group>\n                            </Col>\n                            <Col xs={12}>\n                                <Form.Group>\n                                    <Form.ControlLabel style={{fontSize: '16px'}}>Owner</Form.ControlLabel>\n                                    <Form.Control name='owner' value={owner} onChange={(e) => setOwner(e)} size='sm' accepter={Input} />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                    </Grid>\n                    <Form.Group>\n                        <ButtonToolbar className='mt-3'>\n                            <Button type='submit' appearance='primary'>Create New System</Button>\n                            <Button onClick={()=>setShow(false)} appearance='subtle'>Cancel</Button>\n                        </ButtonToolbar>\n                    </Form.Group>\n                </Form>\n            </Modal.Body>\n        </Modal>\n    </>\n    )\n}\n\nexport default NewSystemModal;","import React, {useState} from 'react';\nimport {Input, InputGroup, Loader, List} from 'rsuite';\nimport { Close } from '@rsuite/icons';\n\nimport {useMediaQuery, useSystems} from '../../misc/customHooks'\nimport { System } from './System/System';\nimport NewSystemModal from './SystemModal/NewSystemModal';\nimport { SystemDB } from '../../Database/SystemDB/SystemDB';\n\n\n// const selectedStyle = {\n//     borderLeft: '4px solid lightgreen',\n//     transition: '.1s'\n// }\n\nconst findSearchResults = (systems, searchText) => {\n    if(searchText===''){return systems}\n\n    const results = systems.filter(sys => {\n        const {title} = sys\n        if(!title){return false}\n        return title.toLowerCase().includes(searchText.toLowerCase())\n    })\n\n    return results;\n}\n\nconst SideBar = ({onNewRevision, onRevSelected, sysSelectedID, revSelectedID}) => {\n    const [searchText, setSearchText] = useState('');\n\n    const isDesktop = useMediaQuery('(min-width: 1200px)');\n    const {systems, isUpdating} = useSystems();\n\n    const searchResults =  findSearchResults(systems, searchText);\n\n    const onDeleteSystem = async id => {\n        await SystemDB.delete(id);\n    }\n \n   return (\n        <div className='br-r h-100 p-1' style={{}}>\n            <NewSystemModal/>\n            <InputGroup style={{width: '80%'}} className='mx-auto'>\n                <Input value={searchText} onChange={(e) => setSearchText(e)} placeholder='Search' size='md'/>\n                <InputGroup.Button onClick={()=>setSearchText('')}>\n                    <Close/>\n                </InputGroup.Button>\n            </InputGroup>\n\n            <div className='mt-2'>\n                <div><strong>{systems.length}</strong> Total Descriptions</div>\n                <span><strong>{searchResults.length}</strong> Descriptions Shown</span>\n            </div>\n            <hr style={{marginTop: '5px', marginBottom: '5px'}}/>\n            <div className='v-scroll' style={{height: isDesktop ? '66vh' : '20vh'}}>\n            {isUpdating ? <Loader/> : null}\n            <List hover autoScroll>\n                {searchResults.map(sys => {\n                    const {title, sysNumber, technician, owner, partNumber, id, revIDs} = sys;\n                    return <System\n                        title={title}\n                        owner={owner}\n                        technician={technician}\n                        sysNumber={sysNumber}\n                        partNumber={partNumber}\n                        revIDs={revIDs}\n                        key={id}\n                        sysID={id}\n                        isSelected={sysSelectedID===id}\n                        revSelectedID={revSelectedID}\n                        onNewRevision={()=>onNewRevision(id)}\n                        onDeleteSystem={()=>onDeleteSystem(id)}\n                        onRevSelected={(revID)=>onRevSelected(id, revID)}\n                    />\n                })}\n            </List>\n                {searchResults.length===0 && !isUpdating ? <span className='muted-c'>No Systems Were Found.</span> : null}\n            </div>\n        </div>\n    )\n\n}\nexport default SideBar;","import React from 'react';\nimport { useTheme } from '../../Contexts/theme.context';\n\n\nconst styles = {\n    height: '100vh'\n}\n\nconst MainStage = ({newStageComp, defaultComp, style}) => {\n    const isDark = (useTheme()) === \"dark\";\n    return (\n        <div style={{...styles, ...style, backgroundColor: isDark ? '#282828' : '#e6ebeb'}}>\n        {newStageComp}\n        {defaultComp}\n    </div>\n    )\n}\nexport default MainStage;","import React from 'react';\nimport MainStage from '../MainStage';\n\nconst DefaultMainStage = ({style}) => (\n        <MainStage\n            style={style}\n            defaultComp={\n                <h1 \n                    className='muted-c' \n                    style={{paddingTop: '10vh', fontSize: '2vw', textAlign: 'center'}}\n                >        \n                    Create a <strong>New Description</strong> or Edit a <strong >Previous Version</strong>\n                </h1>\n            }\n        />\n    );\n\nexport default DefaultMainStage;","import React, { createContext, useContext, useState} from 'react';\n\nconst ToolbarContext = createContext();\n\nexport const ToolBarProvider = ({children}) => {\n    const [isUpdating, setIsUpdating] = useState(false);\n\n    return <ToolbarContext.Provider value={{isUpdating, setIsUpdating}}>\n        {children}\n    </ToolbarContext.Provider>\n}\n\nexport const useToolBar = () => useContext(ToolbarContext);\n","import { get, ref, set } from \"firebase/database\";\n\nimport Alert from \"../../../../misc/Alert\";\nimport { database } from \"../../../../misc/firebase\";\n\n\n\nexport class NotesDB {\n    static read = async (revID) => {\n        try{\n            if(!revID){throw new Error('Missing parent ID')}\n\n            const db = ref(database, `Notes/${revID}`)\n\n            const data = await get(db);\n\n            return data.val();\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n\n    static update = async (revID, v) => {\n        try{\n            if(!revID){throw new Error('Missing parent ID')}\n\n            const db = ref(database, `Notes/${revID}`)\n\n            await set(db, v)\n\n        }catch(err){\n            Alert.error(err.message);\n        }\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Button, Drawer, Input } from 'rsuite';\nimport { useToolBar } from '../../../Contexts/toolbar.context';\nimport {NotesDB} from '../../../Database/SystemDB/RevisionDB/NotesDB/NotesDB';\n\nexport const NotesDrawer = ({isOpen,revID,onClose}) => {\n    const [isEnlarged, setIsEnlarged] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [value, setValue] = useState('');\n    \n    const {setIsUpdating}=useToolBar();\n\n    useEffect(()=> {\n        const getValue = async () => {\n            setValue('');\n            const v = await NotesDB.read(revID);\n            setValue(v);\n            setIsLoading(false);\n        }\n\n        getValue();\n    }, [revID]);\n\n    const handleUpdate = async (v) => {\n        setIsUpdating(true);\n        await NotesDB.update(revID, v);\n        setIsUpdating(false);\n    }\n\n\n    return (\n        <Drawer size={isEnlarged ? 'lg' : 'xs'} backdrop={false} placement='bottom' open={isOpen} onClose={onClose}>\n        <Drawer.Header>\n        <Drawer.Title>Notes</Drawer.Title>\n        <Drawer.Actions>\n            <Button onClick={()=>setIsEnlarged(v=>!v)}>Expand</Button>\n            <Button onClick={onClose} appearance=\"primary\">\n            Close\n            </Button>\n        </Drawer.Actions>\n        </Drawer.Header>\n        <Drawer.Body>\n            <Input as='textarea' value={value} disabled={isLoading} onChange={(v) => {setValue(v); handleUpdate(v)}} rows={isEnlarged ? 20 : 5} placeholder=\"Write any related notes here...\"/>\n        </Drawer.Body>\n    </Drawer>\n    )\n}\n\n","import { CheckRound, DoingRound } from '@rsuite/icons';\nimport React, { useEffect, useState } from 'react';\n\nlet to;\nconst SavedIndicator = ({isUpdating, persistFor=1000}) => {\n    const [delayedIsUpdating, setDelayedIsUpdating] = useState(false);    \n    useEffect(() => {\n        clearTimeout(to);\n        if(!isUpdating){\n            setDelayedIsUpdating(true);\n            to = setTimeout(() => {\n                setDelayedIsUpdating(false);\n            }, persistFor);\n        }\n    }, [isUpdating, persistFor])\n\n\n\n    return (\n        <>\n        {delayedIsUpdating ? <DoingRound pulse/> : <CheckRound style={{color: 'lightgreen'}}/>}\n        </>\n    );\n};\n\nexport default SavedIndicator;","import { ArrowDownLine } from '@rsuite/icons';\nimport React, {useState } from 'react';\n\n\nconst CustomPanel = ({defaultExpand=false, header, children}) => {\n    const [isExpanded, setIsExpanded] = useState(defaultExpand);\n\n    const handleClick = () => {setIsExpanded(v=>!v)}\n\n\n    return (\n        <div className='rs-panel rs-panel-in rs-panel-collapsible rs-panel-bordered rs-panel-shaded mb-1'>\n               <div type='button' tabIndex={0} role=\"button\" styling=\"link\" onKeyDown={handleClick} onClick={handleClick} className='rs-panel-header' style={{paddingBottom: '5px', paddingTop: '5px'}}>\n                        <ArrowDownLine flip={isExpanded ? 'vertical' : null} className='rs-icon' style={{top: '10px'}}/>\n                        <h5 className='rs-panel-title'>{header}</h5>\n                </div>\n                    {isExpanded ?  \n                        <div className='rs-anim-collapse rs-anim-in rs-panel-collapse' style={{height: 'auto'}}>\n                            <div className='rs-panel-body'>\n                                {children}\n                            </div>\n                        </div> \n                    : null}\n        </div>\n    );\n};\n\nexport default CustomPanel;","import React from 'react';\nimport {Grid, Row, Col} from 'rsuite';\n\nexport const GridHeader = ({dataChildren, actionChildren}) => {\n    return (\n        <Grid fluid> \n            <Row>\n                <Col xs={18}>\n                    <div style={{textAlign: 'left', fontSize: '12px', marginTop: '3px'}} className='muted-c'>\n                        {dataChildren}\n                    </div>\n                </Col>\n                <Col xs={6}>\n                    <div style={{textAlign: 'right'}}>\n                        {actionChildren}\n                    </div>\n                </Col>\n            </Row>\n        </Grid>\n    )\n}\n","import React, { useRef } from 'react'\nimport { Button, Dropdown, Popover, Whisper } from 'rsuite';\nimport MoreIcon from '@rsuite/icons/More';\n\n\nconst OptionsPopOver = React.forwardRef(({ handleSelect, ...rest }, ref) => (\n    <Popover ref={ref} {...rest} full>\n      <Dropdown.Menu onSelect={(n, e)=>{handleSelect(n); e.stopPropagation()}}>\n        <Dropdown.Item eventKey={-1} className='muted-c'>Track</Dropdown.Item> \n        <Dropdown.Item eventKey={2}>Delete</Dropdown.Item>\n      </Dropdown.Menu>\n    </Popover>\n));\n\n\n\nexport const CompItemOptions = ({onTrack, onDelete}) => {\n  const ref = useRef();\n  const handleSelect = n => {\n    if(n===1){\n        onTrack();\n    }else if(n===2){\n        onDelete();\n    }\n\n    ref.current.close();\n  }\n  return (\n    <Whisper\n        placement=\"rightStart\"\n        controlId=\"control-id-with-dropdown\"\n        trigger=\"click\"\n        ref={ref}\n        onClick={(e)=>e.stopPropagation()}\n        speaker={<OptionsPopOver handleSelect={e=>handleSelect(e)}/>}                              \n    >\n      <Button appearance='subtle' size='xs'><MoreIcon/></Button>\n    </Whisper>\n  )\n}\n","import React from 'react';\nimport { DatePicker } from 'rsuite';\n\nconst MyDateInput = ({value, onChange, size='md', style, disabled}) => {\n    const date =  Number.isNaN(Date.parse(value)) ? new Date() : new Date(value);\n\n    const handleChange = val => {\n       const d = new Date(val);\n        onChange(d.toDateString());\n    }\n\n    return (\n        <DatePicker cleanable={false} size={size} onChange={handleChange} style={{...style, display: 'block'}} disabled={disabled} value={date}/>\n    );\n};\n\nexport default MyDateInput;","import React from 'react';\nimport { InputNumber } from 'rsuite';\n\n\nconst width = {\n    xs: '15px',\n    sm: '70px',\n    md: '150px',\n    lg: '100%'\n}\n\nconst getWidth = str => {\n    if(!width[str]){return width.md}\n    return width[str];\n}\n\nconst MyNumberInput = ({value, onChange, size='md', style, disabled, min=0}) => {\n    const width = getWidth(size);\n    return (\n        <InputNumber min={min} disabled={disabled} value={value} onChange={onChange} size={size} style={{width, ...style}}/>\n    );\n};\n\nexport default MyNumberInput;","import React, { useEffect, useState } from 'react';\nimport { Input } from 'rsuite';\nimport { useToolBar } from '../../../../../../../Contexts/toolbar.context';\nimport { HardWareDataDB } from '../../../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/HarwareDataDB';\nimport MyDateInput from '../../../../../../Custom Inputs/MyDateInput';\nimport MyNumberInput from '../../../../../../Custom Inputs/MyNumberInput';\n\nconst inputs = {\n    Text: Input,\n    Number: MyNumberInput,\n    Date: MyDateInput\n}\n\nconst getInput = str => {\n    if(!inputs[str]){return inputs.Text}\n    return inputs[str]\n}\n\nconst HardInput = ({title, itemID, inputType='Text'}) => {\n    const MyInput = getInput(inputType);\n    const [value, setValue] = useState('');\n    const [disabled, setDisabled] = useState(false);\n    const {setIsUpdating} = useToolBar();\n\n    useEffect(() => {\n        const getInitVal = async () => {\n            setDisabled(true);\n            const data = await HardWareDataDB.readSpecific(itemID, title);\n            if(data){setValue(data.value || '')}\n            setDisabled(false)\n        }\n        getInitVal();\n    }, [itemID, title]);\n\n    const handleChange = async val => {\n        setValue(val);\n        setIsUpdating(true);\n        await HardWareDataDB.update(itemID, title, val);\n        setIsUpdating(false);\n    }\n    \n    return (\n        <div>\n            <label style={{fontSize: '14px'}} htmlFor={title}>{title}</label>\n            <MyInput size='sm' disabled={disabled} onChange={(v)=>handleChange(v)} value={value}/>\n        </div>\n    );\n};\n\nexport default HardInput;","import React, { useEffect, useState } from 'react';\nimport { Input } from 'rsuite';\nimport { useToolBar } from '../../../../../../../Contexts/toolbar.context';\nimport { SoftWareDataDB } from '../../../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/Data/SoftwareDataDB';\nimport MyDateInput from '../../../../../../Custom Inputs/MyDateInput';\nimport MyNumberInput from '../../../../../../Custom Inputs/MyNumberInput';\n\nconst inputs = {\n    Text: Input,\n    Number: MyNumberInput,\n    Date: MyDateInput\n}\n\nconst getInput = str => {\n    if(!inputs[str]){return inputs.Text}\n    return inputs[str]\n}\n\nconst SoftInput = ({title, itemID, inputType='Text'}) => {\n    const MyInput = getInput(inputType);\n    const [value, setValue] = useState('');\n    const [disabled, setDisabled] = useState(false);\n    const {setIsUpdating} = useToolBar();\n\n    useEffect(() => {\n        const getInitVal = async () => {\n            setDisabled(true);\n            const data = await SoftWareDataDB.readSpecific(itemID, title);\n            if(data){setValue(data.value || '')}\n            setDisabled(false)\n        }\n        getInitVal();\n    }, [itemID, title]);\n\n    const handleChange = async val => {\n        setValue(val);\n        setIsUpdating(true);\n        await SoftWareDataDB.update(itemID, title, val);\n        setIsUpdating(false);\n    }\n    \n    return (\n        <div>\n            <label style={{fontSize: '14px'}} htmlFor={title}>{title}</label>\n            <MyInput size='sm' disabled={disabled} onChange={(v)=>handleChange(v)} value={value}/>\n        </div>\n    );\n};\n\nexport default SoftInput;","import React from 'react';\nimport {Col, Grid, Row } from 'rsuite';\nimport { useToolBar } from '../../../../../../Contexts/toolbar.context';\nimport { ComponentItemDB } from '../../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/ComponentItemDB';\nimport Alert from '../../../../../../misc/Alert';\nimport CustomPanel from '../../../../../misc/Custom Panel/CustomPanel';\nimport { GridHeader } from '../../../../../misc/Custom Panel/GridHeader';\nimport { dispTime } from '../../../../../../misc/helperfunc';\nimport { CompItemOptions } from './CompItemOptions';\nimport HardInput from './Local Inputs/HardInput';\nimport SoftInput from './Local Inputs/SoftInput';\n\nconst CompItem = ({name, birthdate, format, itemID, parentID}) => {\n    const {setIsUpdating} = useToolBar();    \n    const dispSoftwareData = () => {\n        if(!format || !format.Software){return null}\n        \n        const dataTitles = Object.keys(format.Software);\n        return dataTitles.map((title, i) => {\n            return (\n                <Col key={i} xs={24} lg={12}>\n                    <SoftInput title={title} key={i} itemID={itemID} inputType={format.Software[title].input}/>\n                </Col>\n            )\n        })\n    }\n\n    const dispHardwareData = () => {\n        if(!format || !format.Hardware){return null}\n        \n        const dataTitles = Object.keys(format.Hardware);\n        return dataTitles.map((title, i) => {\n            return (\n                <Col key={i} xs={24} lg={12}>\n                    <HardInput title={title} key={i} itemID={itemID} inputType={format.Hardware[title].input}/>\n                </Col>\n            )\n        })\n    }\n\n\n    const softInputs = dispSoftwareData();\n    const hardInputs = dispHardwareData();\n\n\n    const handleDelete = async () => {\n        try{\n            setIsUpdating(true);\n            await ComponentItemDB.deleteSpecific(parentID, itemID);\n            Alert.success(`Successfully deleted component item`)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n    return (\n        <CustomPanel defaultExpand={false} header={name}>\n            <GridHeader\n                dataChildren={<span>{dispTime(birthdate)}</span>}\n                actionChildren={\n                    <CompItemOptions onDelete={handleDelete}/>\n                }\n            />\n            \n                <Grid fluid>\n                    <Row>\n                        {softInputs ? <h5 className='mb-2' style={{fontSize: '14px', borderBottom: '1px solid', fontWeight: '400'}}>Software</h5> : null}\n                        {softInputs}\n                    </Row>\n                    <Row>\n                        {hardInputs ? <h5 className='mb-2 mt-2' style={{fontSize: '14px', borderBottom: '1px solid', fontWeight: '400'}}>Hardware</h5> : null}\n                        {hardInputs}\n                    </Row>\n                </Grid>\n                \n        </CustomPanel>\n    );\n};\n\nexport default CompItem;","import React from 'react';\nimport { Button, Loader } from 'rsuite';\nimport { useToolBar } from '../../../../../Contexts/toolbar.context';\nimport { ComponentItemDB } from '../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentItemDB/ComponentItemDB';\nimport Alert from '../../../../../misc/Alert';\nimport CustomPanel from '../../../../misc/Custom Panel/CustomPanel';\nimport { GridHeader } from '../../../../misc/Custom Panel/GridHeader';\nimport { useCompItems } from '../../../../../misc/customHooks';\nimport { dispTime } from '../../../../../misc/helperfunc';\nimport CompItem from './CompItem/CompItem';\n\nconst Comp = ({name, birthdate, compID, format}) => {\n    const {compItems, isUpdating} = useCompItems(compID);\n    const {setIsUpdating} = useToolBar();\n\n    const showCompItems = () => {\n        if(isUpdating){return <Loader/>}\n        if(!compItems.length){return \"Add new items\"}\n\n        return compItems.map((v, i) => {\n            const {id, birthdate} = v;\n            return <CompItem birthdate={birthdate} parentID={compID} itemID={id} key={id} name={i+1} format={format}/>\n        })\n    }\n\n    const newCompItem = async () => {\n        setIsUpdating(true);\n        try{\n            await ComponentItemDB.create(compID);\n            Alert.success('Successfully created new component item')\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n    return (\n        <CustomPanel defaultExpand header={name}>\n            <GridHeader\n                dataChildren={\n                    <div>\n                        <div>{compItems ? compItems.length : 0} items</div>\n                        <span>{dispTime(birthdate)}</span>\n                    </div>\n            }\n                actionChildren={<Button size='xs' color='blue' appearance='ghost' onClick={newCompItem}>Add</Button>}\n            />\n            <hr style={{marginTop: '5px'}}/>\n            {showCompItems()}\n        </CustomPanel>\n    );\n};\n\nexport default Comp;","import React from 'react';\nimport { Button, Modal } from 'rsuite';\n\nconst CompDeleteModal = ({show, onClose, onDelete, name}) => {\n    return (\n        <Modal open={show} onClose={onClose}>\n            <Modal.Header>\n                <Modal.Title>\n                    Are you sure ?\n                </Modal.Title>\n                <Modal.Body>\n                    <p>\n                        Are you sure you want to delete the <strong>{name}</strong> component?\n                    </p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button color='red' appearance='primary' onClick={onDelete}>Yes</Button>\n                    <Button appearance='subtle' onClick={onClose}>No</Button>\n                </Modal.Footer>\n            </Modal.Header>\n        </Modal>\n    );\n};\n\nexport default CompDeleteModal;","import React, { useState } from 'react';\nimport { Button } from 'rsuite';\nimport { useToolBar } from '../../../../../../Contexts/toolbar.context';\nimport { ComponentDB } from '../../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB';\nimport Alert from '../../../../../../misc/Alert';\nimport CompDeleteModal from './CompDeleteModal';\n\nconst ActiveComp = ({name, id, subSysID, style}) => {\n    const [showModal, setShowModal] = useState(false);\n    const {setIsUpdating} = useToolBar();\n\n    const handleDelete = async () => {\n        setIsUpdating(true);\n        setShowModal(false);\n        try{\n            await ComponentDB.deleteSpecific(subSysID, id);\n            Alert.success(`Successfully deleted ${name}`)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false)\n    }\n\n     return (\n        <>\n            <Button style={style} color='green' appearance='primary' size='xs' onClick={()=>setShowModal(true)}> - {name} </Button>\n            <CompDeleteModal show={showModal} name={name} id={id} onClose={()=>setShowModal(false)} onDelete={handleDelete}/>\n        </>\n    );\n};\n\nexport default ActiveComp;","import React from 'react';\nimport { Button, Grid, Row, Col } from 'rsuite';\nimport { useToolBar } from '../../../../../Contexts/toolbar.context';\nimport { ComponentDB } from '../../../../../Database/SystemDB/RevisionDB/SubSystemDB/ComponentDB/ComponentDB';\nimport Alert from '../../../../../misc/Alert';\nimport ActiveComp from './misc/ActiveComp';\n\nconst ComponentStatus = ({subSysID, activeComps, possibleComps})  => {\n    const {setIsUpdating} = useToolBar();\n\n    const handleCreate = async name => {\n        setIsUpdating(true);\n        try{\n            await ComponentDB.create(subSysID, name);\n            Alert.success(`New ${name} component created`);\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n    const dispActiveComps = () => {\n        return  activeComps.map(v => {\n            const {name, id} =v;\n            return (\n                <Col xs={12} md={8} lg={4} key={id}>\n                    <ActiveComp style={{marginBottom: '5px'}} key={id} subSysID={subSysID} id={id} name={name}/>\n                </Col>)\n        })\n    }\n\n    const dispDisabledComps = () => {\n        return possibleComps.map(name => {\n            //  if component already exists in DB\n            if(activeComps.find(ac => ac.name===name)){return null}\n\n            return (\n                <Col key={name} xs={12} md={8} lg={4}>\n                    <Button size='xs' className='mr-2 mb-1' style={{marginBottom: '5px'}} onClick={()=>handleCreate(name)}>\n                        + {name}\n                    </Button>\n                </Col>)\n        })\n    }\n\n    return (\n        <div>\n            <Grid fluid>\n                <Row>\n                    <h5 style={{fontSize: '14px'}}>Active</h5>\n                    {dispActiveComps()}\n                </Row>\n                <Row>\n                    <h5 style={{fontSize: '14px'}}>Disabled</h5>\n                    {dispDisabledComps()}\n                </Row>\n            </Grid>\n        </div>\n    );\n};\n\nexport default ComponentStatus;","import React from 'react';\nimport {Grid, Loader, Row, Col } from 'rsuite';\nimport { useComponents } from '../../../../misc/customHooks';\nimport Comp from './Comp/Comp';\nimport ComponentStatus from './ComponentStatus/ComponentStatus';\nimport dataFormat from '../../../../misc/dataFormat.json';\n\nconst ComponentHandler = ({subSysID, dataKey}) => {\n    const {comps, isUpdating} = useComponents(subSysID);\n    const possibleComps = dataFormat[dataKey];\n\n    if(!possibleComps){return \"Data is not specified for this subsystem\"}\n\n    if(isUpdating){return <Loader/>}\n\n    return (\n        <div style={{padding: '5px 15px'}}>\n            <ComponentStatus activeComps={comps} subSysID={subSysID} possibleComps={Object.keys(possibleComps)}/>\n            <hr/>\n            <div style={{height: '500px', overflowY: 'scroll'}}>\n                <Grid fluid>\n                    <Row>\n                        {comps.map(v=> {\n                            const {name, birthdate, id} = v;\n                            return (\n                                <Col xs={24} md={12} lg={8} key={id}>\n                                    <Comp\n                                        name={name}\n                                        birthdate={birthdate}\n                                        key={id}\n                                        compID={id}\n                                        format={possibleComps[name]}\n                                    />\n                                </Col>\n                            )\n                        })}\n                    </Row>\n                </Grid>\n            </div>\n        </div>\n    );\n};\n\nexport default ComponentHandler;","import React, { useEffect, useState } from 'react';\nimport { Nav } from 'rsuite';\nimport CloseIcon from '@rsuite/icons/Close';\nimport { SubSystemDB } from '../../../Database/SystemDB/RevisionDB/SubSystemDB/SubSystemDB';\nimport ComponentHandler from './ComponentHandler/ComponentHandler';\nimport Alert from '../../../misc/Alert';\nimport { useToolBar } from '../../../Contexts/toolbar.context';\n\nconst SubSystemNav = ({subSystems=[], revID}) => {\n    const {setIsUpdating} = useToolBar();\n    const [selI, setSelI] = useState(null);\n\n    useEffect(() => {\n        if(subSystems.length>0){\n            setSelI(0);\n        }else{\n            setSelI(null);\n        }\n    }, [revID, subSystems.length]);\n\n    const handleDelete = async (id, name) => {\n        setIsUpdating(true);\n        try{\n            await SubSystemDB.deleteSpecific(revID, id);\n\n\n            if(selI-1 >=0){\n                setSelI(i=>i-1);\n            }else{\n                setSelI(null);\n            }\n\n\n            Alert.success(`Deleted subsystem ${name}`)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n    const createSubSystemNavs = () => (\n        subSystems.map((subSys, i) => {\n            const {name, id} = subSys;\n            const isActive = i===selI;\n            const btnColor = isActive ? 'red' : null;\n            return (\n                <Nav.Item \n                    onClick={()=>setSelI(i)} \n                    key={id} \n                    active={isActive}\n                >\n                    {name}\n                    <button \n                        style={{background: 'transparent', color: btnColor, fontSize: '12px', position: 'relative', top:'-2px', left: '3px'}} \n                        type='button'\n                        onClick={(e) => {e.stopPropagation(); handleDelete(id, name)}}\n                        disabled={!isActive}\n                    > \n                        <CloseIcon/> \n                    </button>\n                </Nav.Item>\n            )\n        })\n    )\n\n    return (\n        <div>\n            <Nav appearance=\"tabs\">\n                {createSubSystemNavs()}\n            </Nav>\n            {selI!==null && subSystems.length>0 && subSystems[selI] ? \n                <ComponentHandler subSysID={subSystems[selI].id} dataKey={subSystems[selI].name}/>\n            :\n                <div className='muted-c mx-auto w-100'>\n                    Select a subsystem to begin editing.\n                </div>    \n            }\n        </div>\n    );\n};\n\nexport default SubSystemNav;","import React from 'react';\nimport { Button } from 'rsuite';\nimport { useToolBar } from '../../../Contexts/toolbar.context';\nimport { SubSystemDB } from '../../../Database/SystemDB/RevisionDB/SubSystemDB/SubSystemDB';\nimport Alert from '../../../misc/Alert';\n\nconst possSubs = {\n    general: 'General',\n    atc: 'ATC',\n    acses: 'ACSES'\n}\n\n\nconst SubSystems = ({subSystems, revID}) => {\n    const {setIsUpdating} = useToolBar();\n    \n    const handleAdd = async name => {\n        setIsUpdating(true);\n        try{\n            await SubSystemDB.create(revID, name);\n            Alert.success(`Created new subsystem ${name}`)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n    const hasATC = subSystems.find(v => v.name===possSubs.atc)\n    const hasACSES = subSystems.find(v => v.name===possSubs.acses)\n    const hasGeneral = subSystems.find(v => v.name===possSubs.general)\n    return (\n       <div style={{marginTop: '15px'}}>\n            {hasGeneral ? null : <Button onClick={()=>handleAdd(possSubs.general)} appearance='ghost' size='xs' style={{display: 'block', marginBottom: '5px'}}>+ General</Button> }\n            {hasATC ? null : <Button onClick={()=>handleAdd(possSubs.atc)} appearance='ghost' size='xs' style={{display: 'block', marginBottom: '5px'}}>+ ATC</Button> }\n            {hasACSES ? null : <Button onClick={()=>handleAdd(possSubs.acses)} appearance='ghost' size='xs'>+ ACSES</Button> }\n       </div>\n    );\n};\n\nexport default SubSystems;","import React, { useEffect, useState } from 'react'\nimport { Input } from 'rsuite'\nimport { useToolBar } from '../../../Contexts/toolbar.context'\nimport { RevisionDB } from '../../../Database/SystemDB/RevisionDB/RevisionDB'\nimport Alert from '../../../misc/Alert'\nimport MyNumberInput from '../../Custom Inputs/MyNumberInput'\n\nexport const TitleBar = ({sysID, revID}) => {\n    const {setIsUpdating} = useToolBar();\n    const [isDisabled, setIsDisabled] = useState(false);\n    const [name, setName] = useState('');\n    const [revNum, setRevNum] = useState(0);\n\n\n    useEffect(() => {\n        const loadRev = async () => {\n            setIsDisabled(true);\n            try{\n                const {name, revNumber} =  await RevisionDB.readSpecific(sysID, revID);\n                setName(name || '');\n                setRevNum(revNumber || 0);\n            }catch(err){\n                Alert.error(err.message);\n            }\n            setIsDisabled(false);\n        }\n\n        loadRev();\n\n    }, [revID, sysID])\n\n    const handleUpdate = async (key, val) => {\n        setIsUpdating(true);\n        try{\n            await RevisionDB.updateByKey(sysID, revID, key, val)\n        }catch(err){\n            Alert.error(err);\n        }\n        setIsUpdating(false);\n    }\n\n\n    return (\n        <>\n            <div>\n                <Input value={name} disabled={isDisabled} size='lg' onChange={(v) => {handleUpdate('name', v); setName(v)}} style={{textAlign: 'center', fontSize: '24px'}} placeholder='Revision Name'/>\n            </div>\n            <div >\n                <label style={{fontSize: '14px'}} htmlFor='rev'>Rev. Number</label>\n                <MyNumberInput value={revNum} disabled={isDisabled} onChange={(v) => {handleUpdate('revNumber', v); setRevNum(v)}} size='sm'/>\n            </div>\n        </>\n    )\n}\n","import { faRedo, faUndo } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Button, ButtonGroup, ButtonToolbar } from 'rsuite';\nimport { useToolBar } from '../../../Contexts/toolbar.context';\nimport SavedIndicator from './SavedIndicator';\n\n\n\nconst ToolBar = () => {\n    const {isUpdating} = useToolBar();\n    return (\n        <div>\n            <ButtonToolbar style={{display: 'inline'}}>\n                <ButtonGroup>\n                    <Button size='xs' appearance='subtle'><FontAwesomeIcon icon={faUndo}/></Button>\n                    <Button size='xs' appearance='subtle'><FontAwesomeIcon icon={faRedo}/></Button>\n                </ButtonGroup>\n            </ButtonToolbar>\n            <span style={{marginRight: '5px', marginLeft: '5px', borderRight: '1px solid white'}}/>\n            <SavedIndicator isUpdating={isUpdating}/>\n        </div>\n    );\n};\n\nexport default ToolBar;","import React from 'react';\nimport {Button, Grid, Row, Col } from 'rsuite';\n\nimport MainStage from '../MainStage';\nimport { generateDocument } from '../../../misc/helperfunc';\nimport {useModal, useSubSystems} from '../../../misc/customHooks';\nimport { NotesDrawer } from '../misc/NotesDrawer';\nimport SubSystemNav from '../SubSystem/SubSystemNav';\nimport SubSystems from '../SubSystem/SubSystems';\nimport { ToolBarProvider } from '../../../Contexts/toolbar.context';\nimport { TitleBar } from '../misc/TitleBar';\nimport ToolBar from '../misc/ToolBar';\n\n\n\nconst NewMainStage = ({sysID, revID, style}) => {\n    const subSystems = useSubSystems(revID);\n\n    const {isOpen, onOpen, onClose} = useModal();\n\n    return (\n        <MainStage\n            style={style}\n            newStageComp={\n                <>\n                    <ToolBarProvider>\n                        <div className='p-1 w-100 mb-1'>\n                            <Grid fluid>\n                                <Row>\n                                    <Col xs={8}>\n                                        <Button style={{marginRight: '10px'}} onClick={()=>generateDocument(sysID, revID)} color='green' appearance=\"primary\">Generate File</Button>\n                                        <Button appearance='subtle' onClick={onOpen}>Notes</Button>\n                                        <SubSystems subSystems={subSystems} revID={revID}/>\n                                    </Col>\n                                    <Col xs={8}>\n                                        <TitleBar revID={revID} sysID={sysID}/> \n                                    </Col>\n                                    <Col xs={8}>\n                                        <div style={{float: 'right'}}>\n                                            <ToolBar/>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Grid>\n                        </div>\n                        <SubSystemNav subSystems={subSystems} revID={revID}/>\n                        <NotesDrawer \n                            isOpen={isOpen} \n                            onClose={onClose} \n                            revID={revID}\n                        />\n                    </ToolBarProvider>\n                </>\n            }\n        />\n    );\n};\n\nexport default NewMainStage;","import React, {useState} from 'react';\nimport { Grid, Row, Col} from \"rsuite\";\n\nimport { ThemeProvider } from '../../Contexts/theme.context';\nimport { RevisionDB } from '../../Database/SystemDB/RevisionDB/RevisionDB';\nimport HeaderBar from '../misc/HeaderBar';\nimport SideBar from '../SideBar/SideBar';\nimport DefaultMainStage from '../MainStage/Extensions/DefaultMainStage';\nimport NewMainStage from '../MainStage/Extensions/NewMainStage';\nimport MyFooter from '../misc/Footer';\n\nexport default function Main() {\n    const [theme, setTheme] = useState('dark')\n    const [revID, setRevID] = useState(null);\n    const [sysID, setSysID] = useState(null);\n  \n    const onNewRevision = async (sysID) => {\n      const revID = await RevisionDB.create(sysID);\n      setSysID(sysID);\n      setRevID(revID);\n    }\n    \n    return (\n        <ThemeProvider theme={theme}>\n            <div>\n                <HeaderBar setTheme={(t) => setTheme(t)}/>\n                <Grid fluid  style={{padding:0}}>\n                    <Row >\n                    <Col xs={24} lg={7} >\n                        <SideBar \n                        revSelectedID={revID}\n                        sysSelectedID={sysID}\n                        onNewRevision={(sysID)=>onNewRevision(sysID)}\n                        onRevSelected={(sysID, revID)=> {setSysID(sysID); setRevID(revID); }}\n                        />\n                    </Col>\n                    <Col xs={24} lg={17} >\n                        {revID && sysID ? <NewMainStage revID={revID} sysID={sysID}/> : <DefaultMainStage/>}\n                    </Col>\n                    </Row>\n                </Grid>\n                <MyFooter style={{width: '100%'}}/>\n            </div>\n        </ThemeProvider>\n    )\n}\n","import React from 'react'\nimport { Navigate, Outlet } from 'react-router';\nimport { useUser } from '../Contexts/user.context';\n\nconst PublicRoute = () => {\n    const {user, isLoading} = useUser();\n\n    return user && !isLoading ? <Navigate to=\"/\"/> : <Outlet/>;\n}\n\nexport default PublicRoute;","import React from 'react';\nimport { Routes, Route, BrowserRouter} from 'react-router-dom';\n\n\nimport './styles/main.scss';\nimport './styles/utility.scss';\nimport 'rsuite/dist/rsuite.min.css';\n\nimport PrivateRoute from './misc/PrivateRoute';\nimport Landing from './Components/Pages/Landing';\nimport Main from './Components/Pages/Main';\nimport { UserProvider } from './Contexts/user.context';\nimport PublicRoute from './misc/PublicRoute';\n\nfunction App() {  \n  return (\n    <UserProvider>\n      <BrowserRouter>\n        <Routes>\n          <Route exact path='/' element={<PrivateRoute/>}>\n            <Route exact path='/' element={<Main/>}/>\n          </Route>\n          <Route exact path='/signin' element={<PublicRoute/>}>\n            <Route exact path='/signin' element={<Landing/>}/>\n          </Route>\n        </Routes>\n      </BrowserRouter>\n  </UserProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}